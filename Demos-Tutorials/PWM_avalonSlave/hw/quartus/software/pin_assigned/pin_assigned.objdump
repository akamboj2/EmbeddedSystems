
pin_assigned.elf:     file format elf32-littlenios2
pin_assigned.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0000f634 memsz 0x0000f634 flags r-x
    LOAD off    0x00010654 vaddr 0x0002f654 paddr 0x00031140 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012c2c vaddr 0x00032c2c paddr 0x00032c2c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f110  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000300  0002f354  0002f354  00010354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0002f654  00031140  00010654  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00032c2c  00032c2c  00012c2c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00032d8c  00032d8c  00012140  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012140  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e90  00000000  00000000  00012168  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022926  00000000  00000000  00012ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008cbf  00000000  00000000  0003591e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b179  00000000  00000000  0003e5dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000202c  00000000  00000000  00049758  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000036fd  00000000  00000000  0004b784  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017779  00000000  00000000  0004ee81  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000665fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001890  00000000  00000000  00066630  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006ae96  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006ae99  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006aea5  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006aea6  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006aea7  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006aeb2  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006aebd  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006aec8  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000002c  00000000  00000000  0006aed2  2**0
                  CONTENTS, READONLY
 26 .jdi          00005961  00000000  00000000  0006aefe  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00031843  00000000  00000000  0007085f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
0002f354 l    d  .rodata	00000000 .rodata
0002f654 l    d  .rwdata	00000000 .rwdata
00032c2c l    d  .bss	00000000 .bss
00032d8c l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../pin_assigned_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002f49a l     O .rodata	00000010 zeroes.4404
00023b18 l     F .text	000000bc __sbprintf
0002f4aa l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00023d28 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00025858 l     F .text	00000008 __fp_unlock
0002586c l     F .text	0000019c __sinit.part.1
00025a08 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0002f654 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0002fa98 l     O .rwdata	00000020 lc_ctype_charset
0002fa78 l     O .rwdata	00000020 lc_message_charset
0002fab8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0002f4dc l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00028320 l     F .text	000000fc __sprint_r.part.0
0002f610 l     O .rodata	00000010 blanks.4348
0002f600 l     O .rodata	00000010 zeroes.4349
000298ac l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0002ccb4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002cdc0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002cdec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002ced8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002cfb8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d0a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002d278 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00031130 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002d4c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002d5f8 l     F .text	00000034 alt_dev_reg
000300a0 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002d8d0 l     F .text	0000020c altera_avalon_jtag_uart_irq
0002dadc l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002e288 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002e6fc l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002e83c l     F .text	0000003c alt_get_errno
0002e878 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00032c60 g     O .bss	00000004 alt_instruction_exception_handler
00027e30 g     F .text	00000074 _mprec_log10
00027f1c g     F .text	0000008c __any_on
0002a304 g     F .text	00000054 _isatty_r
0002f4e8 g     O .rodata	00000028 __mprec_tinytens
0002d1b4 g     F .text	0000007c alt_main
00032c8c g     O .bss	00000100 alt_irq
0002a358 g     F .text	00000060 _lseek_r
00031140 g       *ABS*	00000000 __flash_rwdata_start
0002ca5c g     F .text	00000088 .hidden __eqdf2
00032d8c g       *ABS*	00000000 __alt_heap_start
000218c8 g     F .text	0000003c printf
0002ac30 g     F .text	0000009c _wcrtomb_r
00028148 g     F .text	0000005c __sseek
00025ba8 g     F .text	00000010 __sinit
0002aad8 g     F .text	00000140 __swbuf_r
000261b4 g     F .text	0000007c _setlocale_r
00025a10 g     F .text	00000068 __sfmoreglue
0002d254 g     F .text	00000024 __malloc_unlock
0002a3b8 g     F .text	0000015c memmove
00025b90 g     F .text	00000018 _cleanup
00026fac g     F .text	000000a8 _Balloc
0002061c g     F .text	000000dc .hidden __gtdf2
0002ec34 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
00029dec g     F .text	0000005c _fstat_r
00032c44 g     O .bss	00000004 errno
000280c4 g     F .text	00000008 __seofread
00032c4c g     O .bss	00000004 alt_argv
00039100 g       *ABS*	00000000 _gp
0002ff20 g     O .rwdata	00000180 alt_fd_list
0002ec58 g     F .text	00000090 alt_find_dev
00026d3c g     F .text	00000148 memcpy
00025860 g     F .text	0000000c _cleanup_r
0002cbd8 g     F .text	000000dc .hidden __floatsidf
0002e7c0 g     F .text	0000007c alt_io_redirect
0002cae4 g     F .text	000000f4 .hidden __ltdf2
0002f354 g       *ABS*	00000000 __DTOR_END__
0002ef24 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00027fa8 g     F .text	00000074 __fpclassifyd
00027d8c g     F .text	000000a4 __ratio
00029890 g     F .text	0000001c __vfiprintf_internal
0002dcd4 g     F .text	0000021c altera_avalon_jtag_uart_read
00020290 g     F .text	000000d4 generate_pwm
00021898 g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00020560 g     F .text	00000064 .hidden __udivsi3
0002cf14 g     F .text	000000a4 isatty
0002f538 g     O .rodata	000000c8 __mprec_tens
00026230 g     F .text	0000000c __locale_charset
000203f4 g     F .text	00000074 .hidden __fixunsdfsi
0002ee94 g     F .text	00000090 alt_icache_flush
00032c40 g     O .bss	00000004 __malloc_top_pad
00031108 g     O .rwdata	00000004 __mb_cur_max
00026260 g     F .text	0000000c _localeconv_r
00029e48 g     F .text	000004bc __sfvwrite_r
000273b8 g     F .text	0000003c __i2b
0002801c g     F .text	00000054 _sbrk_r
0002a514 g     F .text	00000060 _read_r
00031128 g     O .rwdata	00000004 alt_max_fd
00029ae0 g     F .text	000000f0 _fclose_r
00025828 g     F .text	00000030 fflush
00032c3c g     O .bss	00000004 __malloc_max_sbrked_mem
0002b8c8 g     F .text	000008ac .hidden __adddf3
00027b34 g     F .text	0000010c __b2d
0002b390 g     F .text	00000538 .hidden __umoddi3
0002d0e0 g     F .text	000000d4 lseek
00031100 g     O .rwdata	00000004 _global_impure_ptr
0002a574 g     F .text	00000564 _realloc_r
00032d8c g       *ABS*	00000000 __bss_end
0002e60c g     F .text	000000f0 alt_iic_isr_register
0002eb2c g     F .text	00000108 alt_tick
0002ae18 g     F .text	00000578 .hidden __udivdi3
00029d48 g     F .text	00000024 _fputwc_r
0002f510 g     O .rodata	00000028 __mprec_bigtens
0002719c g     F .text	00000104 __s2b
0002178c g     F .text	000000a8 .hidden __floatunsidf
00027874 g     F .text	00000060 __mcmp
00025bc8 g     F .text	00000018 __fp_lock_all
0002e5c0 g     F .text	0000004c alt_ic_irq_enabled
0002ea90 g     F .text	0000009c alt_alarm_stop
00032c54 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
0002fef8 g     O .rwdata	00000028 alt_dev_null
0002e240 g     F .text	00000048 alt_dcache_flush_all
000272a0 g     F .text	00000068 __hi0bits
0002170c g     F .text	00000080 .hidden __fixdfsi
00031140 g       *ABS*	00000000 __ram_rwdata_end
00031120 g     O .rwdata	00000008 alt_dev_list
0002d500 g     F .text	000000f8 write
0002f654 g       *ABS*	00000000 __ram_rodata_end
0002ce28 g     F .text	000000b0 fstat
0002cae4 g     F .text	000000f4 .hidden __ledf2
000275ec g     F .text	00000140 __pow5mult
00028434 g     F .text	0000145c ___vfiprintf_internal_r
00032c34 g     O .bss	00000004 __nlocale_changed
000205c4 g     F .text	00000058 .hidden __umodsi3
00032d8c g       *ABS*	00000000 end
0002d810 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0002f354 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
00021834 g     F .text	00000064 .hidden __clzsi2
0002def0 g     F .text	00000224 altera_avalon_jtag_uart_write
00025bb8 g     F .text	00000004 __sfp_lock_acquire
00026c58 g     F .text	000000e4 memchr
00021904 g     F .text	000021f8 ___vfprintf_internal_r
00025d1c g     F .text	00000310 _free_r
0002623c g     F .text	00000010 __locale_mb_cur_max
0002f1a0 g     F .text	00000180 __call_exitprocs
00032c30 g     O .bss	00000004 __mlocale_changed
0003110c g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00032c58 g     O .bss	00000004 _alt_tick_rate
0002772c g     F .text	00000148 __lshift
00032c5c g     O .bss	00000004 _alt_nticks
0002d2b4 g     F .text	000000fc read
0002d664 g     F .text	00000048 alt_sys_init
0002f088 g     F .text	00000118 __register_exitproc
000273f4 g     F .text	000001f8 __multiply
0002db7c g     F .text	00000068 altera_avalon_jtag_uart_close
0002f654 g       *ABS*	00000000 __ram_rwdata_start
0002f354 g       *ABS*	00000000 __ram_rodata_start
00032c64 g     O .bss	00000028 __malloc_current_mallinfo
00027c40 g     F .text	0000014c __d2b
0002d6ac g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002edf0 g     F .text	000000a4 alt_get_fd
000299c8 g     F .text	00000054 _close_r
0002f00c g     F .text	0000007c memcmp
0002d76c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00032d8c g       *ABS*	00000000 __alt_stack_base
0002d7bc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00023bd4 g     F .text	00000154 __swsetup_r
0002c174 g     F .text	000008e8 .hidden __divdf3
00025a78 g     F .text	00000118 __sfp
00027ea4 g     F .text	00000078 __copybits
0002faf0 g     O .rwdata	00000408 __malloc_av_
00025bc4 g     F .text	00000004 __sinit_lock_release
000206f8 g     F .text	00000718 .hidden __muldf3
00028070 g     F .text	00000054 __sread
0002ece8 g     F .text	00000108 alt_find_file
0002e2c4 g     F .text	000000a4 alt_dev_llist_insert
0002d230 g     F .text	00000024 __malloc_lock
0002d414 g     F .text	000000b0 sbrk
000257cc g     F .text	0000005c _fflush_r
00029a1c g     F .text	000000c4 _calloc_r
00032c2c g       *ABS*	00000000 __bss_start
00026e84 g     F .text	00000128 memset
00020364 g     F .text	00000090 main
00032c50 g     O .bss	00000004 alt_envp
00032c38 g     O .bss	00000004 __malloc_max_total_mem
0002d70c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002ac18 g     F .text	00000018 __swbuf
000281a4 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
00029bd0 g     F .text	00000014 fclose
00023f28 g     F .text	00001688 _dtoa_r
0002644c g     F .text	0000080c _malloc_r
0002ad8c g     F .text	00000030 __ascii_wctomb
0003112c g     O .rwdata	00000004 alt_errno
0002602c g     F .text	000000c4 _fwalk
00020468 g     F .text	00000084 .hidden __divsi3
00025bf8 g     F .text	00000124 _malloc_trim_r
0002f354 g       *ABS*	00000000 __CTOR_END__
000281ac g     F .text	000000dc strcmp
0002f354 g       *ABS*	00000000 __flash_rodata_start
0002f354 g       *ABS*	00000000 __DTOR_LIST__
0002ca5c g     F .text	00000088 .hidden __nedf2
0002d62c g     F .text	00000038 alt_irq_init
0002d3b0 g     F .text	00000064 alt_release_fd
0002f358 g     O .rodata	00000100 .hidden __clz_tab
00032c2c g     O .bss	00000004 _PathLocale
0002efc0 g     F .text	00000014 atexit
00029968 g     F .text	00000060 _write_r
0002626c g     F .text	00000018 setlocale
00031104 g     O .rwdata	00000004 _impure_ptr
00032c48 g     O .bss	00000004 alt_argc
000255b0 g     F .text	0000021c __sflush_r
0002e3c8 g     F .text	00000060 _do_dtors
00026258 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
00027ad0 g     F .text	00000064 __ulp
00025be0 g     F .text	00000018 __fp_unlock_all
00031118 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
00026284 g     F .text	0000000c localeconv
0002e45c g     F .text	00000050 alt_ic_isr_register
00031140 g       *ABS*	00000000 _edata
00032d8c g       *ABS*	00000000 _end
00029be4 g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002dbe4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002e534 g     F .text	0000008c alt_ic_irq_disable
000280cc g     F .text	0000007c __swrite
00031110 g     O .rwdata	00000004 __malloc_trim_threshold
0002624c g     F .text	0000000c __locale_msgcharset
0002efd4 g     F .text	00000038 exit
000260f0 g     F .text	000000c4 _fwalk_reent
000278d4 g     F .text	000001fc __mdiff
000204ec g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00025bbc g     F .text	00000004 __sfp_lock_release
0002f320 g     F .text	00000034 _exit
0002e114 g     F .text	0000012c alt_alarm_start
00026290 g     F .text	000001bc __smakebuf_r
00028288 g     F .text	00000098 strlen
0002e93c g     F .text	00000154 open
0002061c g     F .text	000000dc .hidden __gedf2
00031114 g     O .rwdata	00000004 __wctomb
0002841c g     F .text	00000018 __sprint_r
0002e428 g     F .text	00000034 alt_icache_flush_all
00031134 g     O .rwdata	00000004 alt_priority_mask
0002e4ac g     F .text	00000088 alt_ic_irq_enable
00023afc g     F .text	0000001c __vfprintf_internal
0002adbc g     F .text	0000005c _wctomb_r
00020e10 g     F .text	000008fc .hidden __subdf3
00027308 g     F .text	000000b0 __lo0bits
00031138 g     O .rwdata	00000008 alt_alarm_list
0002e368 g     F .text	00000060 _do_ctors
0002accc g     F .text	000000c0 wcrtomb
0002ccf0 g     F .text	000000d0 close
0002d020 g     F .text	00000084 alt_load
00029d6c g     F .text	00000080 fputwc
00025bc0 g     F .text	00000004 __sinit_lock_acquire
0002707c g     F .text	00000120 __multadd
00027054 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	108b2304 	addi	r2,r2,11404
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	108b2304 	addi	r2,r2,11404
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6d817 	ldw	r2,-25760(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6d817 	ldw	r2,-25760(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6a44014 	ori	gp,gp,37120
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	108b0b14 	ori	r2,r2,11308

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18cb6314 	ori	r3,r3,11660

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002d0200 	call	2d020 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002d1b40 	call	2d1b4 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_data_end+0xfffe028c>

00020290 <generate_pwm>:

/* generate_pwm:
* inputs: period in milliseconds, percent duty cycle, and polarity (either 0 or 1).
* sets the Avalon bus registers to output a pwm with these characteristics.
*/
void generate_pwm(int period, double dc, int polarity){
   20290:	defff704 	addi	sp,sp,-36
   20294:	dfc00815 	stw	ra,32(sp)
   20298:	df000715 	stw	fp,28(sp)
   2029c:	df000704 	addi	fp,sp,28
   202a0:	e13ffc15 	stw	r4,-16(fp)
   202a4:	e17ffd15 	stw	r5,-12(fp)
   202a8:	e1bffe15 	stw	r6,-8(fp)
   202ac:	e1ffff15 	stw	r7,-4(fp)
	uint32_t set_period = period*1000000/20; //convert ms to ns and clk period is 20 ns so divide by that
   202b0:	e0fffc17 	ldw	r3,-16(fp)
   202b4:	008003f4 	movhi	r2,15
   202b8:	10909004 	addi	r2,r2,16960
   202bc:	1885383a 	mul	r2,r3,r2
   202c0:	01400504 	movi	r5,20
   202c4:	1009883a 	mov	r4,r2
   202c8:	00204680 	call	20468 <__divsi3>
   202cc:	e0bff915 	stw	r2,-28(fp)
	uint32_t set_dc = set_period*dc;
   202d0:	e13ff917 	ldw	r4,-28(fp)
   202d4:	002178c0 	call	2178c <__floatunsidf>
   202d8:	1011883a 	mov	r8,r2
   202dc:	1813883a 	mov	r9,r3
   202e0:	e1bffd17 	ldw	r6,-12(fp)
   202e4:	e1fffe17 	ldw	r7,-8(fp)
   202e8:	4009883a 	mov	r4,r8
   202ec:	480b883a 	mov	r5,r9
   202f0:	00206f80 	call	206f8 <__muldf3>
   202f4:	1009883a 	mov	r4,r2
   202f8:	180b883a 	mov	r5,r3
   202fc:	2005883a 	mov	r2,r4
   20300:	2807883a 	mov	r3,r5
   20304:	1009883a 	mov	r4,r2
   20308:	180b883a 	mov	r5,r3
   2030c:	00203f40 	call	203f4 <__fixunsdfsi>
   20310:	e0bffa15 	stw	r2,-24(fp)
	uint32_t set_pol = polarity;
   20314:	e0bfff17 	ldw	r2,-4(fp)
   20318:	e0bffb15 	stw	r2,-20(fp)

	IOWR_32DIRECT(PWM_0_BASE, 0, set_period);
   2031c:	e0fff917 	ldw	r3,-28(fp)
   20320:	00800134 	movhi	r2,4
   20324:	10840004 	addi	r2,r2,4096
   20328:	10c00035 	stwio	r3,0(r2)
	IOWR_32DIRECT(PWM_0_BASE, 1, set_dc);
   2032c:	e0fffa17 	ldw	r3,-24(fp)
   20330:	00800134 	movhi	r2,4
   20334:	10840044 	addi	r2,r2,4097
   20338:	10c00035 	stwio	r3,0(r2)
	IOWR_32DIRECT(PWM_0_BASE, 2, set_pol);
   2033c:	e0fffb17 	ldw	r3,-20(fp)
   20340:	00800134 	movhi	r2,4
   20344:	10840084 	addi	r2,r2,4098
   20348:	10c00035 	stwio	r3,0(r2)
}
   2034c:	0001883a 	nop
   20350:	e037883a 	mov	sp,fp
   20354:	dfc00117 	ldw	ra,4(sp)
   20358:	df000017 	ldw	fp,0(sp)
   2035c:	dec00204 	addi	sp,sp,8
   20360:	f800283a 	ret

00020364 <main>:

int main()
{
   20364:	defffd04 	addi	sp,sp,-12
   20368:	dfc00215 	stw	ra,8(sp)
   2036c:	df000115 	stw	fp,4(sp)
   20370:	df000104 	addi	fp,sp,4
	//this code should repeatedly move the arm of a servo motor back and fourth with a short pause in between
	//the servo should be connected to GPIO_0 pin 1 header of the board and gnd which is GPIO_0 pin 12

	int i =0;
   20374:	e03fff15 	stw	zero,-4(fp)
	//generate_pwm(20, .5, 1);
	//while(1){
		IOWR_32DIRECT(PWM_0_BASE, 0, 0xFFFFFFFF);
   20378:	00ffffc4 	movi	r3,-1
   2037c:	00800134 	movhi	r2,4
   20380:	10840004 	addi	r2,r2,4096
   20384:	10c00035 	stwio	r3,0(r2)
		printf("%x\n",IORD_32DIRECT(PWM_0_BASE, 0));
   20388:	00800134 	movhi	r2,4
   2038c:	10840004 	addi	r2,r2,4096
   20390:	10800037 	ldwio	r2,0(r2)
   20394:	100b883a 	mov	r5,r2
   20398:	010000f4 	movhi	r4,3
   2039c:	213cd504 	addi	r4,r4,-3244
   203a0:	00218c80 	call	218c8 <printf>
		printf("%x\n",IORD_32DIRECT(PWM_0_BASE, 1));
   203a4:	00800134 	movhi	r2,4
   203a8:	10840044 	addi	r2,r2,4097
   203ac:	10800037 	ldwio	r2,0(r2)
   203b0:	100b883a 	mov	r5,r2
   203b4:	010000f4 	movhi	r4,3
   203b8:	213cd504 	addi	r4,r4,-3244
   203bc:	00218c80 	call	218c8 <printf>
		printf("%x\n",IORD_32DIRECT(PWM_0_BASE, 2));
   203c0:	00800134 	movhi	r2,4
   203c4:	10840084 	addi	r2,r2,4098
   203c8:	10800037 	ldwio	r2,0(r2)
   203cc:	100b883a 	mov	r5,r2
   203d0:	010000f4 	movhi	r4,3
   203d4:	213cd504 	addi	r4,r4,-3244
   203d8:	00218c80 	call	218c8 <printf>
//		generate_pwm(20, .05, 1);
//		for (i=0; i<1000000; i++);
//		generate_pwm(20, .1, 1);
//		for(i=0;i<1000000; i++);
//	}
	return 0;
   203dc:	0005883a 	mov	r2,zero
}
   203e0:	e037883a 	mov	sp,fp
   203e4:	dfc00117 	ldw	ra,4(sp)
   203e8:	df000017 	ldw	fp,0(sp)
   203ec:	dec00204 	addi	sp,sp,8
   203f0:	f800283a 	ret

000203f4 <__fixunsdfsi>:
   203f4:	defffd04 	addi	sp,sp,-12
   203f8:	000d883a 	mov	r6,zero
   203fc:	01d07834 	movhi	r7,16864
   20400:	dc400115 	stw	r17,4(sp)
   20404:	dc000015 	stw	r16,0(sp)
   20408:	dfc00215 	stw	ra,8(sp)
   2040c:	2023883a 	mov	r17,r4
   20410:	2821883a 	mov	r16,r5
   20414:	002061c0 	call	2061c <__gedf2>
   20418:	1000080e 	bge	r2,zero,2043c <__fixunsdfsi+0x48>
   2041c:	8809883a 	mov	r4,r17
   20420:	800b883a 	mov	r5,r16
   20424:	002170c0 	call	2170c <__fixdfsi>
   20428:	dfc00217 	ldw	ra,8(sp)
   2042c:	dc400117 	ldw	r17,4(sp)
   20430:	dc000017 	ldw	r16,0(sp)
   20434:	dec00304 	addi	sp,sp,12
   20438:	f800283a 	ret
   2043c:	000d883a 	mov	r6,zero
   20440:	01d07834 	movhi	r7,16864
   20444:	8809883a 	mov	r4,r17
   20448:	800b883a 	mov	r5,r16
   2044c:	0020e100 	call	20e10 <__subdf3>
   20450:	180b883a 	mov	r5,r3
   20454:	1009883a 	mov	r4,r2
   20458:	002170c0 	call	2170c <__fixdfsi>
   2045c:	00e00034 	movhi	r3,32768
   20460:	10c5883a 	add	r2,r2,r3
   20464:	003ff006 	br	20428 <__alt_data_end+0xfffe0428>

00020468 <__divsi3>:
   20468:	20001b16 	blt	r4,zero,204d8 <__divsi3+0x70>
   2046c:	000f883a 	mov	r7,zero
   20470:	28001616 	blt	r5,zero,204cc <__divsi3+0x64>
   20474:	200d883a 	mov	r6,r4
   20478:	29001a2e 	bgeu	r5,r4,204e4 <__divsi3+0x7c>
   2047c:	00800804 	movi	r2,32
   20480:	00c00044 	movi	r3,1
   20484:	00000106 	br	2048c <__divsi3+0x24>
   20488:	10000d26 	beq	r2,zero,204c0 <__divsi3+0x58>
   2048c:	294b883a 	add	r5,r5,r5
   20490:	10bfffc4 	addi	r2,r2,-1
   20494:	18c7883a 	add	r3,r3,r3
   20498:	293ffb36 	bltu	r5,r4,20488 <__alt_data_end+0xfffe0488>
   2049c:	0005883a 	mov	r2,zero
   204a0:	18000726 	beq	r3,zero,204c0 <__divsi3+0x58>
   204a4:	0005883a 	mov	r2,zero
   204a8:	31400236 	bltu	r6,r5,204b4 <__divsi3+0x4c>
   204ac:	314dc83a 	sub	r6,r6,r5
   204b0:	10c4b03a 	or	r2,r2,r3
   204b4:	1806d07a 	srli	r3,r3,1
   204b8:	280ad07a 	srli	r5,r5,1
   204bc:	183ffa1e 	bne	r3,zero,204a8 <__alt_data_end+0xfffe04a8>
   204c0:	38000126 	beq	r7,zero,204c8 <__divsi3+0x60>
   204c4:	0085c83a 	sub	r2,zero,r2
   204c8:	f800283a 	ret
   204cc:	014bc83a 	sub	r5,zero,r5
   204d0:	39c0005c 	xori	r7,r7,1
   204d4:	003fe706 	br	20474 <__alt_data_end+0xfffe0474>
   204d8:	0109c83a 	sub	r4,zero,r4
   204dc:	01c00044 	movi	r7,1
   204e0:	003fe306 	br	20470 <__alt_data_end+0xfffe0470>
   204e4:	00c00044 	movi	r3,1
   204e8:	003fee06 	br	204a4 <__alt_data_end+0xfffe04a4>

000204ec <__modsi3>:
   204ec:	20001716 	blt	r4,zero,2054c <__modsi3+0x60>
   204f0:	000f883a 	mov	r7,zero
   204f4:	2005883a 	mov	r2,r4
   204f8:	28001216 	blt	r5,zero,20544 <__modsi3+0x58>
   204fc:	2900162e 	bgeu	r5,r4,20558 <__modsi3+0x6c>
   20500:	01800804 	movi	r6,32
   20504:	00c00044 	movi	r3,1
   20508:	00000106 	br	20510 <__modsi3+0x24>
   2050c:	30000a26 	beq	r6,zero,20538 <__modsi3+0x4c>
   20510:	294b883a 	add	r5,r5,r5
   20514:	31bfffc4 	addi	r6,r6,-1
   20518:	18c7883a 	add	r3,r3,r3
   2051c:	293ffb36 	bltu	r5,r4,2050c <__alt_data_end+0xfffe050c>
   20520:	18000526 	beq	r3,zero,20538 <__modsi3+0x4c>
   20524:	1806d07a 	srli	r3,r3,1
   20528:	11400136 	bltu	r2,r5,20530 <__modsi3+0x44>
   2052c:	1145c83a 	sub	r2,r2,r5
   20530:	280ad07a 	srli	r5,r5,1
   20534:	183ffb1e 	bne	r3,zero,20524 <__alt_data_end+0xfffe0524>
   20538:	38000126 	beq	r7,zero,20540 <__modsi3+0x54>
   2053c:	0085c83a 	sub	r2,zero,r2
   20540:	f800283a 	ret
   20544:	014bc83a 	sub	r5,zero,r5
   20548:	003fec06 	br	204fc <__alt_data_end+0xfffe04fc>
   2054c:	0109c83a 	sub	r4,zero,r4
   20550:	01c00044 	movi	r7,1
   20554:	003fe706 	br	204f4 <__alt_data_end+0xfffe04f4>
   20558:	00c00044 	movi	r3,1
   2055c:	003ff106 	br	20524 <__alt_data_end+0xfffe0524>

00020560 <__udivsi3>:
   20560:	200d883a 	mov	r6,r4
   20564:	2900152e 	bgeu	r5,r4,205bc <__udivsi3+0x5c>
   20568:	28001416 	blt	r5,zero,205bc <__udivsi3+0x5c>
   2056c:	00800804 	movi	r2,32
   20570:	00c00044 	movi	r3,1
   20574:	00000206 	br	20580 <__udivsi3+0x20>
   20578:	10000e26 	beq	r2,zero,205b4 <__udivsi3+0x54>
   2057c:	28000516 	blt	r5,zero,20594 <__udivsi3+0x34>
   20580:	294b883a 	add	r5,r5,r5
   20584:	10bfffc4 	addi	r2,r2,-1
   20588:	18c7883a 	add	r3,r3,r3
   2058c:	293ffa36 	bltu	r5,r4,20578 <__alt_data_end+0xfffe0578>
   20590:	18000826 	beq	r3,zero,205b4 <__udivsi3+0x54>
   20594:	0005883a 	mov	r2,zero
   20598:	31400236 	bltu	r6,r5,205a4 <__udivsi3+0x44>
   2059c:	314dc83a 	sub	r6,r6,r5
   205a0:	10c4b03a 	or	r2,r2,r3
   205a4:	1806d07a 	srli	r3,r3,1
   205a8:	280ad07a 	srli	r5,r5,1
   205ac:	183ffa1e 	bne	r3,zero,20598 <__alt_data_end+0xfffe0598>
   205b0:	f800283a 	ret
   205b4:	0005883a 	mov	r2,zero
   205b8:	f800283a 	ret
   205bc:	00c00044 	movi	r3,1
   205c0:	003ff406 	br	20594 <__alt_data_end+0xfffe0594>

000205c4 <__umodsi3>:
   205c4:	2005883a 	mov	r2,r4
   205c8:	2900122e 	bgeu	r5,r4,20614 <__umodsi3+0x50>
   205cc:	28001116 	blt	r5,zero,20614 <__umodsi3+0x50>
   205d0:	01800804 	movi	r6,32
   205d4:	00c00044 	movi	r3,1
   205d8:	00000206 	br	205e4 <__umodsi3+0x20>
   205dc:	30000c26 	beq	r6,zero,20610 <__umodsi3+0x4c>
   205e0:	28000516 	blt	r5,zero,205f8 <__umodsi3+0x34>
   205e4:	294b883a 	add	r5,r5,r5
   205e8:	31bfffc4 	addi	r6,r6,-1
   205ec:	18c7883a 	add	r3,r3,r3
   205f0:	293ffa36 	bltu	r5,r4,205dc <__alt_data_end+0xfffe05dc>
   205f4:	18000626 	beq	r3,zero,20610 <__umodsi3+0x4c>
   205f8:	1806d07a 	srli	r3,r3,1
   205fc:	11400136 	bltu	r2,r5,20604 <__umodsi3+0x40>
   20600:	1145c83a 	sub	r2,r2,r5
   20604:	280ad07a 	srli	r5,r5,1
   20608:	183ffb1e 	bne	r3,zero,205f8 <__alt_data_end+0xfffe05f8>
   2060c:	f800283a 	ret
   20610:	f800283a 	ret
   20614:	00c00044 	movi	r3,1
   20618:	003ff706 	br	205f8 <__alt_data_end+0xfffe05f8>

0002061c <__gedf2>:
   2061c:	2804d53a 	srli	r2,r5,20
   20620:	3806d53a 	srli	r3,r7,20
   20624:	02000434 	movhi	r8,16
   20628:	423fffc4 	addi	r8,r8,-1
   2062c:	1081ffcc 	andi	r2,r2,2047
   20630:	0241ffc4 	movi	r9,2047
   20634:	2a14703a 	and	r10,r5,r8
   20638:	18c1ffcc 	andi	r3,r3,2047
   2063c:	3a10703a 	and	r8,r7,r8
   20640:	280ad7fa 	srli	r5,r5,31
   20644:	380ed7fa 	srli	r7,r7,31
   20648:	12401d26 	beq	r2,r9,206c0 <__gedf2+0xa4>
   2064c:	0241ffc4 	movi	r9,2047
   20650:	1a401226 	beq	r3,r9,2069c <__gedf2+0x80>
   20654:	1000081e 	bne	r2,zero,20678 <__gedf2+0x5c>
   20658:	2296b03a 	or	r11,r4,r10
   2065c:	5813003a 	cmpeq	r9,r11,zero
   20660:	1800091e 	bne	r3,zero,20688 <__gedf2+0x6c>
   20664:	3218b03a 	or	r12,r6,r8
   20668:	6000071e 	bne	r12,zero,20688 <__gedf2+0x6c>
   2066c:	0005883a 	mov	r2,zero
   20670:	5800101e 	bne	r11,zero,206b4 <__gedf2+0x98>
   20674:	f800283a 	ret
   20678:	18000c1e 	bne	r3,zero,206ac <__gedf2+0x90>
   2067c:	3212b03a 	or	r9,r6,r8
   20680:	48000c26 	beq	r9,zero,206b4 <__gedf2+0x98>
   20684:	0013883a 	mov	r9,zero
   20688:	39c03fcc 	andi	r7,r7,255
   2068c:	48000826 	beq	r9,zero,206b0 <__gedf2+0x94>
   20690:	38000926 	beq	r7,zero,206b8 <__gedf2+0x9c>
   20694:	00800044 	movi	r2,1
   20698:	f800283a 	ret
   2069c:	3212b03a 	or	r9,r6,r8
   206a0:	483fec26 	beq	r9,zero,20654 <__alt_data_end+0xfffe0654>
   206a4:	00bfff84 	movi	r2,-2
   206a8:	f800283a 	ret
   206ac:	39c03fcc 	andi	r7,r7,255
   206b0:	29c00626 	beq	r5,r7,206cc <__gedf2+0xb0>
   206b4:	283ff726 	beq	r5,zero,20694 <__alt_data_end+0xfffe0694>
   206b8:	00bfffc4 	movi	r2,-1
   206bc:	f800283a 	ret
   206c0:	2292b03a 	or	r9,r4,r10
   206c4:	483fe126 	beq	r9,zero,2064c <__alt_data_end+0xfffe064c>
   206c8:	003ff606 	br	206a4 <__alt_data_end+0xfffe06a4>
   206cc:	18bff916 	blt	r3,r2,206b4 <__alt_data_end+0xfffe06b4>
   206d0:	10c00316 	blt	r2,r3,206e0 <__gedf2+0xc4>
   206d4:	42bff736 	bltu	r8,r10,206b4 <__alt_data_end+0xfffe06b4>
   206d8:	52000326 	beq	r10,r8,206e8 <__gedf2+0xcc>
   206dc:	5200042e 	bgeu	r10,r8,206f0 <__gedf2+0xd4>
   206e0:	283fec1e 	bne	r5,zero,20694 <__alt_data_end+0xfffe0694>
   206e4:	003ff406 	br	206b8 <__alt_data_end+0xfffe06b8>
   206e8:	313ff236 	bltu	r6,r4,206b4 <__alt_data_end+0xfffe06b4>
   206ec:	21bffc36 	bltu	r4,r6,206e0 <__alt_data_end+0xfffe06e0>
   206f0:	0005883a 	mov	r2,zero
   206f4:	f800283a 	ret

000206f8 <__muldf3>:
   206f8:	defff304 	addi	sp,sp,-52
   206fc:	2804d53a 	srli	r2,r5,20
   20700:	dd800915 	stw	r22,36(sp)
   20704:	282cd7fa 	srli	r22,r5,31
   20708:	dc000315 	stw	r16,12(sp)
   2070c:	04000434 	movhi	r16,16
   20710:	dd400815 	stw	r21,32(sp)
   20714:	dc800515 	stw	r18,20(sp)
   20718:	843fffc4 	addi	r16,r16,-1
   2071c:	dfc00c15 	stw	ra,48(sp)
   20720:	df000b15 	stw	fp,44(sp)
   20724:	ddc00a15 	stw	r23,40(sp)
   20728:	dd000715 	stw	r20,28(sp)
   2072c:	dcc00615 	stw	r19,24(sp)
   20730:	dc400415 	stw	r17,16(sp)
   20734:	1481ffcc 	andi	r18,r2,2047
   20738:	2c20703a 	and	r16,r5,r16
   2073c:	b02b883a 	mov	r21,r22
   20740:	b2403fcc 	andi	r9,r22,255
   20744:	90006026 	beq	r18,zero,208c8 <__muldf3+0x1d0>
   20748:	0081ffc4 	movi	r2,2047
   2074c:	2029883a 	mov	r20,r4
   20750:	90803626 	beq	r18,r2,2082c <__muldf3+0x134>
   20754:	80800434 	orhi	r2,r16,16
   20758:	100490fa 	slli	r2,r2,3
   2075c:	2020d77a 	srli	r16,r4,29
   20760:	202890fa 	slli	r20,r4,3
   20764:	94bf0044 	addi	r18,r18,-1023
   20768:	80a0b03a 	or	r16,r16,r2
   2076c:	0027883a 	mov	r19,zero
   20770:	0039883a 	mov	fp,zero
   20774:	3804d53a 	srli	r2,r7,20
   20778:	382ed7fa 	srli	r23,r7,31
   2077c:	04400434 	movhi	r17,16
   20780:	8c7fffc4 	addi	r17,r17,-1
   20784:	1081ffcc 	andi	r2,r2,2047
   20788:	3011883a 	mov	r8,r6
   2078c:	3c62703a 	and	r17,r7,r17
   20790:	ba803fcc 	andi	r10,r23,255
   20794:	10006d26 	beq	r2,zero,2094c <__muldf3+0x254>
   20798:	00c1ffc4 	movi	r3,2047
   2079c:	10c06526 	beq	r2,r3,20934 <__muldf3+0x23c>
   207a0:	88c00434 	orhi	r3,r17,16
   207a4:	180690fa 	slli	r3,r3,3
   207a8:	3022d77a 	srli	r17,r6,29
   207ac:	301090fa 	slli	r8,r6,3
   207b0:	10bf0044 	addi	r2,r2,-1023
   207b4:	88e2b03a 	or	r17,r17,r3
   207b8:	000b883a 	mov	r5,zero
   207bc:	9085883a 	add	r2,r18,r2
   207c0:	2cc8b03a 	or	r4,r5,r19
   207c4:	00c003c4 	movi	r3,15
   207c8:	bdacf03a 	xor	r22,r23,r22
   207cc:	12c00044 	addi	r11,r2,1
   207d0:	19009936 	bltu	r3,r4,20a38 <__muldf3+0x340>
   207d4:	200890ba 	slli	r4,r4,2
   207d8:	00c000b4 	movhi	r3,2
   207dc:	18c1fb04 	addi	r3,r3,2028
   207e0:	20c9883a 	add	r4,r4,r3
   207e4:	20c00017 	ldw	r3,0(r4)
   207e8:	1800683a 	jmp	r3
   207ec:	00020a38 	rdprs	zero,zero,2088
   207f0:	0002084c 	andi	zero,zero,2081
   207f4:	0002084c 	andi	zero,zero,2081
   207f8:	00020848 	cmpgei	zero,zero,2081
   207fc:	00020a14 	movui	zero,2088
   20800:	00020a14 	movui	zero,2088
   20804:	000209fc 	xorhi	zero,zero,2087
   20808:	00020848 	cmpgei	zero,zero,2081
   2080c:	00020a14 	movui	zero,2088
   20810:	000209fc 	xorhi	zero,zero,2087
   20814:	00020a14 	movui	zero,2088
   20818:	00020848 	cmpgei	zero,zero,2081
   2081c:	00020a24 	muli	zero,zero,2088
   20820:	00020a24 	muli	zero,zero,2088
   20824:	00020a24 	muli	zero,zero,2088
   20828:	00020c40 	call	20c4 <__alt_mem_onchip_memory2_0-0x1df3c>
   2082c:	2404b03a 	or	r2,r4,r16
   20830:	10006f1e 	bne	r2,zero,209f0 <__muldf3+0x2f8>
   20834:	04c00204 	movi	r19,8
   20838:	0021883a 	mov	r16,zero
   2083c:	0029883a 	mov	r20,zero
   20840:	07000084 	movi	fp,2
   20844:	003fcb06 	br	20774 <__alt_data_end+0xfffe0774>
   20848:	502d883a 	mov	r22,r10
   2084c:	00800084 	movi	r2,2
   20850:	28805726 	beq	r5,r2,209b0 <__muldf3+0x2b8>
   20854:	008000c4 	movi	r2,3
   20858:	28816626 	beq	r5,r2,20df4 <__muldf3+0x6fc>
   2085c:	00800044 	movi	r2,1
   20860:	2881411e 	bne	r5,r2,20d68 <__muldf3+0x670>
   20864:	b02b883a 	mov	r21,r22
   20868:	0005883a 	mov	r2,zero
   2086c:	000b883a 	mov	r5,zero
   20870:	0029883a 	mov	r20,zero
   20874:	1004953a 	slli	r2,r2,20
   20878:	a8c03fcc 	andi	r3,r21,255
   2087c:	04400434 	movhi	r17,16
   20880:	8c7fffc4 	addi	r17,r17,-1
   20884:	180697fa 	slli	r3,r3,31
   20888:	2c4a703a 	and	r5,r5,r17
   2088c:	288ab03a 	or	r5,r5,r2
   20890:	28c6b03a 	or	r3,r5,r3
   20894:	a005883a 	mov	r2,r20
   20898:	dfc00c17 	ldw	ra,48(sp)
   2089c:	df000b17 	ldw	fp,44(sp)
   208a0:	ddc00a17 	ldw	r23,40(sp)
   208a4:	dd800917 	ldw	r22,36(sp)
   208a8:	dd400817 	ldw	r21,32(sp)
   208ac:	dd000717 	ldw	r20,28(sp)
   208b0:	dcc00617 	ldw	r19,24(sp)
   208b4:	dc800517 	ldw	r18,20(sp)
   208b8:	dc400417 	ldw	r17,16(sp)
   208bc:	dc000317 	ldw	r16,12(sp)
   208c0:	dec00d04 	addi	sp,sp,52
   208c4:	f800283a 	ret
   208c8:	2404b03a 	or	r2,r4,r16
   208cc:	2027883a 	mov	r19,r4
   208d0:	10004226 	beq	r2,zero,209dc <__muldf3+0x2e4>
   208d4:	8000fc26 	beq	r16,zero,20cc8 <__muldf3+0x5d0>
   208d8:	8009883a 	mov	r4,r16
   208dc:	d9800215 	stw	r6,8(sp)
   208e0:	d9c00015 	stw	r7,0(sp)
   208e4:	da400115 	stw	r9,4(sp)
   208e8:	00218340 	call	21834 <__clzsi2>
   208ec:	d9800217 	ldw	r6,8(sp)
   208f0:	d9c00017 	ldw	r7,0(sp)
   208f4:	da400117 	ldw	r9,4(sp)
   208f8:	113ffd44 	addi	r4,r2,-11
   208fc:	00c00704 	movi	r3,28
   20900:	1900ed16 	blt	r3,r4,20cb8 <__muldf3+0x5c0>
   20904:	00c00744 	movi	r3,29
   20908:	147ffe04 	addi	r17,r2,-8
   2090c:	1907c83a 	sub	r3,r3,r4
   20910:	8460983a 	sll	r16,r16,r17
   20914:	98c6d83a 	srl	r3,r19,r3
   20918:	9c68983a 	sll	r20,r19,r17
   2091c:	1c20b03a 	or	r16,r3,r16
   20920:	1080fcc4 	addi	r2,r2,1011
   20924:	00a5c83a 	sub	r18,zero,r2
   20928:	0027883a 	mov	r19,zero
   2092c:	0039883a 	mov	fp,zero
   20930:	003f9006 	br	20774 <__alt_data_end+0xfffe0774>
   20934:	3446b03a 	or	r3,r6,r17
   20938:	1800261e 	bne	r3,zero,209d4 <__muldf3+0x2dc>
   2093c:	0023883a 	mov	r17,zero
   20940:	0011883a 	mov	r8,zero
   20944:	01400084 	movi	r5,2
   20948:	003f9c06 	br	207bc <__alt_data_end+0xfffe07bc>
   2094c:	3446b03a 	or	r3,r6,r17
   20950:	18001c26 	beq	r3,zero,209c4 <__muldf3+0x2cc>
   20954:	8800ce26 	beq	r17,zero,20c90 <__muldf3+0x598>
   20958:	8809883a 	mov	r4,r17
   2095c:	d9800215 	stw	r6,8(sp)
   20960:	da400115 	stw	r9,4(sp)
   20964:	da800015 	stw	r10,0(sp)
   20968:	00218340 	call	21834 <__clzsi2>
   2096c:	d9800217 	ldw	r6,8(sp)
   20970:	da400117 	ldw	r9,4(sp)
   20974:	da800017 	ldw	r10,0(sp)
   20978:	113ffd44 	addi	r4,r2,-11
   2097c:	00c00704 	movi	r3,28
   20980:	1900bf16 	blt	r3,r4,20c80 <__muldf3+0x588>
   20984:	00c00744 	movi	r3,29
   20988:	123ffe04 	addi	r8,r2,-8
   2098c:	1907c83a 	sub	r3,r3,r4
   20990:	8a22983a 	sll	r17,r17,r8
   20994:	30c6d83a 	srl	r3,r6,r3
   20998:	3210983a 	sll	r8,r6,r8
   2099c:	1c62b03a 	or	r17,r3,r17
   209a0:	1080fcc4 	addi	r2,r2,1011
   209a4:	0085c83a 	sub	r2,zero,r2
   209a8:	000b883a 	mov	r5,zero
   209ac:	003f8306 	br	207bc <__alt_data_end+0xfffe07bc>
   209b0:	b02b883a 	mov	r21,r22
   209b4:	0081ffc4 	movi	r2,2047
   209b8:	000b883a 	mov	r5,zero
   209bc:	0029883a 	mov	r20,zero
   209c0:	003fac06 	br	20874 <__alt_data_end+0xfffe0874>
   209c4:	0023883a 	mov	r17,zero
   209c8:	0011883a 	mov	r8,zero
   209cc:	01400044 	movi	r5,1
   209d0:	003f7a06 	br	207bc <__alt_data_end+0xfffe07bc>
   209d4:	014000c4 	movi	r5,3
   209d8:	003f7806 	br	207bc <__alt_data_end+0xfffe07bc>
   209dc:	04c00104 	movi	r19,4
   209e0:	0021883a 	mov	r16,zero
   209e4:	0029883a 	mov	r20,zero
   209e8:	07000044 	movi	fp,1
   209ec:	003f6106 	br	20774 <__alt_data_end+0xfffe0774>
   209f0:	04c00304 	movi	r19,12
   209f4:	070000c4 	movi	fp,3
   209f8:	003f5e06 	br	20774 <__alt_data_end+0xfffe0774>
   209fc:	01400434 	movhi	r5,16
   20a00:	002b883a 	mov	r21,zero
   20a04:	297fffc4 	addi	r5,r5,-1
   20a08:	053fffc4 	movi	r20,-1
   20a0c:	0081ffc4 	movi	r2,2047
   20a10:	003f9806 	br	20874 <__alt_data_end+0xfffe0874>
   20a14:	8023883a 	mov	r17,r16
   20a18:	a011883a 	mov	r8,r20
   20a1c:	e00b883a 	mov	r5,fp
   20a20:	003f8a06 	br	2084c <__alt_data_end+0xfffe084c>
   20a24:	8023883a 	mov	r17,r16
   20a28:	a011883a 	mov	r8,r20
   20a2c:	482d883a 	mov	r22,r9
   20a30:	e00b883a 	mov	r5,fp
   20a34:	003f8506 	br	2084c <__alt_data_end+0xfffe084c>
   20a38:	a00ad43a 	srli	r5,r20,16
   20a3c:	401ad43a 	srli	r13,r8,16
   20a40:	a53fffcc 	andi	r20,r20,65535
   20a44:	423fffcc 	andi	r8,r8,65535
   20a48:	4519383a 	mul	r12,r8,r20
   20a4c:	4147383a 	mul	r3,r8,r5
   20a50:	6d09383a 	mul	r4,r13,r20
   20a54:	600cd43a 	srli	r6,r12,16
   20a58:	2b5d383a 	mul	r14,r5,r13
   20a5c:	20c9883a 	add	r4,r4,r3
   20a60:	310d883a 	add	r6,r6,r4
   20a64:	30c0022e 	bgeu	r6,r3,20a70 <__muldf3+0x378>
   20a68:	00c00074 	movhi	r3,1
   20a6c:	70dd883a 	add	r14,r14,r3
   20a70:	8826d43a 	srli	r19,r17,16
   20a74:	8bffffcc 	andi	r15,r17,65535
   20a78:	7d23383a 	mul	r17,r15,r20
   20a7c:	7949383a 	mul	r4,r15,r5
   20a80:	9d29383a 	mul	r20,r19,r20
   20a84:	8814d43a 	srli	r10,r17,16
   20a88:	3012943a 	slli	r9,r6,16
   20a8c:	a129883a 	add	r20,r20,r4
   20a90:	633fffcc 	andi	r12,r12,65535
   20a94:	5515883a 	add	r10,r10,r20
   20a98:	3006d43a 	srli	r3,r6,16
   20a9c:	4b13883a 	add	r9,r9,r12
   20aa0:	2ccb383a 	mul	r5,r5,r19
   20aa4:	5100022e 	bgeu	r10,r4,20ab0 <__muldf3+0x3b8>
   20aa8:	01000074 	movhi	r4,1
   20aac:	290b883a 	add	r5,r5,r4
   20ab0:	802ad43a 	srli	r21,r16,16
   20ab4:	843fffcc 	andi	r16,r16,65535
   20ab8:	440d383a 	mul	r6,r8,r16
   20abc:	4565383a 	mul	r18,r8,r21
   20ac0:	8349383a 	mul	r4,r16,r13
   20ac4:	500e943a 	slli	r7,r10,16
   20ac8:	3010d43a 	srli	r8,r6,16
   20acc:	5028d43a 	srli	r20,r10,16
   20ad0:	2489883a 	add	r4,r4,r18
   20ad4:	8abfffcc 	andi	r10,r17,65535
   20ad8:	3a95883a 	add	r10,r7,r10
   20adc:	4119883a 	add	r12,r8,r4
   20ae0:	a169883a 	add	r20,r20,r5
   20ae4:	1a87883a 	add	r3,r3,r10
   20ae8:	6d5b383a 	mul	r13,r13,r21
   20aec:	6480022e 	bgeu	r12,r18,20af8 <__muldf3+0x400>
   20af0:	01000074 	movhi	r4,1
   20af4:	691b883a 	add	r13,r13,r4
   20af8:	7c25383a 	mul	r18,r15,r16
   20afc:	7d4b383a 	mul	r5,r15,r21
   20b00:	84cf383a 	mul	r7,r16,r19
   20b04:	901ed43a 	srli	r15,r18,16
   20b08:	6008d43a 	srli	r4,r12,16
   20b0c:	6010943a 	slli	r8,r12,16
   20b10:	394f883a 	add	r7,r7,r5
   20b14:	333fffcc 	andi	r12,r6,65535
   20b18:	79df883a 	add	r15,r15,r7
   20b1c:	235b883a 	add	r13,r4,r13
   20b20:	9d63383a 	mul	r17,r19,r21
   20b24:	4309883a 	add	r4,r8,r12
   20b28:	7940022e 	bgeu	r15,r5,20b34 <__muldf3+0x43c>
   20b2c:	01400074 	movhi	r5,1
   20b30:	8963883a 	add	r17,r17,r5
   20b34:	780a943a 	slli	r5,r15,16
   20b38:	91bfffcc 	andi	r6,r18,65535
   20b3c:	70c7883a 	add	r3,r14,r3
   20b40:	298d883a 	add	r6,r5,r6
   20b44:	1a8f803a 	cmpltu	r7,r3,r10
   20b48:	350b883a 	add	r5,r6,r20
   20b4c:	20c7883a 	add	r3,r4,r3
   20b50:	3955883a 	add	r10,r7,r5
   20b54:	1909803a 	cmpltu	r4,r3,r4
   20b58:	6a91883a 	add	r8,r13,r10
   20b5c:	780cd43a 	srli	r6,r15,16
   20b60:	2219883a 	add	r12,r4,r8
   20b64:	2d0b803a 	cmpltu	r5,r5,r20
   20b68:	51cf803a 	cmpltu	r7,r10,r7
   20b6c:	29ceb03a 	or	r7,r5,r7
   20b70:	4351803a 	cmpltu	r8,r8,r13
   20b74:	610b803a 	cmpltu	r5,r12,r4
   20b78:	4148b03a 	or	r4,r8,r5
   20b7c:	398f883a 	add	r7,r7,r6
   20b80:	3909883a 	add	r4,r7,r4
   20b84:	1810927a 	slli	r8,r3,9
   20b88:	2449883a 	add	r4,r4,r17
   20b8c:	2008927a 	slli	r4,r4,9
   20b90:	6022d5fa 	srli	r17,r12,23
   20b94:	1806d5fa 	srli	r3,r3,23
   20b98:	4252b03a 	or	r9,r8,r9
   20b9c:	600a927a 	slli	r5,r12,9
   20ba0:	4810c03a 	cmpne	r8,r9,zero
   20ba4:	2462b03a 	or	r17,r4,r17
   20ba8:	40c6b03a 	or	r3,r8,r3
   20bac:	8900402c 	andhi	r4,r17,256
   20bb0:	1950b03a 	or	r8,r3,r5
   20bb4:	20000726 	beq	r4,zero,20bd4 <__muldf3+0x4dc>
   20bb8:	4006d07a 	srli	r3,r8,1
   20bbc:	880497fa 	slli	r2,r17,31
   20bc0:	4200004c 	andi	r8,r8,1
   20bc4:	8822d07a 	srli	r17,r17,1
   20bc8:	1a10b03a 	or	r8,r3,r8
   20bcc:	1210b03a 	or	r8,r2,r8
   20bd0:	5805883a 	mov	r2,r11
   20bd4:	1140ffc4 	addi	r5,r2,1023
   20bd8:	0140440e 	bge	zero,r5,20cec <__muldf3+0x5f4>
   20bdc:	40c001cc 	andi	r3,r8,7
   20be0:	18000726 	beq	r3,zero,20c00 <__muldf3+0x508>
   20be4:	40c003cc 	andi	r3,r8,15
   20be8:	01000104 	movi	r4,4
   20bec:	19000426 	beq	r3,r4,20c00 <__muldf3+0x508>
   20bf0:	4107883a 	add	r3,r8,r4
   20bf4:	1a11803a 	cmpltu	r8,r3,r8
   20bf8:	8a23883a 	add	r17,r17,r8
   20bfc:	1811883a 	mov	r8,r3
   20c00:	88c0402c 	andhi	r3,r17,256
   20c04:	18000426 	beq	r3,zero,20c18 <__muldf3+0x520>
   20c08:	11410004 	addi	r5,r2,1024
   20c0c:	00bfc034 	movhi	r2,65280
   20c10:	10bfffc4 	addi	r2,r2,-1
   20c14:	88a2703a 	and	r17,r17,r2
   20c18:	0081ff84 	movi	r2,2046
   20c1c:	117f6416 	blt	r2,r5,209b0 <__alt_data_end+0xfffe09b0>
   20c20:	8828977a 	slli	r20,r17,29
   20c24:	4010d0fa 	srli	r8,r8,3
   20c28:	8822927a 	slli	r17,r17,9
   20c2c:	2881ffcc 	andi	r2,r5,2047
   20c30:	a228b03a 	or	r20,r20,r8
   20c34:	880ad33a 	srli	r5,r17,12
   20c38:	b02b883a 	mov	r21,r22
   20c3c:	003f0d06 	br	20874 <__alt_data_end+0xfffe0874>
   20c40:	8080022c 	andhi	r2,r16,8
   20c44:	10000926 	beq	r2,zero,20c6c <__muldf3+0x574>
   20c48:	8880022c 	andhi	r2,r17,8
   20c4c:	1000071e 	bne	r2,zero,20c6c <__muldf3+0x574>
   20c50:	00800434 	movhi	r2,16
   20c54:	89400234 	orhi	r5,r17,8
   20c58:	10bfffc4 	addi	r2,r2,-1
   20c5c:	b82b883a 	mov	r21,r23
   20c60:	288a703a 	and	r5,r5,r2
   20c64:	4029883a 	mov	r20,r8
   20c68:	003f6806 	br	20a0c <__alt_data_end+0xfffe0a0c>
   20c6c:	00800434 	movhi	r2,16
   20c70:	81400234 	orhi	r5,r16,8
   20c74:	10bfffc4 	addi	r2,r2,-1
   20c78:	288a703a 	and	r5,r5,r2
   20c7c:	003f6306 	br	20a0c <__alt_data_end+0xfffe0a0c>
   20c80:	147ff604 	addi	r17,r2,-40
   20c84:	3462983a 	sll	r17,r6,r17
   20c88:	0011883a 	mov	r8,zero
   20c8c:	003f4406 	br	209a0 <__alt_data_end+0xfffe09a0>
   20c90:	3009883a 	mov	r4,r6
   20c94:	d9800215 	stw	r6,8(sp)
   20c98:	da400115 	stw	r9,4(sp)
   20c9c:	da800015 	stw	r10,0(sp)
   20ca0:	00218340 	call	21834 <__clzsi2>
   20ca4:	10800804 	addi	r2,r2,32
   20ca8:	da800017 	ldw	r10,0(sp)
   20cac:	da400117 	ldw	r9,4(sp)
   20cb0:	d9800217 	ldw	r6,8(sp)
   20cb4:	003f3006 	br	20978 <__alt_data_end+0xfffe0978>
   20cb8:	143ff604 	addi	r16,r2,-40
   20cbc:	9c20983a 	sll	r16,r19,r16
   20cc0:	0029883a 	mov	r20,zero
   20cc4:	003f1606 	br	20920 <__alt_data_end+0xfffe0920>
   20cc8:	d9800215 	stw	r6,8(sp)
   20ccc:	d9c00015 	stw	r7,0(sp)
   20cd0:	da400115 	stw	r9,4(sp)
   20cd4:	00218340 	call	21834 <__clzsi2>
   20cd8:	10800804 	addi	r2,r2,32
   20cdc:	da400117 	ldw	r9,4(sp)
   20ce0:	d9c00017 	ldw	r7,0(sp)
   20ce4:	d9800217 	ldw	r6,8(sp)
   20ce8:	003f0306 	br	208f8 <__alt_data_end+0xfffe08f8>
   20cec:	00c00044 	movi	r3,1
   20cf0:	1947c83a 	sub	r3,r3,r5
   20cf4:	00800e04 	movi	r2,56
   20cf8:	10feda16 	blt	r2,r3,20864 <__alt_data_end+0xfffe0864>
   20cfc:	008007c4 	movi	r2,31
   20d00:	10c01b16 	blt	r2,r3,20d70 <__muldf3+0x678>
   20d04:	00800804 	movi	r2,32
   20d08:	10c5c83a 	sub	r2,r2,r3
   20d0c:	888a983a 	sll	r5,r17,r2
   20d10:	40c8d83a 	srl	r4,r8,r3
   20d14:	4084983a 	sll	r2,r8,r2
   20d18:	88e2d83a 	srl	r17,r17,r3
   20d1c:	2906b03a 	or	r3,r5,r4
   20d20:	1004c03a 	cmpne	r2,r2,zero
   20d24:	1886b03a 	or	r3,r3,r2
   20d28:	188001cc 	andi	r2,r3,7
   20d2c:	10000726 	beq	r2,zero,20d4c <__muldf3+0x654>
   20d30:	188003cc 	andi	r2,r3,15
   20d34:	01000104 	movi	r4,4
   20d38:	11000426 	beq	r2,r4,20d4c <__muldf3+0x654>
   20d3c:	1805883a 	mov	r2,r3
   20d40:	10c00104 	addi	r3,r2,4
   20d44:	1885803a 	cmpltu	r2,r3,r2
   20d48:	88a3883a 	add	r17,r17,r2
   20d4c:	8880202c 	andhi	r2,r17,128
   20d50:	10001c26 	beq	r2,zero,20dc4 <__muldf3+0x6cc>
   20d54:	b02b883a 	mov	r21,r22
   20d58:	00800044 	movi	r2,1
   20d5c:	000b883a 	mov	r5,zero
   20d60:	0029883a 	mov	r20,zero
   20d64:	003ec306 	br	20874 <__alt_data_end+0xfffe0874>
   20d68:	5805883a 	mov	r2,r11
   20d6c:	003f9906 	br	20bd4 <__alt_data_end+0xfffe0bd4>
   20d70:	00bff844 	movi	r2,-31
   20d74:	1145c83a 	sub	r2,r2,r5
   20d78:	8888d83a 	srl	r4,r17,r2
   20d7c:	00800804 	movi	r2,32
   20d80:	18801a26 	beq	r3,r2,20dec <__muldf3+0x6f4>
   20d84:	00801004 	movi	r2,64
   20d88:	10c5c83a 	sub	r2,r2,r3
   20d8c:	8884983a 	sll	r2,r17,r2
   20d90:	1204b03a 	or	r2,r2,r8
   20d94:	1004c03a 	cmpne	r2,r2,zero
   20d98:	2084b03a 	or	r2,r4,r2
   20d9c:	144001cc 	andi	r17,r2,7
   20da0:	88000d1e 	bne	r17,zero,20dd8 <__muldf3+0x6e0>
   20da4:	000b883a 	mov	r5,zero
   20da8:	1028d0fa 	srli	r20,r2,3
   20dac:	b02b883a 	mov	r21,r22
   20db0:	0005883a 	mov	r2,zero
   20db4:	a468b03a 	or	r20,r20,r17
   20db8:	003eae06 	br	20874 <__alt_data_end+0xfffe0874>
   20dbc:	1007883a 	mov	r3,r2
   20dc0:	0023883a 	mov	r17,zero
   20dc4:	880a927a 	slli	r5,r17,9
   20dc8:	1805883a 	mov	r2,r3
   20dcc:	8822977a 	slli	r17,r17,29
   20dd0:	280ad33a 	srli	r5,r5,12
   20dd4:	003ff406 	br	20da8 <__alt_data_end+0xfffe0da8>
   20dd8:	10c003cc 	andi	r3,r2,15
   20ddc:	01000104 	movi	r4,4
   20de0:	193ff626 	beq	r3,r4,20dbc <__alt_data_end+0xfffe0dbc>
   20de4:	0023883a 	mov	r17,zero
   20de8:	003fd506 	br	20d40 <__alt_data_end+0xfffe0d40>
   20dec:	0005883a 	mov	r2,zero
   20df0:	003fe706 	br	20d90 <__alt_data_end+0xfffe0d90>
   20df4:	00800434 	movhi	r2,16
   20df8:	89400234 	orhi	r5,r17,8
   20dfc:	10bfffc4 	addi	r2,r2,-1
   20e00:	b02b883a 	mov	r21,r22
   20e04:	288a703a 	and	r5,r5,r2
   20e08:	4029883a 	mov	r20,r8
   20e0c:	003eff06 	br	20a0c <__alt_data_end+0xfffe0a0c>

00020e10 <__subdf3>:
   20e10:	02000434 	movhi	r8,16
   20e14:	423fffc4 	addi	r8,r8,-1
   20e18:	defffb04 	addi	sp,sp,-20
   20e1c:	2a14703a 	and	r10,r5,r8
   20e20:	3812d53a 	srli	r9,r7,20
   20e24:	3a10703a 	and	r8,r7,r8
   20e28:	2006d77a 	srli	r3,r4,29
   20e2c:	3004d77a 	srli	r2,r6,29
   20e30:	dc000015 	stw	r16,0(sp)
   20e34:	501490fa 	slli	r10,r10,3
   20e38:	2820d53a 	srli	r16,r5,20
   20e3c:	401090fa 	slli	r8,r8,3
   20e40:	dc800215 	stw	r18,8(sp)
   20e44:	dc400115 	stw	r17,4(sp)
   20e48:	dfc00415 	stw	ra,16(sp)
   20e4c:	202290fa 	slli	r17,r4,3
   20e50:	dcc00315 	stw	r19,12(sp)
   20e54:	4a41ffcc 	andi	r9,r9,2047
   20e58:	0101ffc4 	movi	r4,2047
   20e5c:	2824d7fa 	srli	r18,r5,31
   20e60:	8401ffcc 	andi	r16,r16,2047
   20e64:	50c6b03a 	or	r3,r10,r3
   20e68:	380ed7fa 	srli	r7,r7,31
   20e6c:	408ab03a 	or	r5,r8,r2
   20e70:	300c90fa 	slli	r6,r6,3
   20e74:	49009626 	beq	r9,r4,210d0 <__subdf3+0x2c0>
   20e78:	39c0005c 	xori	r7,r7,1
   20e7c:	8245c83a 	sub	r2,r16,r9
   20e80:	3c807426 	beq	r7,r18,21054 <__subdf3+0x244>
   20e84:	0080af0e 	bge	zero,r2,21144 <__subdf3+0x334>
   20e88:	48002a1e 	bne	r9,zero,20f34 <__subdf3+0x124>
   20e8c:	2988b03a 	or	r4,r5,r6
   20e90:	20009a1e 	bne	r4,zero,210fc <__subdf3+0x2ec>
   20e94:	888001cc 	andi	r2,r17,7
   20e98:	10000726 	beq	r2,zero,20eb8 <__subdf3+0xa8>
   20e9c:	888003cc 	andi	r2,r17,15
   20ea0:	01000104 	movi	r4,4
   20ea4:	11000426 	beq	r2,r4,20eb8 <__subdf3+0xa8>
   20ea8:	890b883a 	add	r5,r17,r4
   20eac:	2c63803a 	cmpltu	r17,r5,r17
   20eb0:	1c47883a 	add	r3,r3,r17
   20eb4:	2823883a 	mov	r17,r5
   20eb8:	1880202c 	andhi	r2,r3,128
   20ebc:	10005926 	beq	r2,zero,21024 <__subdf3+0x214>
   20ec0:	84000044 	addi	r16,r16,1
   20ec4:	0081ffc4 	movi	r2,2047
   20ec8:	8080be26 	beq	r16,r2,211c4 <__subdf3+0x3b4>
   20ecc:	017fe034 	movhi	r5,65408
   20ed0:	297fffc4 	addi	r5,r5,-1
   20ed4:	1946703a 	and	r3,r3,r5
   20ed8:	1804977a 	slli	r2,r3,29
   20edc:	1806927a 	slli	r3,r3,9
   20ee0:	8822d0fa 	srli	r17,r17,3
   20ee4:	8401ffcc 	andi	r16,r16,2047
   20ee8:	180ad33a 	srli	r5,r3,12
   20eec:	9100004c 	andi	r4,r18,1
   20ef0:	1444b03a 	or	r2,r2,r17
   20ef4:	80c1ffcc 	andi	r3,r16,2047
   20ef8:	1820953a 	slli	r16,r3,20
   20efc:	20c03fcc 	andi	r3,r4,255
   20f00:	180897fa 	slli	r4,r3,31
   20f04:	00c00434 	movhi	r3,16
   20f08:	18ffffc4 	addi	r3,r3,-1
   20f0c:	28c6703a 	and	r3,r5,r3
   20f10:	1c06b03a 	or	r3,r3,r16
   20f14:	1906b03a 	or	r3,r3,r4
   20f18:	dfc00417 	ldw	ra,16(sp)
   20f1c:	dcc00317 	ldw	r19,12(sp)
   20f20:	dc800217 	ldw	r18,8(sp)
   20f24:	dc400117 	ldw	r17,4(sp)
   20f28:	dc000017 	ldw	r16,0(sp)
   20f2c:	dec00504 	addi	sp,sp,20
   20f30:	f800283a 	ret
   20f34:	0101ffc4 	movi	r4,2047
   20f38:	813fd626 	beq	r16,r4,20e94 <__alt_data_end+0xfffe0e94>
   20f3c:	29402034 	orhi	r5,r5,128
   20f40:	01000e04 	movi	r4,56
   20f44:	2080a316 	blt	r4,r2,211d4 <__subdf3+0x3c4>
   20f48:	010007c4 	movi	r4,31
   20f4c:	2080c616 	blt	r4,r2,21268 <__subdf3+0x458>
   20f50:	01000804 	movi	r4,32
   20f54:	2089c83a 	sub	r4,r4,r2
   20f58:	2910983a 	sll	r8,r5,r4
   20f5c:	308ed83a 	srl	r7,r6,r2
   20f60:	3108983a 	sll	r4,r6,r4
   20f64:	2884d83a 	srl	r2,r5,r2
   20f68:	41ccb03a 	or	r6,r8,r7
   20f6c:	2008c03a 	cmpne	r4,r4,zero
   20f70:	310cb03a 	or	r6,r6,r4
   20f74:	898dc83a 	sub	r6,r17,r6
   20f78:	89a3803a 	cmpltu	r17,r17,r6
   20f7c:	1887c83a 	sub	r3,r3,r2
   20f80:	1c47c83a 	sub	r3,r3,r17
   20f84:	3023883a 	mov	r17,r6
   20f88:	1880202c 	andhi	r2,r3,128
   20f8c:	10002326 	beq	r2,zero,2101c <__subdf3+0x20c>
   20f90:	04c02034 	movhi	r19,128
   20f94:	9cffffc4 	addi	r19,r19,-1
   20f98:	1ce6703a 	and	r19,r3,r19
   20f9c:	98007a26 	beq	r19,zero,21188 <__subdf3+0x378>
   20fa0:	9809883a 	mov	r4,r19
   20fa4:	00218340 	call	21834 <__clzsi2>
   20fa8:	113ffe04 	addi	r4,r2,-8
   20fac:	00c007c4 	movi	r3,31
   20fb0:	19007b16 	blt	r3,r4,211a0 <__subdf3+0x390>
   20fb4:	00800804 	movi	r2,32
   20fb8:	1105c83a 	sub	r2,r2,r4
   20fbc:	8884d83a 	srl	r2,r17,r2
   20fc0:	9906983a 	sll	r3,r19,r4
   20fc4:	8922983a 	sll	r17,r17,r4
   20fc8:	10c4b03a 	or	r2,r2,r3
   20fcc:	24007816 	blt	r4,r16,211b0 <__subdf3+0x3a0>
   20fd0:	2421c83a 	sub	r16,r4,r16
   20fd4:	80c00044 	addi	r3,r16,1
   20fd8:	010007c4 	movi	r4,31
   20fdc:	20c09516 	blt	r4,r3,21234 <__subdf3+0x424>
   20fe0:	01400804 	movi	r5,32
   20fe4:	28cbc83a 	sub	r5,r5,r3
   20fe8:	88c8d83a 	srl	r4,r17,r3
   20fec:	8962983a 	sll	r17,r17,r5
   20ff0:	114a983a 	sll	r5,r2,r5
   20ff4:	10c6d83a 	srl	r3,r2,r3
   20ff8:	8804c03a 	cmpne	r2,r17,zero
   20ffc:	290ab03a 	or	r5,r5,r4
   21000:	28a2b03a 	or	r17,r5,r2
   21004:	0021883a 	mov	r16,zero
   21008:	003fa206 	br	20e94 <__alt_data_end+0xfffe0e94>
   2100c:	2090b03a 	or	r8,r4,r2
   21010:	40018e26 	beq	r8,zero,2164c <__subdf3+0x83c>
   21014:	1007883a 	mov	r3,r2
   21018:	2023883a 	mov	r17,r4
   2101c:	888001cc 	andi	r2,r17,7
   21020:	103f9e1e 	bne	r2,zero,20e9c <__alt_data_end+0xfffe0e9c>
   21024:	1804977a 	slli	r2,r3,29
   21028:	8822d0fa 	srli	r17,r17,3
   2102c:	1810d0fa 	srli	r8,r3,3
   21030:	9100004c 	andi	r4,r18,1
   21034:	1444b03a 	or	r2,r2,r17
   21038:	00c1ffc4 	movi	r3,2047
   2103c:	80c02826 	beq	r16,r3,210e0 <__subdf3+0x2d0>
   21040:	01400434 	movhi	r5,16
   21044:	297fffc4 	addi	r5,r5,-1
   21048:	80e0703a 	and	r16,r16,r3
   2104c:	414a703a 	and	r5,r8,r5
   21050:	003fa806 	br	20ef4 <__alt_data_end+0xfffe0ef4>
   21054:	0080630e 	bge	zero,r2,211e4 <__subdf3+0x3d4>
   21058:	48003026 	beq	r9,zero,2111c <__subdf3+0x30c>
   2105c:	0101ffc4 	movi	r4,2047
   21060:	813f8c26 	beq	r16,r4,20e94 <__alt_data_end+0xfffe0e94>
   21064:	29402034 	orhi	r5,r5,128
   21068:	01000e04 	movi	r4,56
   2106c:	2080a90e 	bge	r4,r2,21314 <__subdf3+0x504>
   21070:	298cb03a 	or	r6,r5,r6
   21074:	3012c03a 	cmpne	r9,r6,zero
   21078:	0005883a 	mov	r2,zero
   2107c:	4c53883a 	add	r9,r9,r17
   21080:	4c63803a 	cmpltu	r17,r9,r17
   21084:	10c7883a 	add	r3,r2,r3
   21088:	88c7883a 	add	r3,r17,r3
   2108c:	4823883a 	mov	r17,r9
   21090:	1880202c 	andhi	r2,r3,128
   21094:	1000d026 	beq	r2,zero,213d8 <__subdf3+0x5c8>
   21098:	84000044 	addi	r16,r16,1
   2109c:	0081ffc4 	movi	r2,2047
   210a0:	8080fe26 	beq	r16,r2,2149c <__subdf3+0x68c>
   210a4:	00bfe034 	movhi	r2,65408
   210a8:	10bfffc4 	addi	r2,r2,-1
   210ac:	1886703a 	and	r3,r3,r2
   210b0:	880ad07a 	srli	r5,r17,1
   210b4:	180497fa 	slli	r2,r3,31
   210b8:	8900004c 	andi	r4,r17,1
   210bc:	2922b03a 	or	r17,r5,r4
   210c0:	1806d07a 	srli	r3,r3,1
   210c4:	1462b03a 	or	r17,r2,r17
   210c8:	3825883a 	mov	r18,r7
   210cc:	003f7106 	br	20e94 <__alt_data_end+0xfffe0e94>
   210d0:	2984b03a 	or	r2,r5,r6
   210d4:	103f6826 	beq	r2,zero,20e78 <__alt_data_end+0xfffe0e78>
   210d8:	39c03fcc 	andi	r7,r7,255
   210dc:	003f6706 	br	20e7c <__alt_data_end+0xfffe0e7c>
   210e0:	4086b03a 	or	r3,r8,r2
   210e4:	18015226 	beq	r3,zero,21630 <__subdf3+0x820>
   210e8:	00c00434 	movhi	r3,16
   210ec:	41400234 	orhi	r5,r8,8
   210f0:	18ffffc4 	addi	r3,r3,-1
   210f4:	28ca703a 	and	r5,r5,r3
   210f8:	003f7e06 	br	20ef4 <__alt_data_end+0xfffe0ef4>
   210fc:	10bfffc4 	addi	r2,r2,-1
   21100:	1000491e 	bne	r2,zero,21228 <__subdf3+0x418>
   21104:	898fc83a 	sub	r7,r17,r6
   21108:	89e3803a 	cmpltu	r17,r17,r7
   2110c:	1947c83a 	sub	r3,r3,r5
   21110:	1c47c83a 	sub	r3,r3,r17
   21114:	3823883a 	mov	r17,r7
   21118:	003f9b06 	br	20f88 <__alt_data_end+0xfffe0f88>
   2111c:	2988b03a 	or	r4,r5,r6
   21120:	203f5c26 	beq	r4,zero,20e94 <__alt_data_end+0xfffe0e94>
   21124:	10bfffc4 	addi	r2,r2,-1
   21128:	1000931e 	bne	r2,zero,21378 <__subdf3+0x568>
   2112c:	898d883a 	add	r6,r17,r6
   21130:	3463803a 	cmpltu	r17,r6,r17
   21134:	1947883a 	add	r3,r3,r5
   21138:	88c7883a 	add	r3,r17,r3
   2113c:	3023883a 	mov	r17,r6
   21140:	003fd306 	br	21090 <__alt_data_end+0xfffe1090>
   21144:	1000541e 	bne	r2,zero,21298 <__subdf3+0x488>
   21148:	80800044 	addi	r2,r16,1
   2114c:	1081ffcc 	andi	r2,r2,2047
   21150:	01000044 	movi	r4,1
   21154:	2080a20e 	bge	r4,r2,213e0 <__subdf3+0x5d0>
   21158:	8989c83a 	sub	r4,r17,r6
   2115c:	8905803a 	cmpltu	r2,r17,r4
   21160:	1967c83a 	sub	r19,r3,r5
   21164:	98a7c83a 	sub	r19,r19,r2
   21168:	9880202c 	andhi	r2,r19,128
   2116c:	10006326 	beq	r2,zero,212fc <__subdf3+0x4ec>
   21170:	3463c83a 	sub	r17,r6,r17
   21174:	28c7c83a 	sub	r3,r5,r3
   21178:	344d803a 	cmpltu	r6,r6,r17
   2117c:	19a7c83a 	sub	r19,r3,r6
   21180:	3825883a 	mov	r18,r7
   21184:	983f861e 	bne	r19,zero,20fa0 <__alt_data_end+0xfffe0fa0>
   21188:	8809883a 	mov	r4,r17
   2118c:	00218340 	call	21834 <__clzsi2>
   21190:	10800804 	addi	r2,r2,32
   21194:	113ffe04 	addi	r4,r2,-8
   21198:	00c007c4 	movi	r3,31
   2119c:	193f850e 	bge	r3,r4,20fb4 <__alt_data_end+0xfffe0fb4>
   211a0:	10bff604 	addi	r2,r2,-40
   211a4:	8884983a 	sll	r2,r17,r2
   211a8:	0023883a 	mov	r17,zero
   211ac:	243f880e 	bge	r4,r16,20fd0 <__alt_data_end+0xfffe0fd0>
   211b0:	00ffe034 	movhi	r3,65408
   211b4:	18ffffc4 	addi	r3,r3,-1
   211b8:	8121c83a 	sub	r16,r16,r4
   211bc:	10c6703a 	and	r3,r2,r3
   211c0:	003f3406 	br	20e94 <__alt_data_end+0xfffe0e94>
   211c4:	9100004c 	andi	r4,r18,1
   211c8:	000b883a 	mov	r5,zero
   211cc:	0005883a 	mov	r2,zero
   211d0:	003f4806 	br	20ef4 <__alt_data_end+0xfffe0ef4>
   211d4:	298cb03a 	or	r6,r5,r6
   211d8:	300cc03a 	cmpne	r6,r6,zero
   211dc:	0005883a 	mov	r2,zero
   211e0:	003f6406 	br	20f74 <__alt_data_end+0xfffe0f74>
   211e4:	10009a1e 	bne	r2,zero,21450 <__subdf3+0x640>
   211e8:	82400044 	addi	r9,r16,1
   211ec:	4881ffcc 	andi	r2,r9,2047
   211f0:	02800044 	movi	r10,1
   211f4:	5080670e 	bge	r10,r2,21394 <__subdf3+0x584>
   211f8:	0081ffc4 	movi	r2,2047
   211fc:	4880af26 	beq	r9,r2,214bc <__subdf3+0x6ac>
   21200:	898d883a 	add	r6,r17,r6
   21204:	1945883a 	add	r2,r3,r5
   21208:	3447803a 	cmpltu	r3,r6,r17
   2120c:	1887883a 	add	r3,r3,r2
   21210:	182297fa 	slli	r17,r3,31
   21214:	300cd07a 	srli	r6,r6,1
   21218:	1806d07a 	srli	r3,r3,1
   2121c:	4821883a 	mov	r16,r9
   21220:	89a2b03a 	or	r17,r17,r6
   21224:	003f1b06 	br	20e94 <__alt_data_end+0xfffe0e94>
   21228:	0101ffc4 	movi	r4,2047
   2122c:	813f441e 	bne	r16,r4,20f40 <__alt_data_end+0xfffe0f40>
   21230:	003f1806 	br	20e94 <__alt_data_end+0xfffe0e94>
   21234:	843ff844 	addi	r16,r16,-31
   21238:	01400804 	movi	r5,32
   2123c:	1408d83a 	srl	r4,r2,r16
   21240:	19405026 	beq	r3,r5,21384 <__subdf3+0x574>
   21244:	01401004 	movi	r5,64
   21248:	28c7c83a 	sub	r3,r5,r3
   2124c:	10c4983a 	sll	r2,r2,r3
   21250:	88a2b03a 	or	r17,r17,r2
   21254:	8822c03a 	cmpne	r17,r17,zero
   21258:	2462b03a 	or	r17,r4,r17
   2125c:	0007883a 	mov	r3,zero
   21260:	0021883a 	mov	r16,zero
   21264:	003f6d06 	br	2101c <__alt_data_end+0xfffe101c>
   21268:	11fff804 	addi	r7,r2,-32
   2126c:	01000804 	movi	r4,32
   21270:	29ced83a 	srl	r7,r5,r7
   21274:	11004526 	beq	r2,r4,2138c <__subdf3+0x57c>
   21278:	01001004 	movi	r4,64
   2127c:	2089c83a 	sub	r4,r4,r2
   21280:	2904983a 	sll	r2,r5,r4
   21284:	118cb03a 	or	r6,r2,r6
   21288:	300cc03a 	cmpne	r6,r6,zero
   2128c:	398cb03a 	or	r6,r7,r6
   21290:	0005883a 	mov	r2,zero
   21294:	003f3706 	br	20f74 <__alt_data_end+0xfffe0f74>
   21298:	80002a26 	beq	r16,zero,21344 <__subdf3+0x534>
   2129c:	0101ffc4 	movi	r4,2047
   212a0:	49006626 	beq	r9,r4,2143c <__subdf3+0x62c>
   212a4:	0085c83a 	sub	r2,zero,r2
   212a8:	18c02034 	orhi	r3,r3,128
   212ac:	01000e04 	movi	r4,56
   212b0:	20807e16 	blt	r4,r2,214ac <__subdf3+0x69c>
   212b4:	010007c4 	movi	r4,31
   212b8:	2080e716 	blt	r4,r2,21658 <__subdf3+0x848>
   212bc:	01000804 	movi	r4,32
   212c0:	2089c83a 	sub	r4,r4,r2
   212c4:	1914983a 	sll	r10,r3,r4
   212c8:	8890d83a 	srl	r8,r17,r2
   212cc:	8908983a 	sll	r4,r17,r4
   212d0:	1884d83a 	srl	r2,r3,r2
   212d4:	5222b03a 	or	r17,r10,r8
   212d8:	2006c03a 	cmpne	r3,r4,zero
   212dc:	88e2b03a 	or	r17,r17,r3
   212e0:	3463c83a 	sub	r17,r6,r17
   212e4:	2885c83a 	sub	r2,r5,r2
   212e8:	344d803a 	cmpltu	r6,r6,r17
   212ec:	1187c83a 	sub	r3,r2,r6
   212f0:	4821883a 	mov	r16,r9
   212f4:	3825883a 	mov	r18,r7
   212f8:	003f2306 	br	20f88 <__alt_data_end+0xfffe0f88>
   212fc:	24d0b03a 	or	r8,r4,r19
   21300:	40001b1e 	bne	r8,zero,21370 <__subdf3+0x560>
   21304:	0005883a 	mov	r2,zero
   21308:	0009883a 	mov	r4,zero
   2130c:	0021883a 	mov	r16,zero
   21310:	003f4906 	br	21038 <__alt_data_end+0xfffe1038>
   21314:	010007c4 	movi	r4,31
   21318:	20803a16 	blt	r4,r2,21404 <__subdf3+0x5f4>
   2131c:	01000804 	movi	r4,32
   21320:	2089c83a 	sub	r4,r4,r2
   21324:	2912983a 	sll	r9,r5,r4
   21328:	3090d83a 	srl	r8,r6,r2
   2132c:	3108983a 	sll	r4,r6,r4
   21330:	2884d83a 	srl	r2,r5,r2
   21334:	4a12b03a 	or	r9,r9,r8
   21338:	2008c03a 	cmpne	r4,r4,zero
   2133c:	4912b03a 	or	r9,r9,r4
   21340:	003f4e06 	br	2107c <__alt_data_end+0xfffe107c>
   21344:	1c48b03a 	or	r4,r3,r17
   21348:	20003c26 	beq	r4,zero,2143c <__subdf3+0x62c>
   2134c:	0084303a 	nor	r2,zero,r2
   21350:	1000381e 	bne	r2,zero,21434 <__subdf3+0x624>
   21354:	3463c83a 	sub	r17,r6,r17
   21358:	28c5c83a 	sub	r2,r5,r3
   2135c:	344d803a 	cmpltu	r6,r6,r17
   21360:	1187c83a 	sub	r3,r2,r6
   21364:	4821883a 	mov	r16,r9
   21368:	3825883a 	mov	r18,r7
   2136c:	003f0606 	br	20f88 <__alt_data_end+0xfffe0f88>
   21370:	2023883a 	mov	r17,r4
   21374:	003f0906 	br	20f9c <__alt_data_end+0xfffe0f9c>
   21378:	0101ffc4 	movi	r4,2047
   2137c:	813f3a1e 	bne	r16,r4,21068 <__alt_data_end+0xfffe1068>
   21380:	003ec406 	br	20e94 <__alt_data_end+0xfffe0e94>
   21384:	0005883a 	mov	r2,zero
   21388:	003fb106 	br	21250 <__alt_data_end+0xfffe1250>
   2138c:	0005883a 	mov	r2,zero
   21390:	003fbc06 	br	21284 <__alt_data_end+0xfffe1284>
   21394:	1c44b03a 	or	r2,r3,r17
   21398:	80008e1e 	bne	r16,zero,215d4 <__subdf3+0x7c4>
   2139c:	1000c826 	beq	r2,zero,216c0 <__subdf3+0x8b0>
   213a0:	2984b03a 	or	r2,r5,r6
   213a4:	103ebb26 	beq	r2,zero,20e94 <__alt_data_end+0xfffe0e94>
   213a8:	8989883a 	add	r4,r17,r6
   213ac:	1945883a 	add	r2,r3,r5
   213b0:	2447803a 	cmpltu	r3,r4,r17
   213b4:	1887883a 	add	r3,r3,r2
   213b8:	1880202c 	andhi	r2,r3,128
   213bc:	2023883a 	mov	r17,r4
   213c0:	103f1626 	beq	r2,zero,2101c <__alt_data_end+0xfffe101c>
   213c4:	00bfe034 	movhi	r2,65408
   213c8:	10bfffc4 	addi	r2,r2,-1
   213cc:	5021883a 	mov	r16,r10
   213d0:	1886703a 	and	r3,r3,r2
   213d4:	003eaf06 	br	20e94 <__alt_data_end+0xfffe0e94>
   213d8:	3825883a 	mov	r18,r7
   213dc:	003f0f06 	br	2101c <__alt_data_end+0xfffe101c>
   213e0:	1c44b03a 	or	r2,r3,r17
   213e4:	8000251e 	bne	r16,zero,2147c <__subdf3+0x66c>
   213e8:	1000661e 	bne	r2,zero,21584 <__subdf3+0x774>
   213ec:	2990b03a 	or	r8,r5,r6
   213f0:	40009626 	beq	r8,zero,2164c <__subdf3+0x83c>
   213f4:	2807883a 	mov	r3,r5
   213f8:	3023883a 	mov	r17,r6
   213fc:	3825883a 	mov	r18,r7
   21400:	003ea406 	br	20e94 <__alt_data_end+0xfffe0e94>
   21404:	127ff804 	addi	r9,r2,-32
   21408:	01000804 	movi	r4,32
   2140c:	2a52d83a 	srl	r9,r5,r9
   21410:	11008c26 	beq	r2,r4,21644 <__subdf3+0x834>
   21414:	01001004 	movi	r4,64
   21418:	2085c83a 	sub	r2,r4,r2
   2141c:	2884983a 	sll	r2,r5,r2
   21420:	118cb03a 	or	r6,r2,r6
   21424:	300cc03a 	cmpne	r6,r6,zero
   21428:	4992b03a 	or	r9,r9,r6
   2142c:	0005883a 	mov	r2,zero
   21430:	003f1206 	br	2107c <__alt_data_end+0xfffe107c>
   21434:	0101ffc4 	movi	r4,2047
   21438:	493f9c1e 	bne	r9,r4,212ac <__alt_data_end+0xfffe12ac>
   2143c:	2807883a 	mov	r3,r5
   21440:	3023883a 	mov	r17,r6
   21444:	4821883a 	mov	r16,r9
   21448:	3825883a 	mov	r18,r7
   2144c:	003e9106 	br	20e94 <__alt_data_end+0xfffe0e94>
   21450:	80001f1e 	bne	r16,zero,214d0 <__subdf3+0x6c0>
   21454:	1c48b03a 	or	r4,r3,r17
   21458:	20005a26 	beq	r4,zero,215c4 <__subdf3+0x7b4>
   2145c:	0084303a 	nor	r2,zero,r2
   21460:	1000561e 	bne	r2,zero,215bc <__subdf3+0x7ac>
   21464:	89a3883a 	add	r17,r17,r6
   21468:	1945883a 	add	r2,r3,r5
   2146c:	898d803a 	cmpltu	r6,r17,r6
   21470:	3087883a 	add	r3,r6,r2
   21474:	4821883a 	mov	r16,r9
   21478:	003f0506 	br	21090 <__alt_data_end+0xfffe1090>
   2147c:	10002b1e 	bne	r2,zero,2152c <__subdf3+0x71c>
   21480:	2984b03a 	or	r2,r5,r6
   21484:	10008026 	beq	r2,zero,21688 <__subdf3+0x878>
   21488:	2807883a 	mov	r3,r5
   2148c:	3023883a 	mov	r17,r6
   21490:	3825883a 	mov	r18,r7
   21494:	0401ffc4 	movi	r16,2047
   21498:	003e7e06 	br	20e94 <__alt_data_end+0xfffe0e94>
   2149c:	3809883a 	mov	r4,r7
   214a0:	0011883a 	mov	r8,zero
   214a4:	0005883a 	mov	r2,zero
   214a8:	003ee306 	br	21038 <__alt_data_end+0xfffe1038>
   214ac:	1c62b03a 	or	r17,r3,r17
   214b0:	8822c03a 	cmpne	r17,r17,zero
   214b4:	0005883a 	mov	r2,zero
   214b8:	003f8906 	br	212e0 <__alt_data_end+0xfffe12e0>
   214bc:	3809883a 	mov	r4,r7
   214c0:	4821883a 	mov	r16,r9
   214c4:	0011883a 	mov	r8,zero
   214c8:	0005883a 	mov	r2,zero
   214cc:	003eda06 	br	21038 <__alt_data_end+0xfffe1038>
   214d0:	0101ffc4 	movi	r4,2047
   214d4:	49003b26 	beq	r9,r4,215c4 <__subdf3+0x7b4>
   214d8:	0085c83a 	sub	r2,zero,r2
   214dc:	18c02034 	orhi	r3,r3,128
   214e0:	01000e04 	movi	r4,56
   214e4:	20806e16 	blt	r4,r2,216a0 <__subdf3+0x890>
   214e8:	010007c4 	movi	r4,31
   214ec:	20807716 	blt	r4,r2,216cc <__subdf3+0x8bc>
   214f0:	01000804 	movi	r4,32
   214f4:	2089c83a 	sub	r4,r4,r2
   214f8:	1914983a 	sll	r10,r3,r4
   214fc:	8890d83a 	srl	r8,r17,r2
   21500:	8908983a 	sll	r4,r17,r4
   21504:	1884d83a 	srl	r2,r3,r2
   21508:	5222b03a 	or	r17,r10,r8
   2150c:	2006c03a 	cmpne	r3,r4,zero
   21510:	88e2b03a 	or	r17,r17,r3
   21514:	89a3883a 	add	r17,r17,r6
   21518:	1145883a 	add	r2,r2,r5
   2151c:	898d803a 	cmpltu	r6,r17,r6
   21520:	3087883a 	add	r3,r6,r2
   21524:	4821883a 	mov	r16,r9
   21528:	003ed906 	br	21090 <__alt_data_end+0xfffe1090>
   2152c:	2984b03a 	or	r2,r5,r6
   21530:	10004226 	beq	r2,zero,2163c <__subdf3+0x82c>
   21534:	1808d0fa 	srli	r4,r3,3
   21538:	8822d0fa 	srli	r17,r17,3
   2153c:	1806977a 	slli	r3,r3,29
   21540:	2080022c 	andhi	r2,r4,8
   21544:	1c62b03a 	or	r17,r3,r17
   21548:	10000826 	beq	r2,zero,2156c <__subdf3+0x75c>
   2154c:	2812d0fa 	srli	r9,r5,3
   21550:	4880022c 	andhi	r2,r9,8
   21554:	1000051e 	bne	r2,zero,2156c <__subdf3+0x75c>
   21558:	300cd0fa 	srli	r6,r6,3
   2155c:	2804977a 	slli	r2,r5,29
   21560:	4809883a 	mov	r4,r9
   21564:	3825883a 	mov	r18,r7
   21568:	11a2b03a 	or	r17,r2,r6
   2156c:	8806d77a 	srli	r3,r17,29
   21570:	200890fa 	slli	r4,r4,3
   21574:	882290fa 	slli	r17,r17,3
   21578:	0401ffc4 	movi	r16,2047
   2157c:	1906b03a 	or	r3,r3,r4
   21580:	003e4406 	br	20e94 <__alt_data_end+0xfffe0e94>
   21584:	2984b03a 	or	r2,r5,r6
   21588:	103e4226 	beq	r2,zero,20e94 <__alt_data_end+0xfffe0e94>
   2158c:	8989c83a 	sub	r4,r17,r6
   21590:	8911803a 	cmpltu	r8,r17,r4
   21594:	1945c83a 	sub	r2,r3,r5
   21598:	1205c83a 	sub	r2,r2,r8
   2159c:	1200202c 	andhi	r8,r2,128
   215a0:	403e9a26 	beq	r8,zero,2100c <__alt_data_end+0xfffe100c>
   215a4:	3463c83a 	sub	r17,r6,r17
   215a8:	28c5c83a 	sub	r2,r5,r3
   215ac:	344d803a 	cmpltu	r6,r6,r17
   215b0:	1187c83a 	sub	r3,r2,r6
   215b4:	3825883a 	mov	r18,r7
   215b8:	003e3606 	br	20e94 <__alt_data_end+0xfffe0e94>
   215bc:	0101ffc4 	movi	r4,2047
   215c0:	493fc71e 	bne	r9,r4,214e0 <__alt_data_end+0xfffe14e0>
   215c4:	2807883a 	mov	r3,r5
   215c8:	3023883a 	mov	r17,r6
   215cc:	4821883a 	mov	r16,r9
   215d0:	003e3006 	br	20e94 <__alt_data_end+0xfffe0e94>
   215d4:	10003626 	beq	r2,zero,216b0 <__subdf3+0x8a0>
   215d8:	2984b03a 	or	r2,r5,r6
   215dc:	10001726 	beq	r2,zero,2163c <__subdf3+0x82c>
   215e0:	1808d0fa 	srli	r4,r3,3
   215e4:	8822d0fa 	srli	r17,r17,3
   215e8:	1806977a 	slli	r3,r3,29
   215ec:	2080022c 	andhi	r2,r4,8
   215f0:	1c62b03a 	or	r17,r3,r17
   215f4:	10000726 	beq	r2,zero,21614 <__subdf3+0x804>
   215f8:	2812d0fa 	srli	r9,r5,3
   215fc:	4880022c 	andhi	r2,r9,8
   21600:	1000041e 	bne	r2,zero,21614 <__subdf3+0x804>
   21604:	300cd0fa 	srli	r6,r6,3
   21608:	2804977a 	slli	r2,r5,29
   2160c:	4809883a 	mov	r4,r9
   21610:	11a2b03a 	or	r17,r2,r6
   21614:	8806d77a 	srli	r3,r17,29
   21618:	200890fa 	slli	r4,r4,3
   2161c:	882290fa 	slli	r17,r17,3
   21620:	3825883a 	mov	r18,r7
   21624:	1906b03a 	or	r3,r3,r4
   21628:	0401ffc4 	movi	r16,2047
   2162c:	003e1906 	br	20e94 <__alt_data_end+0xfffe0e94>
   21630:	000b883a 	mov	r5,zero
   21634:	0005883a 	mov	r2,zero
   21638:	003e2e06 	br	20ef4 <__alt_data_end+0xfffe0ef4>
   2163c:	0401ffc4 	movi	r16,2047
   21640:	003e1406 	br	20e94 <__alt_data_end+0xfffe0e94>
   21644:	0005883a 	mov	r2,zero
   21648:	003f7506 	br	21420 <__alt_data_end+0xfffe1420>
   2164c:	0005883a 	mov	r2,zero
   21650:	0009883a 	mov	r4,zero
   21654:	003e7806 	br	21038 <__alt_data_end+0xfffe1038>
   21658:	123ff804 	addi	r8,r2,-32
   2165c:	01000804 	movi	r4,32
   21660:	1a10d83a 	srl	r8,r3,r8
   21664:	11002526 	beq	r2,r4,216fc <__subdf3+0x8ec>
   21668:	01001004 	movi	r4,64
   2166c:	2085c83a 	sub	r2,r4,r2
   21670:	1884983a 	sll	r2,r3,r2
   21674:	1444b03a 	or	r2,r2,r17
   21678:	1004c03a 	cmpne	r2,r2,zero
   2167c:	40a2b03a 	or	r17,r8,r2
   21680:	0005883a 	mov	r2,zero
   21684:	003f1606 	br	212e0 <__alt_data_end+0xfffe12e0>
   21688:	02000434 	movhi	r8,16
   2168c:	0009883a 	mov	r4,zero
   21690:	423fffc4 	addi	r8,r8,-1
   21694:	00bfffc4 	movi	r2,-1
   21698:	0401ffc4 	movi	r16,2047
   2169c:	003e6606 	br	21038 <__alt_data_end+0xfffe1038>
   216a0:	1c62b03a 	or	r17,r3,r17
   216a4:	8822c03a 	cmpne	r17,r17,zero
   216a8:	0005883a 	mov	r2,zero
   216ac:	003f9906 	br	21514 <__alt_data_end+0xfffe1514>
   216b0:	2807883a 	mov	r3,r5
   216b4:	3023883a 	mov	r17,r6
   216b8:	0401ffc4 	movi	r16,2047
   216bc:	003df506 	br	20e94 <__alt_data_end+0xfffe0e94>
   216c0:	2807883a 	mov	r3,r5
   216c4:	3023883a 	mov	r17,r6
   216c8:	003df206 	br	20e94 <__alt_data_end+0xfffe0e94>
   216cc:	123ff804 	addi	r8,r2,-32
   216d0:	01000804 	movi	r4,32
   216d4:	1a10d83a 	srl	r8,r3,r8
   216d8:	11000a26 	beq	r2,r4,21704 <__subdf3+0x8f4>
   216dc:	01001004 	movi	r4,64
   216e0:	2085c83a 	sub	r2,r4,r2
   216e4:	1884983a 	sll	r2,r3,r2
   216e8:	1444b03a 	or	r2,r2,r17
   216ec:	1004c03a 	cmpne	r2,r2,zero
   216f0:	40a2b03a 	or	r17,r8,r2
   216f4:	0005883a 	mov	r2,zero
   216f8:	003f8606 	br	21514 <__alt_data_end+0xfffe1514>
   216fc:	0005883a 	mov	r2,zero
   21700:	003fdc06 	br	21674 <__alt_data_end+0xfffe1674>
   21704:	0005883a 	mov	r2,zero
   21708:	003ff706 	br	216e8 <__alt_data_end+0xfffe16e8>

0002170c <__fixdfsi>:
   2170c:	280cd53a 	srli	r6,r5,20
   21710:	00c00434 	movhi	r3,16
   21714:	18ffffc4 	addi	r3,r3,-1
   21718:	3181ffcc 	andi	r6,r6,2047
   2171c:	01c0ff84 	movi	r7,1022
   21720:	28c6703a 	and	r3,r5,r3
   21724:	280ad7fa 	srli	r5,r5,31
   21728:	3980120e 	bge	r7,r6,21774 <__fixdfsi+0x68>
   2172c:	00810744 	movi	r2,1053
   21730:	11800c16 	blt	r2,r6,21764 <__fixdfsi+0x58>
   21734:	00810cc4 	movi	r2,1075
   21738:	1185c83a 	sub	r2,r2,r6
   2173c:	01c007c4 	movi	r7,31
   21740:	18c00434 	orhi	r3,r3,16
   21744:	38800d16 	blt	r7,r2,2177c <__fixdfsi+0x70>
   21748:	31befb44 	addi	r6,r6,-1043
   2174c:	2084d83a 	srl	r2,r4,r2
   21750:	1986983a 	sll	r3,r3,r6
   21754:	1884b03a 	or	r2,r3,r2
   21758:	28000726 	beq	r5,zero,21778 <__fixdfsi+0x6c>
   2175c:	0085c83a 	sub	r2,zero,r2
   21760:	f800283a 	ret
   21764:	00a00034 	movhi	r2,32768
   21768:	10bfffc4 	addi	r2,r2,-1
   2176c:	2885883a 	add	r2,r5,r2
   21770:	f800283a 	ret
   21774:	0005883a 	mov	r2,zero
   21778:	f800283a 	ret
   2177c:	008104c4 	movi	r2,1043
   21780:	1185c83a 	sub	r2,r2,r6
   21784:	1884d83a 	srl	r2,r3,r2
   21788:	003ff306 	br	21758 <__alt_data_end+0xfffe1758>

0002178c <__floatunsidf>:
   2178c:	defffe04 	addi	sp,sp,-8
   21790:	dc000015 	stw	r16,0(sp)
   21794:	dfc00115 	stw	ra,4(sp)
   21798:	2021883a 	mov	r16,r4
   2179c:	20002226 	beq	r4,zero,21828 <__floatunsidf+0x9c>
   217a0:	00218340 	call	21834 <__clzsi2>
   217a4:	01010784 	movi	r4,1054
   217a8:	2089c83a 	sub	r4,r4,r2
   217ac:	01810cc4 	movi	r6,1075
   217b0:	310dc83a 	sub	r6,r6,r4
   217b4:	00c007c4 	movi	r3,31
   217b8:	1980120e 	bge	r3,r6,21804 <__floatunsidf+0x78>
   217bc:	00c104c4 	movi	r3,1043
   217c0:	1907c83a 	sub	r3,r3,r4
   217c4:	80ca983a 	sll	r5,r16,r3
   217c8:	00800434 	movhi	r2,16
   217cc:	10bfffc4 	addi	r2,r2,-1
   217d0:	2101ffcc 	andi	r4,r4,2047
   217d4:	0021883a 	mov	r16,zero
   217d8:	288a703a 	and	r5,r5,r2
   217dc:	2008953a 	slli	r4,r4,20
   217e0:	00c00434 	movhi	r3,16
   217e4:	18ffffc4 	addi	r3,r3,-1
   217e8:	28c6703a 	and	r3,r5,r3
   217ec:	8005883a 	mov	r2,r16
   217f0:	1906b03a 	or	r3,r3,r4
   217f4:	dfc00117 	ldw	ra,4(sp)
   217f8:	dc000017 	ldw	r16,0(sp)
   217fc:	dec00204 	addi	sp,sp,8
   21800:	f800283a 	ret
   21804:	00c002c4 	movi	r3,11
   21808:	188bc83a 	sub	r5,r3,r2
   2180c:	814ad83a 	srl	r5,r16,r5
   21810:	00c00434 	movhi	r3,16
   21814:	18ffffc4 	addi	r3,r3,-1
   21818:	81a0983a 	sll	r16,r16,r6
   2181c:	2101ffcc 	andi	r4,r4,2047
   21820:	28ca703a 	and	r5,r5,r3
   21824:	003fed06 	br	217dc <__alt_data_end+0xfffe17dc>
   21828:	0009883a 	mov	r4,zero
   2182c:	000b883a 	mov	r5,zero
   21830:	003fea06 	br	217dc <__alt_data_end+0xfffe17dc>

00021834 <__clzsi2>:
   21834:	00bfffd4 	movui	r2,65535
   21838:	11000536 	bltu	r2,r4,21850 <__clzsi2+0x1c>
   2183c:	00803fc4 	movi	r2,255
   21840:	11000f36 	bltu	r2,r4,21880 <__clzsi2+0x4c>
   21844:	00800804 	movi	r2,32
   21848:	0007883a 	mov	r3,zero
   2184c:	00000506 	br	21864 <__clzsi2+0x30>
   21850:	00804034 	movhi	r2,256
   21854:	10bfffc4 	addi	r2,r2,-1
   21858:	11000c2e 	bgeu	r2,r4,2188c <__clzsi2+0x58>
   2185c:	00800204 	movi	r2,8
   21860:	00c00604 	movi	r3,24
   21864:	20c8d83a 	srl	r4,r4,r3
   21868:	00c000f4 	movhi	r3,3
   2186c:	18fcd604 	addi	r3,r3,-3240
   21870:	1909883a 	add	r4,r3,r4
   21874:	20c00003 	ldbu	r3,0(r4)
   21878:	10c5c83a 	sub	r2,r2,r3
   2187c:	f800283a 	ret
   21880:	00800604 	movi	r2,24
   21884:	00c00204 	movi	r3,8
   21888:	003ff606 	br	21864 <__alt_data_end+0xfffe1864>
   2188c:	00800404 	movi	r2,16
   21890:	1007883a 	mov	r3,r2
   21894:	003ff306 	br	21864 <__alt_data_end+0xfffe1864>

00021898 <_printf_r>:
   21898:	defffd04 	addi	sp,sp,-12
   2189c:	2805883a 	mov	r2,r5
   218a0:	dfc00015 	stw	ra,0(sp)
   218a4:	d9800115 	stw	r6,4(sp)
   218a8:	d9c00215 	stw	r7,8(sp)
   218ac:	21400217 	ldw	r5,8(r4)
   218b0:	d9c00104 	addi	r7,sp,4
   218b4:	100d883a 	mov	r6,r2
   218b8:	00219040 	call	21904 <___vfprintf_internal_r>
   218bc:	dfc00017 	ldw	ra,0(sp)
   218c0:	dec00304 	addi	sp,sp,12
   218c4:	f800283a 	ret

000218c8 <printf>:
   218c8:	defffc04 	addi	sp,sp,-16
   218cc:	dfc00015 	stw	ra,0(sp)
   218d0:	d9400115 	stw	r5,4(sp)
   218d4:	d9800215 	stw	r6,8(sp)
   218d8:	d9c00315 	stw	r7,12(sp)
   218dc:	008000f4 	movhi	r2,3
   218e0:	10844104 	addi	r2,r2,4356
   218e4:	10800017 	ldw	r2,0(r2)
   218e8:	200b883a 	mov	r5,r4
   218ec:	d9800104 	addi	r6,sp,4
   218f0:	11000217 	ldw	r4,8(r2)
   218f4:	0023afc0 	call	23afc <__vfprintf_internal>
   218f8:	dfc00017 	ldw	ra,0(sp)
   218fc:	dec00404 	addi	sp,sp,16
   21900:	f800283a 	ret

00021904 <___vfprintf_internal_r>:
   21904:	deffb804 	addi	sp,sp,-288
   21908:	dfc04715 	stw	ra,284(sp)
   2190c:	ddc04515 	stw	r23,276(sp)
   21910:	dd404315 	stw	r21,268(sp)
   21914:	d9002c15 	stw	r4,176(sp)
   21918:	282f883a 	mov	r23,r5
   2191c:	302b883a 	mov	r21,r6
   21920:	d9c02d15 	stw	r7,180(sp)
   21924:	df004615 	stw	fp,280(sp)
   21928:	dd804415 	stw	r22,272(sp)
   2192c:	dd004215 	stw	r20,264(sp)
   21930:	dcc04115 	stw	r19,260(sp)
   21934:	dc804015 	stw	r18,256(sp)
   21938:	dc403f15 	stw	r17,252(sp)
   2193c:	dc003e15 	stw	r16,248(sp)
   21940:	00262600 	call	26260 <_localeconv_r>
   21944:	10800017 	ldw	r2,0(r2)
   21948:	1009883a 	mov	r4,r2
   2194c:	d8803415 	stw	r2,208(sp)
   21950:	00282880 	call	28288 <strlen>
   21954:	d8803715 	stw	r2,220(sp)
   21958:	d8802c17 	ldw	r2,176(sp)
   2195c:	10000226 	beq	r2,zero,21968 <___vfprintf_internal_r+0x64>
   21960:	10800e17 	ldw	r2,56(r2)
   21964:	1000f926 	beq	r2,zero,21d4c <___vfprintf_internal_r+0x448>
   21968:	b880030b 	ldhu	r2,12(r23)
   2196c:	10c8000c 	andi	r3,r2,8192
   21970:	1800061e 	bne	r3,zero,2198c <___vfprintf_internal_r+0x88>
   21974:	b9001917 	ldw	r4,100(r23)
   21978:	00f7ffc4 	movi	r3,-8193
   2197c:	10880014 	ori	r2,r2,8192
   21980:	20c6703a 	and	r3,r4,r3
   21984:	b880030d 	sth	r2,12(r23)
   21988:	b8c01915 	stw	r3,100(r23)
   2198c:	10c0020c 	andi	r3,r2,8
   21990:	1800c126 	beq	r3,zero,21c98 <___vfprintf_internal_r+0x394>
   21994:	b8c00417 	ldw	r3,16(r23)
   21998:	1800bf26 	beq	r3,zero,21c98 <___vfprintf_internal_r+0x394>
   2199c:	1080068c 	andi	r2,r2,26
   219a0:	00c00284 	movi	r3,10
   219a4:	10c0c426 	beq	r2,r3,21cb8 <___vfprintf_internal_r+0x3b4>
   219a8:	d8c00404 	addi	r3,sp,16
   219ac:	050000f4 	movhi	r20,3
   219b0:	d9001e04 	addi	r4,sp,120
   219b4:	a53d2684 	addi	r20,r20,-2918
   219b8:	d8c01e15 	stw	r3,120(sp)
   219bc:	d8002015 	stw	zero,128(sp)
   219c0:	d8001f15 	stw	zero,124(sp)
   219c4:	d8003315 	stw	zero,204(sp)
   219c8:	d8003615 	stw	zero,216(sp)
   219cc:	d8003815 	stw	zero,224(sp)
   219d0:	1811883a 	mov	r8,r3
   219d4:	d8003915 	stw	zero,228(sp)
   219d8:	d8003a15 	stw	zero,232(sp)
   219dc:	d8002f15 	stw	zero,188(sp)
   219e0:	d9002815 	stw	r4,160(sp)
   219e4:	a8800007 	ldb	r2,0(r21)
   219e8:	10027b26 	beq	r2,zero,223d8 <___vfprintf_internal_r+0xad4>
   219ec:	00c00944 	movi	r3,37
   219f0:	a821883a 	mov	r16,r21
   219f4:	10c0021e 	bne	r2,r3,21a00 <___vfprintf_internal_r+0xfc>
   219f8:	00001406 	br	21a4c <___vfprintf_internal_r+0x148>
   219fc:	10c00326 	beq	r2,r3,21a0c <___vfprintf_internal_r+0x108>
   21a00:	84000044 	addi	r16,r16,1
   21a04:	80800007 	ldb	r2,0(r16)
   21a08:	103ffc1e 	bne	r2,zero,219fc <__alt_data_end+0xfffe19fc>
   21a0c:	8563c83a 	sub	r17,r16,r21
   21a10:	88000e26 	beq	r17,zero,21a4c <___vfprintf_internal_r+0x148>
   21a14:	d8c02017 	ldw	r3,128(sp)
   21a18:	d8801f17 	ldw	r2,124(sp)
   21a1c:	45400015 	stw	r21,0(r8)
   21a20:	1c47883a 	add	r3,r3,r17
   21a24:	10800044 	addi	r2,r2,1
   21a28:	d8c02015 	stw	r3,128(sp)
   21a2c:	44400115 	stw	r17,4(r8)
   21a30:	d8801f15 	stw	r2,124(sp)
   21a34:	00c001c4 	movi	r3,7
   21a38:	1880a716 	blt	r3,r2,21cd8 <___vfprintf_internal_r+0x3d4>
   21a3c:	42000204 	addi	r8,r8,8
   21a40:	d9402f17 	ldw	r5,188(sp)
   21a44:	2c4b883a 	add	r5,r5,r17
   21a48:	d9402f15 	stw	r5,188(sp)
   21a4c:	80800007 	ldb	r2,0(r16)
   21a50:	1000a826 	beq	r2,zero,21cf4 <___vfprintf_internal_r+0x3f0>
   21a54:	84400047 	ldb	r17,1(r16)
   21a58:	00bfffc4 	movi	r2,-1
   21a5c:	85400044 	addi	r21,r16,1
   21a60:	d8002785 	stb	zero,158(sp)
   21a64:	0007883a 	mov	r3,zero
   21a68:	000f883a 	mov	r7,zero
   21a6c:	d8802915 	stw	r2,164(sp)
   21a70:	d8003115 	stw	zero,196(sp)
   21a74:	0025883a 	mov	r18,zero
   21a78:	01401604 	movi	r5,88
   21a7c:	01800244 	movi	r6,9
   21a80:	02800a84 	movi	r10,42
   21a84:	02401b04 	movi	r9,108
   21a88:	ad400044 	addi	r21,r21,1
   21a8c:	88bff804 	addi	r2,r17,-32
   21a90:	28830436 	bltu	r5,r2,226a4 <___vfprintf_internal_r+0xda0>
   21a94:	100490ba 	slli	r2,r2,2
   21a98:	010000b4 	movhi	r4,2
   21a9c:	2106ab04 	addi	r4,r4,6828
   21aa0:	1105883a 	add	r2,r2,r4
   21aa4:	10800017 	ldw	r2,0(r2)
   21aa8:	1000683a 	jmp	r2
   21aac:	000225c4 	movi	zero,2199
   21ab0:	000226a4 	muli	zero,zero,2202
   21ab4:	000226a4 	muli	zero,zero,2202
   21ab8:	000225e4 	muli	zero,zero,2199
   21abc:	000226a4 	muli	zero,zero,2202
   21ac0:	000226a4 	muli	zero,zero,2202
   21ac4:	000226a4 	muli	zero,zero,2202
   21ac8:	000226a4 	muli	zero,zero,2202
   21acc:	000226a4 	muli	zero,zero,2202
   21ad0:	000226a4 	muli	zero,zero,2202
   21ad4:	00021d58 	cmpnei	zero,zero,2165
   21ad8:	00022500 	call	2250 <__alt_mem_onchip_memory2_0-0x1ddb0>
   21adc:	000226a4 	muli	zero,zero,2202
   21ae0:	00021c20 	cmpeqi	zero,zero,2160
   21ae4:	00021d80 	call	21d8 <__alt_mem_onchip_memory2_0-0x1de28>
   21ae8:	000226a4 	muli	zero,zero,2202
   21aec:	00021dc0 	call	21dc <__alt_mem_onchip_memory2_0-0x1de24>
   21af0:	00021dcc 	andi	zero,zero,2167
   21af4:	00021dcc 	andi	zero,zero,2167
   21af8:	00021dcc 	andi	zero,zero,2167
   21afc:	00021dcc 	andi	zero,zero,2167
   21b00:	00021dcc 	andi	zero,zero,2167
   21b04:	00021dcc 	andi	zero,zero,2167
   21b08:	00021dcc 	andi	zero,zero,2167
   21b0c:	00021dcc 	andi	zero,zero,2167
   21b10:	00021dcc 	andi	zero,zero,2167
   21b14:	000226a4 	muli	zero,zero,2202
   21b18:	000226a4 	muli	zero,zero,2202
   21b1c:	000226a4 	muli	zero,zero,2202
   21b20:	000226a4 	muli	zero,zero,2202
   21b24:	000226a4 	muli	zero,zero,2202
   21b28:	000226a4 	muli	zero,zero,2202
   21b2c:	000226a4 	muli	zero,zero,2202
   21b30:	000226a4 	muli	zero,zero,2202
   21b34:	000226a4 	muli	zero,zero,2202
   21b38:	000226a4 	muli	zero,zero,2202
   21b3c:	00021e00 	call	21e0 <__alt_mem_onchip_memory2_0-0x1de20>
   21b40:	00021ebc 	xorhi	zero,zero,2170
   21b44:	000226a4 	muli	zero,zero,2202
   21b48:	00021ebc 	xorhi	zero,zero,2170
   21b4c:	000226a4 	muli	zero,zero,2202
   21b50:	000226a4 	muli	zero,zero,2202
   21b54:	000226a4 	muli	zero,zero,2202
   21b58:	000226a4 	muli	zero,zero,2202
   21b5c:	00021f5c 	xori	zero,zero,2173
   21b60:	000226a4 	muli	zero,zero,2202
   21b64:	000226a4 	muli	zero,zero,2202
   21b68:	00021f68 	cmpgeui	zero,zero,2173
   21b6c:	000226a4 	muli	zero,zero,2202
   21b70:	000226a4 	muli	zero,zero,2202
   21b74:	000226a4 	muli	zero,zero,2202
   21b78:	000226a4 	muli	zero,zero,2202
   21b7c:	000226a4 	muli	zero,zero,2202
   21b80:	000223e0 	cmpeqi	zero,zero,2191
   21b84:	000226a4 	muli	zero,zero,2202
   21b88:	000226a4 	muli	zero,zero,2202
   21b8c:	00022440 	call	2244 <__alt_mem_onchip_memory2_0-0x1ddbc>
   21b90:	000226a4 	muli	zero,zero,2202
   21b94:	000226a4 	muli	zero,zero,2202
   21b98:	000226a4 	muli	zero,zero,2202
   21b9c:	000226a4 	muli	zero,zero,2202
   21ba0:	000226a4 	muli	zero,zero,2202
   21ba4:	000226a4 	muli	zero,zero,2202
   21ba8:	000226a4 	muli	zero,zero,2202
   21bac:	000226a4 	muli	zero,zero,2202
   21bb0:	000226a4 	muli	zero,zero,2202
   21bb4:	000226a4 	muli	zero,zero,2202
   21bb8:	00022650 	cmplti	zero,zero,2201
   21bbc:	000225f0 	cmpltui	zero,zero,2199
   21bc0:	00021ebc 	xorhi	zero,zero,2170
   21bc4:	00021ebc 	xorhi	zero,zero,2170
   21bc8:	00021ebc 	xorhi	zero,zero,2170
   21bcc:	00022600 	call	2260 <__alt_mem_onchip_memory2_0-0x1dda0>
   21bd0:	000225f0 	cmpltui	zero,zero,2199
   21bd4:	000226a4 	muli	zero,zero,2202
   21bd8:	000226a4 	muli	zero,zero,2202
   21bdc:	0002260c 	andi	zero,zero,2200
   21be0:	000226a4 	muli	zero,zero,2202
   21be4:	0002261c 	xori	zero,zero,2200
   21be8:	000224f0 	cmpltui	zero,zero,2195
   21bec:	00021c2c 	andhi	zero,zero,2160
   21bf0:	00022510 	cmplti	zero,zero,2196
   21bf4:	000226a4 	muli	zero,zero,2202
   21bf8:	0002251c 	xori	zero,zero,2196
   21bfc:	000226a4 	muli	zero,zero,2202
   21c00:	00022578 	rdprs	zero,zero,2197
   21c04:	000226a4 	muli	zero,zero,2202
   21c08:	000226a4 	muli	zero,zero,2202
   21c0c:	00022588 	cmpgei	zero,zero,2198
   21c10:	d9003117 	ldw	r4,196(sp)
   21c14:	d8802d15 	stw	r2,180(sp)
   21c18:	0109c83a 	sub	r4,zero,r4
   21c1c:	d9003115 	stw	r4,196(sp)
   21c20:	94800114 	ori	r18,r18,4
   21c24:	ac400007 	ldb	r17,0(r21)
   21c28:	003f9706 	br	21a88 <__alt_data_end+0xfffe1a88>
   21c2c:	00800c04 	movi	r2,48
   21c30:	d9002d17 	ldw	r4,180(sp)
   21c34:	d9402917 	ldw	r5,164(sp)
   21c38:	d8802705 	stb	r2,156(sp)
   21c3c:	00801e04 	movi	r2,120
   21c40:	d8802745 	stb	r2,157(sp)
   21c44:	d8002785 	stb	zero,158(sp)
   21c48:	20c00104 	addi	r3,r4,4
   21c4c:	24c00017 	ldw	r19,0(r4)
   21c50:	002d883a 	mov	r22,zero
   21c54:	90800094 	ori	r2,r18,2
   21c58:	28029a16 	blt	r5,zero,226c4 <___vfprintf_internal_r+0xdc0>
   21c5c:	00bfdfc4 	movi	r2,-129
   21c60:	90a4703a 	and	r18,r18,r2
   21c64:	d8c02d15 	stw	r3,180(sp)
   21c68:	94800094 	ori	r18,r18,2
   21c6c:	9802871e 	bne	r19,zero,2268c <___vfprintf_internal_r+0xd88>
   21c70:	008000f4 	movhi	r2,3
   21c74:	10bd1f04 	addi	r2,r2,-2948
   21c78:	d8803915 	stw	r2,228(sp)
   21c7c:	04401e04 	movi	r17,120
   21c80:	d8802917 	ldw	r2,164(sp)
   21c84:	0039883a 	mov	fp,zero
   21c88:	1001e926 	beq	r2,zero,22430 <___vfprintf_internal_r+0xb2c>
   21c8c:	0027883a 	mov	r19,zero
   21c90:	002d883a 	mov	r22,zero
   21c94:	00020506 	br	224ac <___vfprintf_internal_r+0xba8>
   21c98:	d9002c17 	ldw	r4,176(sp)
   21c9c:	b80b883a 	mov	r5,r23
   21ca0:	0023bd40 	call	23bd4 <__swsetup_r>
   21ca4:	1005ac1e 	bne	r2,zero,23358 <___vfprintf_internal_r+0x1a54>
   21ca8:	b880030b 	ldhu	r2,12(r23)
   21cac:	00c00284 	movi	r3,10
   21cb0:	1080068c 	andi	r2,r2,26
   21cb4:	10ff3c1e 	bne	r2,r3,219a8 <__alt_data_end+0xfffe19a8>
   21cb8:	b880038f 	ldh	r2,14(r23)
   21cbc:	103f3a16 	blt	r2,zero,219a8 <__alt_data_end+0xfffe19a8>
   21cc0:	d9c02d17 	ldw	r7,180(sp)
   21cc4:	d9002c17 	ldw	r4,176(sp)
   21cc8:	a80d883a 	mov	r6,r21
   21ccc:	b80b883a 	mov	r5,r23
   21cd0:	0023b180 	call	23b18 <__sbprintf>
   21cd4:	00001106 	br	21d1c <___vfprintf_internal_r+0x418>
   21cd8:	d9002c17 	ldw	r4,176(sp)
   21cdc:	d9801e04 	addi	r6,sp,120
   21ce0:	b80b883a 	mov	r5,r23
   21ce4:	002841c0 	call	2841c <__sprint_r>
   21ce8:	1000081e 	bne	r2,zero,21d0c <___vfprintf_internal_r+0x408>
   21cec:	da000404 	addi	r8,sp,16
   21cf0:	003f5306 	br	21a40 <__alt_data_end+0xfffe1a40>
   21cf4:	d8802017 	ldw	r2,128(sp)
   21cf8:	10000426 	beq	r2,zero,21d0c <___vfprintf_internal_r+0x408>
   21cfc:	d9002c17 	ldw	r4,176(sp)
   21d00:	d9801e04 	addi	r6,sp,120
   21d04:	b80b883a 	mov	r5,r23
   21d08:	002841c0 	call	2841c <__sprint_r>
   21d0c:	b880030b 	ldhu	r2,12(r23)
   21d10:	1080100c 	andi	r2,r2,64
   21d14:	1005901e 	bne	r2,zero,23358 <___vfprintf_internal_r+0x1a54>
   21d18:	d8802f17 	ldw	r2,188(sp)
   21d1c:	dfc04717 	ldw	ra,284(sp)
   21d20:	df004617 	ldw	fp,280(sp)
   21d24:	ddc04517 	ldw	r23,276(sp)
   21d28:	dd804417 	ldw	r22,272(sp)
   21d2c:	dd404317 	ldw	r21,268(sp)
   21d30:	dd004217 	ldw	r20,264(sp)
   21d34:	dcc04117 	ldw	r19,260(sp)
   21d38:	dc804017 	ldw	r18,256(sp)
   21d3c:	dc403f17 	ldw	r17,252(sp)
   21d40:	dc003e17 	ldw	r16,248(sp)
   21d44:	dec04804 	addi	sp,sp,288
   21d48:	f800283a 	ret
   21d4c:	d9002c17 	ldw	r4,176(sp)
   21d50:	0025ba80 	call	25ba8 <__sinit>
   21d54:	003f0406 	br	21968 <__alt_data_end+0xfffe1968>
   21d58:	d8802d17 	ldw	r2,180(sp)
   21d5c:	d9002d17 	ldw	r4,180(sp)
   21d60:	10800017 	ldw	r2,0(r2)
   21d64:	d8803115 	stw	r2,196(sp)
   21d68:	20800104 	addi	r2,r4,4
   21d6c:	d9003117 	ldw	r4,196(sp)
   21d70:	203fa716 	blt	r4,zero,21c10 <__alt_data_end+0xfffe1c10>
   21d74:	d8802d15 	stw	r2,180(sp)
   21d78:	ac400007 	ldb	r17,0(r21)
   21d7c:	003f4206 	br	21a88 <__alt_data_end+0xfffe1a88>
   21d80:	ac400007 	ldb	r17,0(r21)
   21d84:	aac00044 	addi	r11,r21,1
   21d88:	8a872826 	beq	r17,r10,23a2c <___vfprintf_internal_r+0x2128>
   21d8c:	88bff404 	addi	r2,r17,-48
   21d90:	0009883a 	mov	r4,zero
   21d94:	30867d36 	bltu	r6,r2,2378c <___vfprintf_internal_r+0x1e88>
   21d98:	5c400007 	ldb	r17,0(r11)
   21d9c:	210002a4 	muli	r4,r4,10
   21da0:	5d400044 	addi	r21,r11,1
   21da4:	a817883a 	mov	r11,r21
   21da8:	2089883a 	add	r4,r4,r2
   21dac:	88bff404 	addi	r2,r17,-48
   21db0:	30bff92e 	bgeu	r6,r2,21d98 <__alt_data_end+0xfffe1d98>
   21db4:	2005c916 	blt	r4,zero,234dc <___vfprintf_internal_r+0x1bd8>
   21db8:	d9002915 	stw	r4,164(sp)
   21dbc:	003f3306 	br	21a8c <__alt_data_end+0xfffe1a8c>
   21dc0:	94802014 	ori	r18,r18,128
   21dc4:	ac400007 	ldb	r17,0(r21)
   21dc8:	003f2f06 	br	21a88 <__alt_data_end+0xfffe1a88>
   21dcc:	a809883a 	mov	r4,r21
   21dd0:	d8003115 	stw	zero,196(sp)
   21dd4:	88bff404 	addi	r2,r17,-48
   21dd8:	0017883a 	mov	r11,zero
   21ddc:	24400007 	ldb	r17,0(r4)
   21de0:	5ac002a4 	muli	r11,r11,10
   21de4:	ad400044 	addi	r21,r21,1
   21de8:	a809883a 	mov	r4,r21
   21dec:	12d7883a 	add	r11,r2,r11
   21df0:	88bff404 	addi	r2,r17,-48
   21df4:	30bff92e 	bgeu	r6,r2,21ddc <__alt_data_end+0xfffe1ddc>
   21df8:	dac03115 	stw	r11,196(sp)
   21dfc:	003f2306 	br	21a8c <__alt_data_end+0xfffe1a8c>
   21e00:	18c03fcc 	andi	r3,r3,255
   21e04:	18072b1e 	bne	r3,zero,23ab4 <___vfprintf_internal_r+0x21b0>
   21e08:	94800414 	ori	r18,r18,16
   21e0c:	9080080c 	andi	r2,r18,32
   21e10:	10037b26 	beq	r2,zero,22c00 <___vfprintf_internal_r+0x12fc>
   21e14:	d9402d17 	ldw	r5,180(sp)
   21e18:	28800117 	ldw	r2,4(r5)
   21e1c:	2cc00017 	ldw	r19,0(r5)
   21e20:	29400204 	addi	r5,r5,8
   21e24:	d9402d15 	stw	r5,180(sp)
   21e28:	102d883a 	mov	r22,r2
   21e2c:	10044b16 	blt	r2,zero,22f5c <___vfprintf_internal_r+0x1658>
   21e30:	d9402917 	ldw	r5,164(sp)
   21e34:	df002783 	ldbu	fp,158(sp)
   21e38:	2803bc16 	blt	r5,zero,22d2c <___vfprintf_internal_r+0x1428>
   21e3c:	00ffdfc4 	movi	r3,-129
   21e40:	9d84b03a 	or	r2,r19,r22
   21e44:	90e4703a 	and	r18,r18,r3
   21e48:	10017726 	beq	r2,zero,22428 <___vfprintf_internal_r+0xb24>
   21e4c:	b0038326 	beq	r22,zero,22c5c <___vfprintf_internal_r+0x1358>
   21e50:	dc402a15 	stw	r17,168(sp)
   21e54:	dc001e04 	addi	r16,sp,120
   21e58:	b023883a 	mov	r17,r22
   21e5c:	402d883a 	mov	r22,r8
   21e60:	9809883a 	mov	r4,r19
   21e64:	880b883a 	mov	r5,r17
   21e68:	01800284 	movi	r6,10
   21e6c:	000f883a 	mov	r7,zero
   21e70:	002b3900 	call	2b390 <__umoddi3>
   21e74:	10800c04 	addi	r2,r2,48
   21e78:	843fffc4 	addi	r16,r16,-1
   21e7c:	9809883a 	mov	r4,r19
   21e80:	880b883a 	mov	r5,r17
   21e84:	80800005 	stb	r2,0(r16)
   21e88:	01800284 	movi	r6,10
   21e8c:	000f883a 	mov	r7,zero
   21e90:	002ae180 	call	2ae18 <__udivdi3>
   21e94:	1027883a 	mov	r19,r2
   21e98:	10c4b03a 	or	r2,r2,r3
   21e9c:	1823883a 	mov	r17,r3
   21ea0:	103fef1e 	bne	r2,zero,21e60 <__alt_data_end+0xfffe1e60>
   21ea4:	d8c02817 	ldw	r3,160(sp)
   21ea8:	dc402a17 	ldw	r17,168(sp)
   21eac:	b011883a 	mov	r8,r22
   21eb0:	1c07c83a 	sub	r3,r3,r16
   21eb4:	d8c02e15 	stw	r3,184(sp)
   21eb8:	00005906 	br	22020 <___vfprintf_internal_r+0x71c>
   21ebc:	18c03fcc 	andi	r3,r3,255
   21ec0:	1806fa1e 	bne	r3,zero,23aac <___vfprintf_internal_r+0x21a8>
   21ec4:	9080020c 	andi	r2,r18,8
   21ec8:	10048a26 	beq	r2,zero,230f4 <___vfprintf_internal_r+0x17f0>
   21ecc:	d8c02d17 	ldw	r3,180(sp)
   21ed0:	d9002d17 	ldw	r4,180(sp)
   21ed4:	d9402d17 	ldw	r5,180(sp)
   21ed8:	18c00017 	ldw	r3,0(r3)
   21edc:	21000117 	ldw	r4,4(r4)
   21ee0:	29400204 	addi	r5,r5,8
   21ee4:	d8c03615 	stw	r3,216(sp)
   21ee8:	d9003815 	stw	r4,224(sp)
   21eec:	d9402d15 	stw	r5,180(sp)
   21ef0:	d9003617 	ldw	r4,216(sp)
   21ef4:	d9403817 	ldw	r5,224(sp)
   21ef8:	da003d15 	stw	r8,244(sp)
   21efc:	04000044 	movi	r16,1
   21f00:	0027fa80 	call	27fa8 <__fpclassifyd>
   21f04:	da003d17 	ldw	r8,244(sp)
   21f08:	14041f1e 	bne	r2,r16,22f88 <___vfprintf_internal_r+0x1684>
   21f0c:	d9003617 	ldw	r4,216(sp)
   21f10:	d9403817 	ldw	r5,224(sp)
   21f14:	000d883a 	mov	r6,zero
   21f18:	000f883a 	mov	r7,zero
   21f1c:	002cae40 	call	2cae4 <__ledf2>
   21f20:	da003d17 	ldw	r8,244(sp)
   21f24:	1005be16 	blt	r2,zero,23620 <___vfprintf_internal_r+0x1d1c>
   21f28:	df002783 	ldbu	fp,158(sp)
   21f2c:	008011c4 	movi	r2,71
   21f30:	1445330e 	bge	r2,r17,23400 <___vfprintf_internal_r+0x1afc>
   21f34:	040000f4 	movhi	r16,3
   21f38:	843d1704 	addi	r16,r16,-2980
   21f3c:	00c000c4 	movi	r3,3
   21f40:	00bfdfc4 	movi	r2,-129
   21f44:	d8c02a15 	stw	r3,168(sp)
   21f48:	90a4703a 	and	r18,r18,r2
   21f4c:	d8c02e15 	stw	r3,184(sp)
   21f50:	d8002915 	stw	zero,164(sp)
   21f54:	d8003215 	stw	zero,200(sp)
   21f58:	00003706 	br	22038 <___vfprintf_internal_r+0x734>
   21f5c:	94800214 	ori	r18,r18,8
   21f60:	ac400007 	ldb	r17,0(r21)
   21f64:	003ec806 	br	21a88 <__alt_data_end+0xfffe1a88>
   21f68:	18c03fcc 	andi	r3,r3,255
   21f6c:	1806db1e 	bne	r3,zero,23adc <___vfprintf_internal_r+0x21d8>
   21f70:	94800414 	ori	r18,r18,16
   21f74:	9080080c 	andi	r2,r18,32
   21f78:	1002d826 	beq	r2,zero,22adc <___vfprintf_internal_r+0x11d8>
   21f7c:	d9402d17 	ldw	r5,180(sp)
   21f80:	d8c02917 	ldw	r3,164(sp)
   21f84:	d8002785 	stb	zero,158(sp)
   21f88:	28800204 	addi	r2,r5,8
   21f8c:	2cc00017 	ldw	r19,0(r5)
   21f90:	2d800117 	ldw	r22,4(r5)
   21f94:	18048f16 	blt	r3,zero,231d4 <___vfprintf_internal_r+0x18d0>
   21f98:	013fdfc4 	movi	r4,-129
   21f9c:	9d86b03a 	or	r3,r19,r22
   21fa0:	d8802d15 	stw	r2,180(sp)
   21fa4:	9124703a 	and	r18,r18,r4
   21fa8:	1802d91e 	bne	r3,zero,22b10 <___vfprintf_internal_r+0x120c>
   21fac:	d8c02917 	ldw	r3,164(sp)
   21fb0:	0039883a 	mov	fp,zero
   21fb4:	1805c326 	beq	r3,zero,236c4 <___vfprintf_internal_r+0x1dc0>
   21fb8:	0027883a 	mov	r19,zero
   21fbc:	002d883a 	mov	r22,zero
   21fc0:	dc001e04 	addi	r16,sp,120
   21fc4:	9806d0fa 	srli	r3,r19,3
   21fc8:	b008977a 	slli	r4,r22,29
   21fcc:	b02cd0fa 	srli	r22,r22,3
   21fd0:	9cc001cc 	andi	r19,r19,7
   21fd4:	98800c04 	addi	r2,r19,48
   21fd8:	843fffc4 	addi	r16,r16,-1
   21fdc:	20e6b03a 	or	r19,r4,r3
   21fe0:	80800005 	stb	r2,0(r16)
   21fe4:	9d86b03a 	or	r3,r19,r22
   21fe8:	183ff61e 	bne	r3,zero,21fc4 <__alt_data_end+0xfffe1fc4>
   21fec:	90c0004c 	andi	r3,r18,1
   21ff0:	18013b26 	beq	r3,zero,224e0 <___vfprintf_internal_r+0xbdc>
   21ff4:	10803fcc 	andi	r2,r2,255
   21ff8:	1080201c 	xori	r2,r2,128
   21ffc:	10bfe004 	addi	r2,r2,-128
   22000:	00c00c04 	movi	r3,48
   22004:	10c13626 	beq	r2,r3,224e0 <___vfprintf_internal_r+0xbdc>
   22008:	80ffffc5 	stb	r3,-1(r16)
   2200c:	d8c02817 	ldw	r3,160(sp)
   22010:	80bfffc4 	addi	r2,r16,-1
   22014:	1021883a 	mov	r16,r2
   22018:	1887c83a 	sub	r3,r3,r2
   2201c:	d8c02e15 	stw	r3,184(sp)
   22020:	d8802e17 	ldw	r2,184(sp)
   22024:	d9002917 	ldw	r4,164(sp)
   22028:	1100010e 	bge	r2,r4,22030 <___vfprintf_internal_r+0x72c>
   2202c:	2005883a 	mov	r2,r4
   22030:	d8802a15 	stw	r2,168(sp)
   22034:	d8003215 	stw	zero,200(sp)
   22038:	e7003fcc 	andi	fp,fp,255
   2203c:	e700201c 	xori	fp,fp,128
   22040:	e73fe004 	addi	fp,fp,-128
   22044:	e0000326 	beq	fp,zero,22054 <___vfprintf_internal_r+0x750>
   22048:	d8c02a17 	ldw	r3,168(sp)
   2204c:	18c00044 	addi	r3,r3,1
   22050:	d8c02a15 	stw	r3,168(sp)
   22054:	90c0008c 	andi	r3,r18,2
   22058:	d8c02b15 	stw	r3,172(sp)
   2205c:	18000326 	beq	r3,zero,2206c <___vfprintf_internal_r+0x768>
   22060:	d8c02a17 	ldw	r3,168(sp)
   22064:	18c00084 	addi	r3,r3,2
   22068:	d8c02a15 	stw	r3,168(sp)
   2206c:	90c0210c 	andi	r3,r18,132
   22070:	d8c03015 	stw	r3,192(sp)
   22074:	1801a31e 	bne	r3,zero,22704 <___vfprintf_internal_r+0xe00>
   22078:	d9003117 	ldw	r4,196(sp)
   2207c:	d8c02a17 	ldw	r3,168(sp)
   22080:	20e7c83a 	sub	r19,r4,r3
   22084:	04c19f0e 	bge	zero,r19,22704 <___vfprintf_internal_r+0xe00>
   22088:	02400404 	movi	r9,16
   2208c:	d8c02017 	ldw	r3,128(sp)
   22090:	d8801f17 	ldw	r2,124(sp)
   22094:	4cc50d0e 	bge	r9,r19,234cc <___vfprintf_internal_r+0x1bc8>
   22098:	014000f4 	movhi	r5,3
   2209c:	297d2a84 	addi	r5,r5,-2902
   220a0:	dc403b15 	stw	r17,236(sp)
   220a4:	d9403515 	stw	r5,212(sp)
   220a8:	9823883a 	mov	r17,r19
   220ac:	482d883a 	mov	r22,r9
   220b0:	9027883a 	mov	r19,r18
   220b4:	070001c4 	movi	fp,7
   220b8:	8025883a 	mov	r18,r16
   220bc:	dc002c17 	ldw	r16,176(sp)
   220c0:	00000306 	br	220d0 <___vfprintf_internal_r+0x7cc>
   220c4:	8c7ffc04 	addi	r17,r17,-16
   220c8:	42000204 	addi	r8,r8,8
   220cc:	b440130e 	bge	r22,r17,2211c <___vfprintf_internal_r+0x818>
   220d0:	010000f4 	movhi	r4,3
   220d4:	18c00404 	addi	r3,r3,16
   220d8:	10800044 	addi	r2,r2,1
   220dc:	213d2a84 	addi	r4,r4,-2902
   220e0:	41000015 	stw	r4,0(r8)
   220e4:	45800115 	stw	r22,4(r8)
   220e8:	d8c02015 	stw	r3,128(sp)
   220ec:	d8801f15 	stw	r2,124(sp)
   220f0:	e0bff40e 	bge	fp,r2,220c4 <__alt_data_end+0xfffe20c4>
   220f4:	d9801e04 	addi	r6,sp,120
   220f8:	b80b883a 	mov	r5,r23
   220fc:	8009883a 	mov	r4,r16
   22100:	002841c0 	call	2841c <__sprint_r>
   22104:	103f011e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22108:	8c7ffc04 	addi	r17,r17,-16
   2210c:	d8c02017 	ldw	r3,128(sp)
   22110:	d8801f17 	ldw	r2,124(sp)
   22114:	da000404 	addi	r8,sp,16
   22118:	b47fed16 	blt	r22,r17,220d0 <__alt_data_end+0xfffe20d0>
   2211c:	9021883a 	mov	r16,r18
   22120:	9825883a 	mov	r18,r19
   22124:	8827883a 	mov	r19,r17
   22128:	dc403b17 	ldw	r17,236(sp)
   2212c:	d9403517 	ldw	r5,212(sp)
   22130:	98c7883a 	add	r3,r19,r3
   22134:	10800044 	addi	r2,r2,1
   22138:	41400015 	stw	r5,0(r8)
   2213c:	44c00115 	stw	r19,4(r8)
   22140:	d8c02015 	stw	r3,128(sp)
   22144:	d8801f15 	stw	r2,124(sp)
   22148:	010001c4 	movi	r4,7
   2214c:	2082a316 	blt	r4,r2,22bdc <___vfprintf_internal_r+0x12d8>
   22150:	df002787 	ldb	fp,158(sp)
   22154:	42000204 	addi	r8,r8,8
   22158:	e0000c26 	beq	fp,zero,2218c <___vfprintf_internal_r+0x888>
   2215c:	d8801f17 	ldw	r2,124(sp)
   22160:	d9002784 	addi	r4,sp,158
   22164:	18c00044 	addi	r3,r3,1
   22168:	10800044 	addi	r2,r2,1
   2216c:	41000015 	stw	r4,0(r8)
   22170:	01000044 	movi	r4,1
   22174:	41000115 	stw	r4,4(r8)
   22178:	d8c02015 	stw	r3,128(sp)
   2217c:	d8801f15 	stw	r2,124(sp)
   22180:	010001c4 	movi	r4,7
   22184:	20823c16 	blt	r4,r2,22a78 <___vfprintf_internal_r+0x1174>
   22188:	42000204 	addi	r8,r8,8
   2218c:	d8802b17 	ldw	r2,172(sp)
   22190:	10000c26 	beq	r2,zero,221c4 <___vfprintf_internal_r+0x8c0>
   22194:	d8801f17 	ldw	r2,124(sp)
   22198:	d9002704 	addi	r4,sp,156
   2219c:	18c00084 	addi	r3,r3,2
   221a0:	10800044 	addi	r2,r2,1
   221a4:	41000015 	stw	r4,0(r8)
   221a8:	01000084 	movi	r4,2
   221ac:	41000115 	stw	r4,4(r8)
   221b0:	d8c02015 	stw	r3,128(sp)
   221b4:	d8801f15 	stw	r2,124(sp)
   221b8:	010001c4 	movi	r4,7
   221bc:	20823616 	blt	r4,r2,22a98 <___vfprintf_internal_r+0x1194>
   221c0:	42000204 	addi	r8,r8,8
   221c4:	d9003017 	ldw	r4,192(sp)
   221c8:	00802004 	movi	r2,128
   221cc:	20819926 	beq	r4,r2,22834 <___vfprintf_internal_r+0xf30>
   221d0:	d9402917 	ldw	r5,164(sp)
   221d4:	d8802e17 	ldw	r2,184(sp)
   221d8:	28adc83a 	sub	r22,r5,r2
   221dc:	0580310e 	bge	zero,r22,222a4 <___vfprintf_internal_r+0x9a0>
   221e0:	07000404 	movi	fp,16
   221e4:	d8801f17 	ldw	r2,124(sp)
   221e8:	e584140e 	bge	fp,r22,2323c <___vfprintf_internal_r+0x1938>
   221ec:	014000f4 	movhi	r5,3
   221f0:	297d2684 	addi	r5,r5,-2918
   221f4:	dc402915 	stw	r17,164(sp)
   221f8:	d9402b15 	stw	r5,172(sp)
   221fc:	b023883a 	mov	r17,r22
   22200:	04c001c4 	movi	r19,7
   22204:	a82d883a 	mov	r22,r21
   22208:	902b883a 	mov	r21,r18
   2220c:	8025883a 	mov	r18,r16
   22210:	dc002c17 	ldw	r16,176(sp)
   22214:	00000306 	br	22224 <___vfprintf_internal_r+0x920>
   22218:	8c7ffc04 	addi	r17,r17,-16
   2221c:	42000204 	addi	r8,r8,8
   22220:	e440110e 	bge	fp,r17,22268 <___vfprintf_internal_r+0x964>
   22224:	18c00404 	addi	r3,r3,16
   22228:	10800044 	addi	r2,r2,1
   2222c:	45000015 	stw	r20,0(r8)
   22230:	47000115 	stw	fp,4(r8)
   22234:	d8c02015 	stw	r3,128(sp)
   22238:	d8801f15 	stw	r2,124(sp)
   2223c:	98bff60e 	bge	r19,r2,22218 <__alt_data_end+0xfffe2218>
   22240:	d9801e04 	addi	r6,sp,120
   22244:	b80b883a 	mov	r5,r23
   22248:	8009883a 	mov	r4,r16
   2224c:	002841c0 	call	2841c <__sprint_r>
   22250:	103eae1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22254:	8c7ffc04 	addi	r17,r17,-16
   22258:	d8c02017 	ldw	r3,128(sp)
   2225c:	d8801f17 	ldw	r2,124(sp)
   22260:	da000404 	addi	r8,sp,16
   22264:	e47fef16 	blt	fp,r17,22224 <__alt_data_end+0xfffe2224>
   22268:	9021883a 	mov	r16,r18
   2226c:	a825883a 	mov	r18,r21
   22270:	b02b883a 	mov	r21,r22
   22274:	882d883a 	mov	r22,r17
   22278:	dc402917 	ldw	r17,164(sp)
   2227c:	d9002b17 	ldw	r4,172(sp)
   22280:	1d87883a 	add	r3,r3,r22
   22284:	10800044 	addi	r2,r2,1
   22288:	41000015 	stw	r4,0(r8)
   2228c:	45800115 	stw	r22,4(r8)
   22290:	d8c02015 	stw	r3,128(sp)
   22294:	d8801f15 	stw	r2,124(sp)
   22298:	010001c4 	movi	r4,7
   2229c:	2081ee16 	blt	r4,r2,22a58 <___vfprintf_internal_r+0x1154>
   222a0:	42000204 	addi	r8,r8,8
   222a4:	9080400c 	andi	r2,r18,256
   222a8:	1001181e 	bne	r2,zero,2270c <___vfprintf_internal_r+0xe08>
   222ac:	d9402e17 	ldw	r5,184(sp)
   222b0:	d8801f17 	ldw	r2,124(sp)
   222b4:	44000015 	stw	r16,0(r8)
   222b8:	1947883a 	add	r3,r3,r5
   222bc:	10800044 	addi	r2,r2,1
   222c0:	41400115 	stw	r5,4(r8)
   222c4:	d8c02015 	stw	r3,128(sp)
   222c8:	d8801f15 	stw	r2,124(sp)
   222cc:	010001c4 	movi	r4,7
   222d0:	2081d316 	blt	r4,r2,22a20 <___vfprintf_internal_r+0x111c>
   222d4:	42000204 	addi	r8,r8,8
   222d8:	9480010c 	andi	r18,r18,4
   222dc:	90003226 	beq	r18,zero,223a8 <___vfprintf_internal_r+0xaa4>
   222e0:	d9403117 	ldw	r5,196(sp)
   222e4:	d8802a17 	ldw	r2,168(sp)
   222e8:	28a1c83a 	sub	r16,r5,r2
   222ec:	04002e0e 	bge	zero,r16,223a8 <___vfprintf_internal_r+0xaa4>
   222f0:	04400404 	movi	r17,16
   222f4:	d8801f17 	ldw	r2,124(sp)
   222f8:	8c04a20e 	bge	r17,r16,23584 <___vfprintf_internal_r+0x1c80>
   222fc:	014000f4 	movhi	r5,3
   22300:	297d2a84 	addi	r5,r5,-2902
   22304:	d9403515 	stw	r5,212(sp)
   22308:	048001c4 	movi	r18,7
   2230c:	dcc02c17 	ldw	r19,176(sp)
   22310:	00000306 	br	22320 <___vfprintf_internal_r+0xa1c>
   22314:	843ffc04 	addi	r16,r16,-16
   22318:	42000204 	addi	r8,r8,8
   2231c:	8c00130e 	bge	r17,r16,2236c <___vfprintf_internal_r+0xa68>
   22320:	010000f4 	movhi	r4,3
   22324:	18c00404 	addi	r3,r3,16
   22328:	10800044 	addi	r2,r2,1
   2232c:	213d2a84 	addi	r4,r4,-2902
   22330:	41000015 	stw	r4,0(r8)
   22334:	44400115 	stw	r17,4(r8)
   22338:	d8c02015 	stw	r3,128(sp)
   2233c:	d8801f15 	stw	r2,124(sp)
   22340:	90bff40e 	bge	r18,r2,22314 <__alt_data_end+0xfffe2314>
   22344:	d9801e04 	addi	r6,sp,120
   22348:	b80b883a 	mov	r5,r23
   2234c:	9809883a 	mov	r4,r19
   22350:	002841c0 	call	2841c <__sprint_r>
   22354:	103e6d1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22358:	843ffc04 	addi	r16,r16,-16
   2235c:	d8c02017 	ldw	r3,128(sp)
   22360:	d8801f17 	ldw	r2,124(sp)
   22364:	da000404 	addi	r8,sp,16
   22368:	8c3fed16 	blt	r17,r16,22320 <__alt_data_end+0xfffe2320>
   2236c:	d9403517 	ldw	r5,212(sp)
   22370:	1c07883a 	add	r3,r3,r16
   22374:	10800044 	addi	r2,r2,1
   22378:	41400015 	stw	r5,0(r8)
   2237c:	44000115 	stw	r16,4(r8)
   22380:	d8c02015 	stw	r3,128(sp)
   22384:	d8801f15 	stw	r2,124(sp)
   22388:	010001c4 	movi	r4,7
   2238c:	2080060e 	bge	r4,r2,223a8 <___vfprintf_internal_r+0xaa4>
   22390:	d9002c17 	ldw	r4,176(sp)
   22394:	d9801e04 	addi	r6,sp,120
   22398:	b80b883a 	mov	r5,r23
   2239c:	002841c0 	call	2841c <__sprint_r>
   223a0:	103e5a1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   223a4:	d8c02017 	ldw	r3,128(sp)
   223a8:	d8803117 	ldw	r2,196(sp)
   223ac:	d9002a17 	ldw	r4,168(sp)
   223b0:	1100010e 	bge	r2,r4,223b8 <___vfprintf_internal_r+0xab4>
   223b4:	2005883a 	mov	r2,r4
   223b8:	d9402f17 	ldw	r5,188(sp)
   223bc:	288b883a 	add	r5,r5,r2
   223c0:	d9402f15 	stw	r5,188(sp)
   223c4:	18019e1e 	bne	r3,zero,22a40 <___vfprintf_internal_r+0x113c>
   223c8:	a8800007 	ldb	r2,0(r21)
   223cc:	d8001f15 	stw	zero,124(sp)
   223d0:	da000404 	addi	r8,sp,16
   223d4:	103d851e 	bne	r2,zero,219ec <__alt_data_end+0xfffe19ec>
   223d8:	a821883a 	mov	r16,r21
   223dc:	003d9b06 	br	21a4c <__alt_data_end+0xfffe1a4c>
   223e0:	18c03fcc 	andi	r3,r3,255
   223e4:	1805c11e 	bne	r3,zero,23aec <___vfprintf_internal_r+0x21e8>
   223e8:	94800414 	ori	r18,r18,16
   223ec:	9080080c 	andi	r2,r18,32
   223f0:	10020c26 	beq	r2,zero,22c24 <___vfprintf_internal_r+0x1320>
   223f4:	d8802d17 	ldw	r2,180(sp)
   223f8:	d9002917 	ldw	r4,164(sp)
   223fc:	d8002785 	stb	zero,158(sp)
   22400:	10c00204 	addi	r3,r2,8
   22404:	14c00017 	ldw	r19,0(r2)
   22408:	15800117 	ldw	r22,4(r2)
   2240c:	20040f16 	blt	r4,zero,2344c <___vfprintf_internal_r+0x1b48>
   22410:	013fdfc4 	movi	r4,-129
   22414:	9d84b03a 	or	r2,r19,r22
   22418:	d8c02d15 	stw	r3,180(sp)
   2241c:	9124703a 	and	r18,r18,r4
   22420:	0039883a 	mov	fp,zero
   22424:	103e891e 	bne	r2,zero,21e4c <__alt_data_end+0xfffe1e4c>
   22428:	d9002917 	ldw	r4,164(sp)
   2242c:	2002c11e 	bne	r4,zero,22f34 <___vfprintf_internal_r+0x1630>
   22430:	d8002915 	stw	zero,164(sp)
   22434:	d8002e15 	stw	zero,184(sp)
   22438:	dc001e04 	addi	r16,sp,120
   2243c:	003ef806 	br	22020 <__alt_data_end+0xfffe2020>
   22440:	18c03fcc 	andi	r3,r3,255
   22444:	18059d1e 	bne	r3,zero,23abc <___vfprintf_internal_r+0x21b8>
   22448:	014000f4 	movhi	r5,3
   2244c:	297d1a04 	addi	r5,r5,-2968
   22450:	d9403915 	stw	r5,228(sp)
   22454:	9080080c 	andi	r2,r18,32
   22458:	10005226 	beq	r2,zero,225a4 <___vfprintf_internal_r+0xca0>
   2245c:	d8802d17 	ldw	r2,180(sp)
   22460:	14c00017 	ldw	r19,0(r2)
   22464:	15800117 	ldw	r22,4(r2)
   22468:	10800204 	addi	r2,r2,8
   2246c:	d8802d15 	stw	r2,180(sp)
   22470:	9080004c 	andi	r2,r18,1
   22474:	10019026 	beq	r2,zero,22ab8 <___vfprintf_internal_r+0x11b4>
   22478:	9d84b03a 	or	r2,r19,r22
   2247c:	10036926 	beq	r2,zero,23224 <___vfprintf_internal_r+0x1920>
   22480:	d8c02917 	ldw	r3,164(sp)
   22484:	00800c04 	movi	r2,48
   22488:	d8802705 	stb	r2,156(sp)
   2248c:	dc402745 	stb	r17,157(sp)
   22490:	d8002785 	stb	zero,158(sp)
   22494:	90800094 	ori	r2,r18,2
   22498:	18045d16 	blt	r3,zero,23610 <___vfprintf_internal_r+0x1d0c>
   2249c:	00bfdfc4 	movi	r2,-129
   224a0:	90a4703a 	and	r18,r18,r2
   224a4:	94800094 	ori	r18,r18,2
   224a8:	0039883a 	mov	fp,zero
   224ac:	d9003917 	ldw	r4,228(sp)
   224b0:	dc001e04 	addi	r16,sp,120
   224b4:	988003cc 	andi	r2,r19,15
   224b8:	b006973a 	slli	r3,r22,28
   224bc:	2085883a 	add	r2,r4,r2
   224c0:	9826d13a 	srli	r19,r19,4
   224c4:	10800003 	ldbu	r2,0(r2)
   224c8:	b02cd13a 	srli	r22,r22,4
   224cc:	843fffc4 	addi	r16,r16,-1
   224d0:	1ce6b03a 	or	r19,r3,r19
   224d4:	80800005 	stb	r2,0(r16)
   224d8:	9d84b03a 	or	r2,r19,r22
   224dc:	103ff51e 	bne	r2,zero,224b4 <__alt_data_end+0xfffe24b4>
   224e0:	d8c02817 	ldw	r3,160(sp)
   224e4:	1c07c83a 	sub	r3,r3,r16
   224e8:	d8c02e15 	stw	r3,184(sp)
   224ec:	003ecc06 	br	22020 <__alt_data_end+0xfffe2020>
   224f0:	18c03fcc 	andi	r3,r3,255
   224f4:	183e9f26 	beq	r3,zero,21f74 <__alt_data_end+0xfffe1f74>
   224f8:	d9c02785 	stb	r7,158(sp)
   224fc:	003e9d06 	br	21f74 <__alt_data_end+0xfffe1f74>
   22500:	00c00044 	movi	r3,1
   22504:	01c00ac4 	movi	r7,43
   22508:	ac400007 	ldb	r17,0(r21)
   2250c:	003d5e06 	br	21a88 <__alt_data_end+0xfffe1a88>
   22510:	94800814 	ori	r18,r18,32
   22514:	ac400007 	ldb	r17,0(r21)
   22518:	003d5b06 	br	21a88 <__alt_data_end+0xfffe1a88>
   2251c:	d8c02d17 	ldw	r3,180(sp)
   22520:	d8002785 	stb	zero,158(sp)
   22524:	1c000017 	ldw	r16,0(r3)
   22528:	1cc00104 	addi	r19,r3,4
   2252c:	80041926 	beq	r16,zero,23594 <___vfprintf_internal_r+0x1c90>
   22530:	d9002917 	ldw	r4,164(sp)
   22534:	2003d016 	blt	r4,zero,23478 <___vfprintf_internal_r+0x1b74>
   22538:	200d883a 	mov	r6,r4
   2253c:	000b883a 	mov	r5,zero
   22540:	8009883a 	mov	r4,r16
   22544:	da003d15 	stw	r8,244(sp)
   22548:	0026c580 	call	26c58 <memchr>
   2254c:	da003d17 	ldw	r8,244(sp)
   22550:	10045426 	beq	r2,zero,236a4 <___vfprintf_internal_r+0x1da0>
   22554:	1405c83a 	sub	r2,r2,r16
   22558:	d8802e15 	stw	r2,184(sp)
   2255c:	1003cc16 	blt	r2,zero,23490 <___vfprintf_internal_r+0x1b8c>
   22560:	df002783 	ldbu	fp,158(sp)
   22564:	d8802a15 	stw	r2,168(sp)
   22568:	dcc02d15 	stw	r19,180(sp)
   2256c:	d8002915 	stw	zero,164(sp)
   22570:	d8003215 	stw	zero,200(sp)
   22574:	003eb006 	br	22038 <__alt_data_end+0xfffe2038>
   22578:	18c03fcc 	andi	r3,r3,255
   2257c:	183f9b26 	beq	r3,zero,223ec <__alt_data_end+0xfffe23ec>
   22580:	d9c02785 	stb	r7,158(sp)
   22584:	003f9906 	br	223ec <__alt_data_end+0xfffe23ec>
   22588:	18c03fcc 	andi	r3,r3,255
   2258c:	1805551e 	bne	r3,zero,23ae4 <___vfprintf_internal_r+0x21e0>
   22590:	014000f4 	movhi	r5,3
   22594:	297d1f04 	addi	r5,r5,-2948
   22598:	d9403915 	stw	r5,228(sp)
   2259c:	9080080c 	andi	r2,r18,32
   225a0:	103fae1e 	bne	r2,zero,2245c <__alt_data_end+0xfffe245c>
   225a4:	9080040c 	andi	r2,r18,16
   225a8:	1002de26 	beq	r2,zero,23124 <___vfprintf_internal_r+0x1820>
   225ac:	d8c02d17 	ldw	r3,180(sp)
   225b0:	002d883a 	mov	r22,zero
   225b4:	1cc00017 	ldw	r19,0(r3)
   225b8:	18c00104 	addi	r3,r3,4
   225bc:	d8c02d15 	stw	r3,180(sp)
   225c0:	003fab06 	br	22470 <__alt_data_end+0xfffe2470>
   225c4:	38803fcc 	andi	r2,r7,255
   225c8:	1080201c 	xori	r2,r2,128
   225cc:	10bfe004 	addi	r2,r2,-128
   225d0:	1002d21e 	bne	r2,zero,2311c <___vfprintf_internal_r+0x1818>
   225d4:	00c00044 	movi	r3,1
   225d8:	01c00804 	movi	r7,32
   225dc:	ac400007 	ldb	r17,0(r21)
   225e0:	003d2906 	br	21a88 <__alt_data_end+0xfffe1a88>
   225e4:	94800054 	ori	r18,r18,1
   225e8:	ac400007 	ldb	r17,0(r21)
   225ec:	003d2606 	br	21a88 <__alt_data_end+0xfffe1a88>
   225f0:	18c03fcc 	andi	r3,r3,255
   225f4:	183e0526 	beq	r3,zero,21e0c <__alt_data_end+0xfffe1e0c>
   225f8:	d9c02785 	stb	r7,158(sp)
   225fc:	003e0306 	br	21e0c <__alt_data_end+0xfffe1e0c>
   22600:	94801014 	ori	r18,r18,64
   22604:	ac400007 	ldb	r17,0(r21)
   22608:	003d1f06 	br	21a88 <__alt_data_end+0xfffe1a88>
   2260c:	ac400007 	ldb	r17,0(r21)
   22610:	8a438726 	beq	r17,r9,23430 <___vfprintf_internal_r+0x1b2c>
   22614:	94800414 	ori	r18,r18,16
   22618:	003d1b06 	br	21a88 <__alt_data_end+0xfffe1a88>
   2261c:	18c03fcc 	andi	r3,r3,255
   22620:	1805341e 	bne	r3,zero,23af4 <___vfprintf_internal_r+0x21f0>
   22624:	9080080c 	andi	r2,r18,32
   22628:	1002cd26 	beq	r2,zero,23160 <___vfprintf_internal_r+0x185c>
   2262c:	d9402d17 	ldw	r5,180(sp)
   22630:	d9002f17 	ldw	r4,188(sp)
   22634:	28800017 	ldw	r2,0(r5)
   22638:	2007d7fa 	srai	r3,r4,31
   2263c:	29400104 	addi	r5,r5,4
   22640:	d9402d15 	stw	r5,180(sp)
   22644:	11000015 	stw	r4,0(r2)
   22648:	10c00115 	stw	r3,4(r2)
   2264c:	003ce506 	br	219e4 <__alt_data_end+0xfffe19e4>
   22650:	d8c02d17 	ldw	r3,180(sp)
   22654:	d9002d17 	ldw	r4,180(sp)
   22658:	d8002785 	stb	zero,158(sp)
   2265c:	18800017 	ldw	r2,0(r3)
   22660:	21000104 	addi	r4,r4,4
   22664:	00c00044 	movi	r3,1
   22668:	d8c02a15 	stw	r3,168(sp)
   2266c:	d8801405 	stb	r2,80(sp)
   22670:	d9002d15 	stw	r4,180(sp)
   22674:	d8c02e15 	stw	r3,184(sp)
   22678:	d8002915 	stw	zero,164(sp)
   2267c:	d8003215 	stw	zero,200(sp)
   22680:	dc001404 	addi	r16,sp,80
   22684:	0039883a 	mov	fp,zero
   22688:	003e7206 	br	22054 <__alt_data_end+0xfffe2054>
   2268c:	010000f4 	movhi	r4,3
   22690:	213d1f04 	addi	r4,r4,-2948
   22694:	0039883a 	mov	fp,zero
   22698:	d9003915 	stw	r4,228(sp)
   2269c:	04401e04 	movi	r17,120
   226a0:	003f8206 	br	224ac <__alt_data_end+0xfffe24ac>
   226a4:	18c03fcc 	andi	r3,r3,255
   226a8:	1805061e 	bne	r3,zero,23ac4 <___vfprintf_internal_r+0x21c0>
   226ac:	883d9126 	beq	r17,zero,21cf4 <__alt_data_end+0xfffe1cf4>
   226b0:	00c00044 	movi	r3,1
   226b4:	d8c02a15 	stw	r3,168(sp)
   226b8:	dc401405 	stb	r17,80(sp)
   226bc:	d8002785 	stb	zero,158(sp)
   226c0:	003fec06 	br	22674 <__alt_data_end+0xfffe2674>
   226c4:	014000f4 	movhi	r5,3
   226c8:	297d1f04 	addi	r5,r5,-2948
   226cc:	d9403915 	stw	r5,228(sp)
   226d0:	d8c02d15 	stw	r3,180(sp)
   226d4:	1025883a 	mov	r18,r2
   226d8:	04401e04 	movi	r17,120
   226dc:	9d84b03a 	or	r2,r19,r22
   226e0:	1000fc1e 	bne	r2,zero,22ad4 <___vfprintf_internal_r+0x11d0>
   226e4:	0039883a 	mov	fp,zero
   226e8:	00800084 	movi	r2,2
   226ec:	10803fcc 	andi	r2,r2,255
   226f0:	00c00044 	movi	r3,1
   226f4:	10c20f26 	beq	r2,r3,22f34 <___vfprintf_internal_r+0x1630>
   226f8:	00c00084 	movi	r3,2
   226fc:	10fd6326 	beq	r2,r3,21c8c <__alt_data_end+0xfffe1c8c>
   22700:	003e2d06 	br	21fb8 <__alt_data_end+0xfffe1fb8>
   22704:	d8c02017 	ldw	r3,128(sp)
   22708:	003e9306 	br	22158 <__alt_data_end+0xfffe2158>
   2270c:	00801944 	movi	r2,101
   22710:	14407e0e 	bge	r2,r17,2290c <___vfprintf_internal_r+0x1008>
   22714:	d9003617 	ldw	r4,216(sp)
   22718:	d9403817 	ldw	r5,224(sp)
   2271c:	000d883a 	mov	r6,zero
   22720:	000f883a 	mov	r7,zero
   22724:	d8c03c15 	stw	r3,240(sp)
   22728:	da003d15 	stw	r8,244(sp)
   2272c:	002ca5c0 	call	2ca5c <__eqdf2>
   22730:	d8c03c17 	ldw	r3,240(sp)
   22734:	da003d17 	ldw	r8,244(sp)
   22738:	1000f71e 	bne	r2,zero,22b18 <___vfprintf_internal_r+0x1214>
   2273c:	d8801f17 	ldw	r2,124(sp)
   22740:	010000f4 	movhi	r4,3
   22744:	213d2604 	addi	r4,r4,-2920
   22748:	18c00044 	addi	r3,r3,1
   2274c:	10800044 	addi	r2,r2,1
   22750:	41000015 	stw	r4,0(r8)
   22754:	01000044 	movi	r4,1
   22758:	41000115 	stw	r4,4(r8)
   2275c:	d8c02015 	stw	r3,128(sp)
   22760:	d8801f15 	stw	r2,124(sp)
   22764:	010001c4 	movi	r4,7
   22768:	2082b816 	blt	r4,r2,2324c <___vfprintf_internal_r+0x1948>
   2276c:	42000204 	addi	r8,r8,8
   22770:	d8802617 	ldw	r2,152(sp)
   22774:	d9403317 	ldw	r5,204(sp)
   22778:	11400216 	blt	r2,r5,22784 <___vfprintf_internal_r+0xe80>
   2277c:	9080004c 	andi	r2,r18,1
   22780:	103ed526 	beq	r2,zero,222d8 <__alt_data_end+0xfffe22d8>
   22784:	d8803717 	ldw	r2,220(sp)
   22788:	d9003417 	ldw	r4,208(sp)
   2278c:	d9403717 	ldw	r5,220(sp)
   22790:	1887883a 	add	r3,r3,r2
   22794:	d8801f17 	ldw	r2,124(sp)
   22798:	41000015 	stw	r4,0(r8)
   2279c:	41400115 	stw	r5,4(r8)
   227a0:	10800044 	addi	r2,r2,1
   227a4:	d8c02015 	stw	r3,128(sp)
   227a8:	d8801f15 	stw	r2,124(sp)
   227ac:	010001c4 	movi	r4,7
   227b0:	20832916 	blt	r4,r2,23458 <___vfprintf_internal_r+0x1b54>
   227b4:	42000204 	addi	r8,r8,8
   227b8:	d8803317 	ldw	r2,204(sp)
   227bc:	143fffc4 	addi	r16,r2,-1
   227c0:	043ec50e 	bge	zero,r16,222d8 <__alt_data_end+0xfffe22d8>
   227c4:	04400404 	movi	r17,16
   227c8:	d8801f17 	ldw	r2,124(sp)
   227cc:	8c00880e 	bge	r17,r16,229f0 <___vfprintf_internal_r+0x10ec>
   227d0:	014000f4 	movhi	r5,3
   227d4:	297d2684 	addi	r5,r5,-2918
   227d8:	d9402b15 	stw	r5,172(sp)
   227dc:	058001c4 	movi	r22,7
   227e0:	dcc02c17 	ldw	r19,176(sp)
   227e4:	00000306 	br	227f4 <___vfprintf_internal_r+0xef0>
   227e8:	42000204 	addi	r8,r8,8
   227ec:	843ffc04 	addi	r16,r16,-16
   227f0:	8c00820e 	bge	r17,r16,229fc <___vfprintf_internal_r+0x10f8>
   227f4:	18c00404 	addi	r3,r3,16
   227f8:	10800044 	addi	r2,r2,1
   227fc:	45000015 	stw	r20,0(r8)
   22800:	44400115 	stw	r17,4(r8)
   22804:	d8c02015 	stw	r3,128(sp)
   22808:	d8801f15 	stw	r2,124(sp)
   2280c:	b0bff60e 	bge	r22,r2,227e8 <__alt_data_end+0xfffe27e8>
   22810:	d9801e04 	addi	r6,sp,120
   22814:	b80b883a 	mov	r5,r23
   22818:	9809883a 	mov	r4,r19
   2281c:	002841c0 	call	2841c <__sprint_r>
   22820:	103d3a1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22824:	d8c02017 	ldw	r3,128(sp)
   22828:	d8801f17 	ldw	r2,124(sp)
   2282c:	da000404 	addi	r8,sp,16
   22830:	003fee06 	br	227ec <__alt_data_end+0xfffe27ec>
   22834:	d9403117 	ldw	r5,196(sp)
   22838:	d8802a17 	ldw	r2,168(sp)
   2283c:	28adc83a 	sub	r22,r5,r2
   22840:	05be630e 	bge	zero,r22,221d0 <__alt_data_end+0xfffe21d0>
   22844:	07000404 	movi	fp,16
   22848:	d8801f17 	ldw	r2,124(sp)
   2284c:	e5838f0e 	bge	fp,r22,2368c <___vfprintf_internal_r+0x1d88>
   22850:	014000f4 	movhi	r5,3
   22854:	297d2684 	addi	r5,r5,-2918
   22858:	dc403015 	stw	r17,192(sp)
   2285c:	d9402b15 	stw	r5,172(sp)
   22860:	b023883a 	mov	r17,r22
   22864:	04c001c4 	movi	r19,7
   22868:	a82d883a 	mov	r22,r21
   2286c:	902b883a 	mov	r21,r18
   22870:	8025883a 	mov	r18,r16
   22874:	dc002c17 	ldw	r16,176(sp)
   22878:	00000306 	br	22888 <___vfprintf_internal_r+0xf84>
   2287c:	8c7ffc04 	addi	r17,r17,-16
   22880:	42000204 	addi	r8,r8,8
   22884:	e440110e 	bge	fp,r17,228cc <___vfprintf_internal_r+0xfc8>
   22888:	18c00404 	addi	r3,r3,16
   2288c:	10800044 	addi	r2,r2,1
   22890:	45000015 	stw	r20,0(r8)
   22894:	47000115 	stw	fp,4(r8)
   22898:	d8c02015 	stw	r3,128(sp)
   2289c:	d8801f15 	stw	r2,124(sp)
   228a0:	98bff60e 	bge	r19,r2,2287c <__alt_data_end+0xfffe287c>
   228a4:	d9801e04 	addi	r6,sp,120
   228a8:	b80b883a 	mov	r5,r23
   228ac:	8009883a 	mov	r4,r16
   228b0:	002841c0 	call	2841c <__sprint_r>
   228b4:	103d151e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   228b8:	8c7ffc04 	addi	r17,r17,-16
   228bc:	d8c02017 	ldw	r3,128(sp)
   228c0:	d8801f17 	ldw	r2,124(sp)
   228c4:	da000404 	addi	r8,sp,16
   228c8:	e47fef16 	blt	fp,r17,22888 <__alt_data_end+0xfffe2888>
   228cc:	9021883a 	mov	r16,r18
   228d0:	a825883a 	mov	r18,r21
   228d4:	b02b883a 	mov	r21,r22
   228d8:	882d883a 	mov	r22,r17
   228dc:	dc403017 	ldw	r17,192(sp)
   228e0:	d9002b17 	ldw	r4,172(sp)
   228e4:	1d87883a 	add	r3,r3,r22
   228e8:	10800044 	addi	r2,r2,1
   228ec:	41000015 	stw	r4,0(r8)
   228f0:	45800115 	stw	r22,4(r8)
   228f4:	d8c02015 	stw	r3,128(sp)
   228f8:	d8801f15 	stw	r2,124(sp)
   228fc:	010001c4 	movi	r4,7
   22900:	20818e16 	blt	r4,r2,22f3c <___vfprintf_internal_r+0x1638>
   22904:	42000204 	addi	r8,r8,8
   22908:	003e3106 	br	221d0 <__alt_data_end+0xfffe21d0>
   2290c:	d9403317 	ldw	r5,204(sp)
   22910:	00800044 	movi	r2,1
   22914:	18c00044 	addi	r3,r3,1
   22918:	1141530e 	bge	r2,r5,22e68 <___vfprintf_internal_r+0x1564>
   2291c:	dc401f17 	ldw	r17,124(sp)
   22920:	00800044 	movi	r2,1
   22924:	40800115 	stw	r2,4(r8)
   22928:	8c400044 	addi	r17,r17,1
   2292c:	44000015 	stw	r16,0(r8)
   22930:	d8c02015 	stw	r3,128(sp)
   22934:	dc401f15 	stw	r17,124(sp)
   22938:	008001c4 	movi	r2,7
   2293c:	14416b16 	blt	r2,r17,22eec <___vfprintf_internal_r+0x15e8>
   22940:	42000204 	addi	r8,r8,8
   22944:	d8803717 	ldw	r2,220(sp)
   22948:	d9003417 	ldw	r4,208(sp)
   2294c:	8c400044 	addi	r17,r17,1
   22950:	10c7883a 	add	r3,r2,r3
   22954:	40800115 	stw	r2,4(r8)
   22958:	41000015 	stw	r4,0(r8)
   2295c:	d8c02015 	stw	r3,128(sp)
   22960:	dc401f15 	stw	r17,124(sp)
   22964:	008001c4 	movi	r2,7
   22968:	14416916 	blt	r2,r17,22f10 <___vfprintf_internal_r+0x160c>
   2296c:	45800204 	addi	r22,r8,8
   22970:	d9003617 	ldw	r4,216(sp)
   22974:	d9403817 	ldw	r5,224(sp)
   22978:	000d883a 	mov	r6,zero
   2297c:	000f883a 	mov	r7,zero
   22980:	d8c03c15 	stw	r3,240(sp)
   22984:	002ca5c0 	call	2ca5c <__eqdf2>
   22988:	d8c03c17 	ldw	r3,240(sp)
   2298c:	1000bc26 	beq	r2,zero,22c80 <___vfprintf_internal_r+0x137c>
   22990:	d9403317 	ldw	r5,204(sp)
   22994:	84000044 	addi	r16,r16,1
   22998:	8c400044 	addi	r17,r17,1
   2299c:	28bfffc4 	addi	r2,r5,-1
   229a0:	1887883a 	add	r3,r3,r2
   229a4:	b0800115 	stw	r2,4(r22)
   229a8:	b4000015 	stw	r16,0(r22)
   229ac:	d8c02015 	stw	r3,128(sp)
   229b0:	dc401f15 	stw	r17,124(sp)
   229b4:	008001c4 	movi	r2,7
   229b8:	14414316 	blt	r2,r17,22ec8 <___vfprintf_internal_r+0x15c4>
   229bc:	b5800204 	addi	r22,r22,8
   229c0:	d9003a17 	ldw	r4,232(sp)
   229c4:	df0022c4 	addi	fp,sp,139
   229c8:	8c400044 	addi	r17,r17,1
   229cc:	20c7883a 	add	r3,r4,r3
   229d0:	b7000015 	stw	fp,0(r22)
   229d4:	b1000115 	stw	r4,4(r22)
   229d8:	d8c02015 	stw	r3,128(sp)
   229dc:	dc401f15 	stw	r17,124(sp)
   229e0:	008001c4 	movi	r2,7
   229e4:	14400e16 	blt	r2,r17,22a20 <___vfprintf_internal_r+0x111c>
   229e8:	b2000204 	addi	r8,r22,8
   229ec:	003e3a06 	br	222d8 <__alt_data_end+0xfffe22d8>
   229f0:	010000f4 	movhi	r4,3
   229f4:	213d2684 	addi	r4,r4,-2918
   229f8:	d9002b15 	stw	r4,172(sp)
   229fc:	d9002b17 	ldw	r4,172(sp)
   22a00:	1c07883a 	add	r3,r3,r16
   22a04:	44000115 	stw	r16,4(r8)
   22a08:	41000015 	stw	r4,0(r8)
   22a0c:	10800044 	addi	r2,r2,1
   22a10:	d8c02015 	stw	r3,128(sp)
   22a14:	d8801f15 	stw	r2,124(sp)
   22a18:	010001c4 	movi	r4,7
   22a1c:	20be2d0e 	bge	r4,r2,222d4 <__alt_data_end+0xfffe22d4>
   22a20:	d9002c17 	ldw	r4,176(sp)
   22a24:	d9801e04 	addi	r6,sp,120
   22a28:	b80b883a 	mov	r5,r23
   22a2c:	002841c0 	call	2841c <__sprint_r>
   22a30:	103cb61e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22a34:	d8c02017 	ldw	r3,128(sp)
   22a38:	da000404 	addi	r8,sp,16
   22a3c:	003e2606 	br	222d8 <__alt_data_end+0xfffe22d8>
   22a40:	d9002c17 	ldw	r4,176(sp)
   22a44:	d9801e04 	addi	r6,sp,120
   22a48:	b80b883a 	mov	r5,r23
   22a4c:	002841c0 	call	2841c <__sprint_r>
   22a50:	103e5d26 	beq	r2,zero,223c8 <__alt_data_end+0xfffe23c8>
   22a54:	003cad06 	br	21d0c <__alt_data_end+0xfffe1d0c>
   22a58:	d9002c17 	ldw	r4,176(sp)
   22a5c:	d9801e04 	addi	r6,sp,120
   22a60:	b80b883a 	mov	r5,r23
   22a64:	002841c0 	call	2841c <__sprint_r>
   22a68:	103ca81e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22a6c:	d8c02017 	ldw	r3,128(sp)
   22a70:	da000404 	addi	r8,sp,16
   22a74:	003e0b06 	br	222a4 <__alt_data_end+0xfffe22a4>
   22a78:	d9002c17 	ldw	r4,176(sp)
   22a7c:	d9801e04 	addi	r6,sp,120
   22a80:	b80b883a 	mov	r5,r23
   22a84:	002841c0 	call	2841c <__sprint_r>
   22a88:	103ca01e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22a8c:	d8c02017 	ldw	r3,128(sp)
   22a90:	da000404 	addi	r8,sp,16
   22a94:	003dbd06 	br	2218c <__alt_data_end+0xfffe218c>
   22a98:	d9002c17 	ldw	r4,176(sp)
   22a9c:	d9801e04 	addi	r6,sp,120
   22aa0:	b80b883a 	mov	r5,r23
   22aa4:	002841c0 	call	2841c <__sprint_r>
   22aa8:	103c981e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22aac:	d8c02017 	ldw	r3,128(sp)
   22ab0:	da000404 	addi	r8,sp,16
   22ab4:	003dc306 	br	221c4 <__alt_data_end+0xfffe21c4>
   22ab8:	d8802917 	ldw	r2,164(sp)
   22abc:	d8002785 	stb	zero,158(sp)
   22ac0:	103f0616 	blt	r2,zero,226dc <__alt_data_end+0xfffe26dc>
   22ac4:	00ffdfc4 	movi	r3,-129
   22ac8:	9d84b03a 	or	r2,r19,r22
   22acc:	90e4703a 	and	r18,r18,r3
   22ad0:	103c6b26 	beq	r2,zero,21c80 <__alt_data_end+0xfffe1c80>
   22ad4:	0039883a 	mov	fp,zero
   22ad8:	003e7406 	br	224ac <__alt_data_end+0xfffe24ac>
   22adc:	9080040c 	andi	r2,r18,16
   22ae0:	1001b326 	beq	r2,zero,231b0 <___vfprintf_internal_r+0x18ac>
   22ae4:	d9002d17 	ldw	r4,180(sp)
   22ae8:	d9402917 	ldw	r5,164(sp)
   22aec:	d8002785 	stb	zero,158(sp)
   22af0:	20800104 	addi	r2,r4,4
   22af4:	24c00017 	ldw	r19,0(r4)
   22af8:	002d883a 	mov	r22,zero
   22afc:	2801b516 	blt	r5,zero,231d4 <___vfprintf_internal_r+0x18d0>
   22b00:	00ffdfc4 	movi	r3,-129
   22b04:	d8802d15 	stw	r2,180(sp)
   22b08:	90e4703a 	and	r18,r18,r3
   22b0c:	983d2726 	beq	r19,zero,21fac <__alt_data_end+0xfffe1fac>
   22b10:	0039883a 	mov	fp,zero
   22b14:	003d2a06 	br	21fc0 <__alt_data_end+0xfffe1fc0>
   22b18:	dc402617 	ldw	r17,152(sp)
   22b1c:	0441d30e 	bge	zero,r17,2326c <___vfprintf_internal_r+0x1968>
   22b20:	dc403217 	ldw	r17,200(sp)
   22b24:	d8803317 	ldw	r2,204(sp)
   22b28:	1440010e 	bge	r2,r17,22b30 <___vfprintf_internal_r+0x122c>
   22b2c:	1023883a 	mov	r17,r2
   22b30:	04400a0e 	bge	zero,r17,22b5c <___vfprintf_internal_r+0x1258>
   22b34:	d8801f17 	ldw	r2,124(sp)
   22b38:	1c47883a 	add	r3,r3,r17
   22b3c:	44000015 	stw	r16,0(r8)
   22b40:	10800044 	addi	r2,r2,1
   22b44:	44400115 	stw	r17,4(r8)
   22b48:	d8c02015 	stw	r3,128(sp)
   22b4c:	d8801f15 	stw	r2,124(sp)
   22b50:	010001c4 	movi	r4,7
   22b54:	20826516 	blt	r4,r2,234ec <___vfprintf_internal_r+0x1be8>
   22b58:	42000204 	addi	r8,r8,8
   22b5c:	88026116 	blt	r17,zero,234e4 <___vfprintf_internal_r+0x1be0>
   22b60:	d9003217 	ldw	r4,200(sp)
   22b64:	2463c83a 	sub	r17,r4,r17
   22b68:	04407b0e 	bge	zero,r17,22d58 <___vfprintf_internal_r+0x1454>
   22b6c:	05800404 	movi	r22,16
   22b70:	d8801f17 	ldw	r2,124(sp)
   22b74:	b4419d0e 	bge	r22,r17,231ec <___vfprintf_internal_r+0x18e8>
   22b78:	010000f4 	movhi	r4,3
   22b7c:	213d2684 	addi	r4,r4,-2918
   22b80:	d9002b15 	stw	r4,172(sp)
   22b84:	070001c4 	movi	fp,7
   22b88:	dcc02c17 	ldw	r19,176(sp)
   22b8c:	00000306 	br	22b9c <___vfprintf_internal_r+0x1298>
   22b90:	42000204 	addi	r8,r8,8
   22b94:	8c7ffc04 	addi	r17,r17,-16
   22b98:	b441970e 	bge	r22,r17,231f8 <___vfprintf_internal_r+0x18f4>
   22b9c:	18c00404 	addi	r3,r3,16
   22ba0:	10800044 	addi	r2,r2,1
   22ba4:	45000015 	stw	r20,0(r8)
   22ba8:	45800115 	stw	r22,4(r8)
   22bac:	d8c02015 	stw	r3,128(sp)
   22bb0:	d8801f15 	stw	r2,124(sp)
   22bb4:	e0bff60e 	bge	fp,r2,22b90 <__alt_data_end+0xfffe2b90>
   22bb8:	d9801e04 	addi	r6,sp,120
   22bbc:	b80b883a 	mov	r5,r23
   22bc0:	9809883a 	mov	r4,r19
   22bc4:	002841c0 	call	2841c <__sprint_r>
   22bc8:	103c501e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22bcc:	d8c02017 	ldw	r3,128(sp)
   22bd0:	d8801f17 	ldw	r2,124(sp)
   22bd4:	da000404 	addi	r8,sp,16
   22bd8:	003fee06 	br	22b94 <__alt_data_end+0xfffe2b94>
   22bdc:	d9002c17 	ldw	r4,176(sp)
   22be0:	d9801e04 	addi	r6,sp,120
   22be4:	b80b883a 	mov	r5,r23
   22be8:	002841c0 	call	2841c <__sprint_r>
   22bec:	103c471e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22bf0:	d8c02017 	ldw	r3,128(sp)
   22bf4:	df002787 	ldb	fp,158(sp)
   22bf8:	da000404 	addi	r8,sp,16
   22bfc:	003d5606 	br	22158 <__alt_data_end+0xfffe2158>
   22c00:	9080040c 	andi	r2,r18,16
   22c04:	10016126 	beq	r2,zero,2318c <___vfprintf_internal_r+0x1888>
   22c08:	d8802d17 	ldw	r2,180(sp)
   22c0c:	14c00017 	ldw	r19,0(r2)
   22c10:	10800104 	addi	r2,r2,4
   22c14:	d8802d15 	stw	r2,180(sp)
   22c18:	982dd7fa 	srai	r22,r19,31
   22c1c:	b005883a 	mov	r2,r22
   22c20:	003c8206 	br	21e2c <__alt_data_end+0xfffe1e2c>
   22c24:	9080040c 	andi	r2,r18,16
   22c28:	10003526 	beq	r2,zero,22d00 <___vfprintf_internal_r+0x13fc>
   22c2c:	d9402d17 	ldw	r5,180(sp)
   22c30:	d8c02917 	ldw	r3,164(sp)
   22c34:	d8002785 	stb	zero,158(sp)
   22c38:	28800104 	addi	r2,r5,4
   22c3c:	2cc00017 	ldw	r19,0(r5)
   22c40:	002d883a 	mov	r22,zero
   22c44:	18003716 	blt	r3,zero,22d24 <___vfprintf_internal_r+0x1420>
   22c48:	00ffdfc4 	movi	r3,-129
   22c4c:	d8802d15 	stw	r2,180(sp)
   22c50:	90e4703a 	and	r18,r18,r3
   22c54:	0039883a 	mov	fp,zero
   22c58:	983df326 	beq	r19,zero,22428 <__alt_data_end+0xfffe2428>
   22c5c:	00800244 	movi	r2,9
   22c60:	14fc7b36 	bltu	r2,r19,21e50 <__alt_data_end+0xfffe1e50>
   22c64:	d8c02817 	ldw	r3,160(sp)
   22c68:	dc001dc4 	addi	r16,sp,119
   22c6c:	9cc00c04 	addi	r19,r19,48
   22c70:	1c07c83a 	sub	r3,r3,r16
   22c74:	dcc01dc5 	stb	r19,119(sp)
   22c78:	d8c02e15 	stw	r3,184(sp)
   22c7c:	003ce806 	br	22020 <__alt_data_end+0xfffe2020>
   22c80:	d8803317 	ldw	r2,204(sp)
   22c84:	143fffc4 	addi	r16,r2,-1
   22c88:	043f4d0e 	bge	zero,r16,229c0 <__alt_data_end+0xfffe29c0>
   22c8c:	07000404 	movi	fp,16
   22c90:	e400810e 	bge	fp,r16,22e98 <___vfprintf_internal_r+0x1594>
   22c94:	014000f4 	movhi	r5,3
   22c98:	297d2684 	addi	r5,r5,-2918
   22c9c:	d9402b15 	stw	r5,172(sp)
   22ca0:	01c001c4 	movi	r7,7
   22ca4:	dcc02c17 	ldw	r19,176(sp)
   22ca8:	00000306 	br	22cb8 <___vfprintf_internal_r+0x13b4>
   22cac:	b5800204 	addi	r22,r22,8
   22cb0:	843ffc04 	addi	r16,r16,-16
   22cb4:	e4007b0e 	bge	fp,r16,22ea4 <___vfprintf_internal_r+0x15a0>
   22cb8:	18c00404 	addi	r3,r3,16
   22cbc:	8c400044 	addi	r17,r17,1
   22cc0:	b5000015 	stw	r20,0(r22)
   22cc4:	b7000115 	stw	fp,4(r22)
   22cc8:	d8c02015 	stw	r3,128(sp)
   22ccc:	dc401f15 	stw	r17,124(sp)
   22cd0:	3c7ff60e 	bge	r7,r17,22cac <__alt_data_end+0xfffe2cac>
   22cd4:	d9801e04 	addi	r6,sp,120
   22cd8:	b80b883a 	mov	r5,r23
   22cdc:	9809883a 	mov	r4,r19
   22ce0:	d9c03c15 	stw	r7,240(sp)
   22ce4:	002841c0 	call	2841c <__sprint_r>
   22ce8:	d9c03c17 	ldw	r7,240(sp)
   22cec:	103c071e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22cf0:	d8c02017 	ldw	r3,128(sp)
   22cf4:	dc401f17 	ldw	r17,124(sp)
   22cf8:	dd800404 	addi	r22,sp,16
   22cfc:	003fec06 	br	22cb0 <__alt_data_end+0xfffe2cb0>
   22d00:	9080100c 	andi	r2,r18,64
   22d04:	d8002785 	stb	zero,158(sp)
   22d08:	10010e26 	beq	r2,zero,23144 <___vfprintf_internal_r+0x1840>
   22d0c:	d9002d17 	ldw	r4,180(sp)
   22d10:	d9402917 	ldw	r5,164(sp)
   22d14:	002d883a 	mov	r22,zero
   22d18:	20800104 	addi	r2,r4,4
   22d1c:	24c0000b 	ldhu	r19,0(r4)
   22d20:	283fc90e 	bge	r5,zero,22c48 <__alt_data_end+0xfffe2c48>
   22d24:	d8802d15 	stw	r2,180(sp)
   22d28:	0039883a 	mov	fp,zero
   22d2c:	9d84b03a 	or	r2,r19,r22
   22d30:	103c461e 	bne	r2,zero,21e4c <__alt_data_end+0xfffe1e4c>
   22d34:	00800044 	movi	r2,1
   22d38:	003e6c06 	br	226ec <__alt_data_end+0xfffe26ec>
   22d3c:	d9002c17 	ldw	r4,176(sp)
   22d40:	d9801e04 	addi	r6,sp,120
   22d44:	b80b883a 	mov	r5,r23
   22d48:	002841c0 	call	2841c <__sprint_r>
   22d4c:	103bef1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22d50:	d8c02017 	ldw	r3,128(sp)
   22d54:	da000404 	addi	r8,sp,16
   22d58:	d9003217 	ldw	r4,200(sp)
   22d5c:	d8802617 	ldw	r2,152(sp)
   22d60:	d9403317 	ldw	r5,204(sp)
   22d64:	8123883a 	add	r17,r16,r4
   22d68:	11400216 	blt	r2,r5,22d74 <___vfprintf_internal_r+0x1470>
   22d6c:	9100004c 	andi	r4,r18,1
   22d70:	20000d26 	beq	r4,zero,22da8 <___vfprintf_internal_r+0x14a4>
   22d74:	d9003717 	ldw	r4,220(sp)
   22d78:	d9403417 	ldw	r5,208(sp)
   22d7c:	1907883a 	add	r3,r3,r4
   22d80:	d9001f17 	ldw	r4,124(sp)
   22d84:	41400015 	stw	r5,0(r8)
   22d88:	d9403717 	ldw	r5,220(sp)
   22d8c:	21000044 	addi	r4,r4,1
   22d90:	d8c02015 	stw	r3,128(sp)
   22d94:	41400115 	stw	r5,4(r8)
   22d98:	d9001f15 	stw	r4,124(sp)
   22d9c:	014001c4 	movi	r5,7
   22da0:	2901e816 	blt	r5,r4,23544 <___vfprintf_internal_r+0x1c40>
   22da4:	42000204 	addi	r8,r8,8
   22da8:	d9003317 	ldw	r4,204(sp)
   22dac:	8121883a 	add	r16,r16,r4
   22db0:	2085c83a 	sub	r2,r4,r2
   22db4:	8461c83a 	sub	r16,r16,r17
   22db8:	1400010e 	bge	r2,r16,22dc0 <___vfprintf_internal_r+0x14bc>
   22dbc:	1021883a 	mov	r16,r2
   22dc0:	04000a0e 	bge	zero,r16,22dec <___vfprintf_internal_r+0x14e8>
   22dc4:	d9001f17 	ldw	r4,124(sp)
   22dc8:	1c07883a 	add	r3,r3,r16
   22dcc:	44400015 	stw	r17,0(r8)
   22dd0:	21000044 	addi	r4,r4,1
   22dd4:	44000115 	stw	r16,4(r8)
   22dd8:	d8c02015 	stw	r3,128(sp)
   22ddc:	d9001f15 	stw	r4,124(sp)
   22de0:	014001c4 	movi	r5,7
   22de4:	2901fb16 	blt	r5,r4,235d4 <___vfprintf_internal_r+0x1cd0>
   22de8:	42000204 	addi	r8,r8,8
   22dec:	8001f716 	blt	r16,zero,235cc <___vfprintf_internal_r+0x1cc8>
   22df0:	1421c83a 	sub	r16,r2,r16
   22df4:	043d380e 	bge	zero,r16,222d8 <__alt_data_end+0xfffe22d8>
   22df8:	04400404 	movi	r17,16
   22dfc:	d8801f17 	ldw	r2,124(sp)
   22e00:	8c3efb0e 	bge	r17,r16,229f0 <__alt_data_end+0xfffe29f0>
   22e04:	014000f4 	movhi	r5,3
   22e08:	297d2684 	addi	r5,r5,-2918
   22e0c:	d9402b15 	stw	r5,172(sp)
   22e10:	058001c4 	movi	r22,7
   22e14:	dcc02c17 	ldw	r19,176(sp)
   22e18:	00000306 	br	22e28 <___vfprintf_internal_r+0x1524>
   22e1c:	42000204 	addi	r8,r8,8
   22e20:	843ffc04 	addi	r16,r16,-16
   22e24:	8c3ef50e 	bge	r17,r16,229fc <__alt_data_end+0xfffe29fc>
   22e28:	18c00404 	addi	r3,r3,16
   22e2c:	10800044 	addi	r2,r2,1
   22e30:	45000015 	stw	r20,0(r8)
   22e34:	44400115 	stw	r17,4(r8)
   22e38:	d8c02015 	stw	r3,128(sp)
   22e3c:	d8801f15 	stw	r2,124(sp)
   22e40:	b0bff60e 	bge	r22,r2,22e1c <__alt_data_end+0xfffe2e1c>
   22e44:	d9801e04 	addi	r6,sp,120
   22e48:	b80b883a 	mov	r5,r23
   22e4c:	9809883a 	mov	r4,r19
   22e50:	002841c0 	call	2841c <__sprint_r>
   22e54:	103bad1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22e58:	d8c02017 	ldw	r3,128(sp)
   22e5c:	d8801f17 	ldw	r2,124(sp)
   22e60:	da000404 	addi	r8,sp,16
   22e64:	003fee06 	br	22e20 <__alt_data_end+0xfffe2e20>
   22e68:	9088703a 	and	r4,r18,r2
   22e6c:	203eab1e 	bne	r4,zero,2291c <__alt_data_end+0xfffe291c>
   22e70:	dc401f17 	ldw	r17,124(sp)
   22e74:	40800115 	stw	r2,4(r8)
   22e78:	44000015 	stw	r16,0(r8)
   22e7c:	8c400044 	addi	r17,r17,1
   22e80:	d8c02015 	stw	r3,128(sp)
   22e84:	dc401f15 	stw	r17,124(sp)
   22e88:	008001c4 	movi	r2,7
   22e8c:	14400e16 	blt	r2,r17,22ec8 <___vfprintf_internal_r+0x15c4>
   22e90:	45800204 	addi	r22,r8,8
   22e94:	003eca06 	br	229c0 <__alt_data_end+0xfffe29c0>
   22e98:	010000f4 	movhi	r4,3
   22e9c:	213d2684 	addi	r4,r4,-2918
   22ea0:	d9002b15 	stw	r4,172(sp)
   22ea4:	d8802b17 	ldw	r2,172(sp)
   22ea8:	1c07883a 	add	r3,r3,r16
   22eac:	8c400044 	addi	r17,r17,1
   22eb0:	b0800015 	stw	r2,0(r22)
   22eb4:	b4000115 	stw	r16,4(r22)
   22eb8:	d8c02015 	stw	r3,128(sp)
   22ebc:	dc401f15 	stw	r17,124(sp)
   22ec0:	008001c4 	movi	r2,7
   22ec4:	147ebd0e 	bge	r2,r17,229bc <__alt_data_end+0xfffe29bc>
   22ec8:	d9002c17 	ldw	r4,176(sp)
   22ecc:	d9801e04 	addi	r6,sp,120
   22ed0:	b80b883a 	mov	r5,r23
   22ed4:	002841c0 	call	2841c <__sprint_r>
   22ed8:	103b8c1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22edc:	d8c02017 	ldw	r3,128(sp)
   22ee0:	dc401f17 	ldw	r17,124(sp)
   22ee4:	dd800404 	addi	r22,sp,16
   22ee8:	003eb506 	br	229c0 <__alt_data_end+0xfffe29c0>
   22eec:	d9002c17 	ldw	r4,176(sp)
   22ef0:	d9801e04 	addi	r6,sp,120
   22ef4:	b80b883a 	mov	r5,r23
   22ef8:	002841c0 	call	2841c <__sprint_r>
   22efc:	103b831e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22f00:	d8c02017 	ldw	r3,128(sp)
   22f04:	dc401f17 	ldw	r17,124(sp)
   22f08:	da000404 	addi	r8,sp,16
   22f0c:	003e8d06 	br	22944 <__alt_data_end+0xfffe2944>
   22f10:	d9002c17 	ldw	r4,176(sp)
   22f14:	d9801e04 	addi	r6,sp,120
   22f18:	b80b883a 	mov	r5,r23
   22f1c:	002841c0 	call	2841c <__sprint_r>
   22f20:	103b7a1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22f24:	d8c02017 	ldw	r3,128(sp)
   22f28:	dc401f17 	ldw	r17,124(sp)
   22f2c:	dd800404 	addi	r22,sp,16
   22f30:	003e8f06 	br	22970 <__alt_data_end+0xfffe2970>
   22f34:	0027883a 	mov	r19,zero
   22f38:	003f4a06 	br	22c64 <__alt_data_end+0xfffe2c64>
   22f3c:	d9002c17 	ldw	r4,176(sp)
   22f40:	d9801e04 	addi	r6,sp,120
   22f44:	b80b883a 	mov	r5,r23
   22f48:	002841c0 	call	2841c <__sprint_r>
   22f4c:	103b6f1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   22f50:	d8c02017 	ldw	r3,128(sp)
   22f54:	da000404 	addi	r8,sp,16
   22f58:	003c9d06 	br	221d0 <__alt_data_end+0xfffe21d0>
   22f5c:	04e7c83a 	sub	r19,zero,r19
   22f60:	9804c03a 	cmpne	r2,r19,zero
   22f64:	05adc83a 	sub	r22,zero,r22
   22f68:	b0adc83a 	sub	r22,r22,r2
   22f6c:	d8802917 	ldw	r2,164(sp)
   22f70:	07000b44 	movi	fp,45
   22f74:	df002785 	stb	fp,158(sp)
   22f78:	10017b16 	blt	r2,zero,23568 <___vfprintf_internal_r+0x1c64>
   22f7c:	00bfdfc4 	movi	r2,-129
   22f80:	90a4703a 	and	r18,r18,r2
   22f84:	003bb106 	br	21e4c <__alt_data_end+0xfffe1e4c>
   22f88:	d9003617 	ldw	r4,216(sp)
   22f8c:	d9403817 	ldw	r5,224(sp)
   22f90:	da003d15 	stw	r8,244(sp)
   22f94:	0027fa80 	call	27fa8 <__fpclassifyd>
   22f98:	da003d17 	ldw	r8,244(sp)
   22f9c:	1000f026 	beq	r2,zero,23360 <___vfprintf_internal_r+0x1a5c>
   22fa0:	d9002917 	ldw	r4,164(sp)
   22fa4:	05bff7c4 	movi	r22,-33
   22fa8:	00bfffc4 	movi	r2,-1
   22fac:	8dac703a 	and	r22,r17,r22
   22fb0:	20820026 	beq	r4,r2,237b4 <___vfprintf_internal_r+0x1eb0>
   22fb4:	008011c4 	movi	r2,71
   22fb8:	b081f726 	beq	r22,r2,23798 <___vfprintf_internal_r+0x1e94>
   22fbc:	d9003817 	ldw	r4,224(sp)
   22fc0:	90c04014 	ori	r3,r18,256
   22fc4:	d8c02b15 	stw	r3,172(sp)
   22fc8:	20021516 	blt	r4,zero,23820 <___vfprintf_internal_r+0x1f1c>
   22fcc:	dcc03817 	ldw	r19,224(sp)
   22fd0:	d8002a05 	stb	zero,168(sp)
   22fd4:	00801984 	movi	r2,102
   22fd8:	8881f926 	beq	r17,r2,237c0 <___vfprintf_internal_r+0x1ebc>
   22fdc:	00801184 	movi	r2,70
   22fe0:	88821c26 	beq	r17,r2,23854 <___vfprintf_internal_r+0x1f50>
   22fe4:	00801144 	movi	r2,69
   22fe8:	b081ef26 	beq	r22,r2,237a8 <___vfprintf_internal_r+0x1ea4>
   22fec:	d8c02917 	ldw	r3,164(sp)
   22ff0:	d8802104 	addi	r2,sp,132
   22ff4:	d8800315 	stw	r2,12(sp)
   22ff8:	d9403617 	ldw	r5,216(sp)
   22ffc:	d8802504 	addi	r2,sp,148
   23000:	d9002c17 	ldw	r4,176(sp)
   23004:	d8800215 	stw	r2,8(sp)
   23008:	d8802604 	addi	r2,sp,152
   2300c:	d8c00015 	stw	r3,0(sp)
   23010:	d8800115 	stw	r2,4(sp)
   23014:	01c00084 	movi	r7,2
   23018:	980d883a 	mov	r6,r19
   2301c:	d8c03c15 	stw	r3,240(sp)
   23020:	da003d15 	stw	r8,244(sp)
   23024:	0023f280 	call	23f28 <_dtoa_r>
   23028:	1021883a 	mov	r16,r2
   2302c:	008019c4 	movi	r2,103
   23030:	d8c03c17 	ldw	r3,240(sp)
   23034:	da003d17 	ldw	r8,244(sp)
   23038:	88817126 	beq	r17,r2,23600 <___vfprintf_internal_r+0x1cfc>
   2303c:	008011c4 	movi	r2,71
   23040:	88829226 	beq	r17,r2,23a8c <___vfprintf_internal_r+0x2188>
   23044:	80f9883a 	add	fp,r16,r3
   23048:	d9003617 	ldw	r4,216(sp)
   2304c:	000d883a 	mov	r6,zero
   23050:	000f883a 	mov	r7,zero
   23054:	980b883a 	mov	r5,r19
   23058:	da003d15 	stw	r8,244(sp)
   2305c:	002ca5c0 	call	2ca5c <__eqdf2>
   23060:	da003d17 	ldw	r8,244(sp)
   23064:	10018d26 	beq	r2,zero,2369c <___vfprintf_internal_r+0x1d98>
   23068:	d8802117 	ldw	r2,132(sp)
   2306c:	1700062e 	bgeu	r2,fp,23088 <___vfprintf_internal_r+0x1784>
   23070:	01000c04 	movi	r4,48
   23074:	10c00044 	addi	r3,r2,1
   23078:	d8c02115 	stw	r3,132(sp)
   2307c:	11000005 	stb	r4,0(r2)
   23080:	d8802117 	ldw	r2,132(sp)
   23084:	173ffb36 	bltu	r2,fp,23074 <__alt_data_end+0xfffe3074>
   23088:	1405c83a 	sub	r2,r2,r16
   2308c:	d8803315 	stw	r2,204(sp)
   23090:	008011c4 	movi	r2,71
   23094:	b0817626 	beq	r22,r2,23670 <___vfprintf_internal_r+0x1d6c>
   23098:	00801944 	movi	r2,101
   2309c:	1442810e 	bge	r2,r17,23aa4 <___vfprintf_internal_r+0x21a0>
   230a0:	d8c02617 	ldw	r3,152(sp)
   230a4:	00801984 	movi	r2,102
   230a8:	d8c03215 	stw	r3,200(sp)
   230ac:	8881fe26 	beq	r17,r2,238a8 <___vfprintf_internal_r+0x1fa4>
   230b0:	d8c03217 	ldw	r3,200(sp)
   230b4:	d9003317 	ldw	r4,204(sp)
   230b8:	1901dd16 	blt	r3,r4,23830 <___vfprintf_internal_r+0x1f2c>
   230bc:	9480004c 	andi	r18,r18,1
   230c0:	90022b1e 	bne	r18,zero,23970 <___vfprintf_internal_r+0x206c>
   230c4:	1805883a 	mov	r2,r3
   230c8:	18028016 	blt	r3,zero,23acc <___vfprintf_internal_r+0x21c8>
   230cc:	d8c03217 	ldw	r3,200(sp)
   230d0:	044019c4 	movi	r17,103
   230d4:	d8c02e15 	stw	r3,184(sp)
   230d8:	df002a07 	ldb	fp,168(sp)
   230dc:	e001531e 	bne	fp,zero,2362c <___vfprintf_internal_r+0x1d28>
   230e0:	df002783 	ldbu	fp,158(sp)
   230e4:	d8802a15 	stw	r2,168(sp)
   230e8:	dc802b17 	ldw	r18,172(sp)
   230ec:	d8002915 	stw	zero,164(sp)
   230f0:	003bd106 	br	22038 <__alt_data_end+0xfffe2038>
   230f4:	d8802d17 	ldw	r2,180(sp)
   230f8:	d8c02d17 	ldw	r3,180(sp)
   230fc:	d9002d17 	ldw	r4,180(sp)
   23100:	10800017 	ldw	r2,0(r2)
   23104:	18c00117 	ldw	r3,4(r3)
   23108:	21000204 	addi	r4,r4,8
   2310c:	d8803615 	stw	r2,216(sp)
   23110:	d8c03815 	stw	r3,224(sp)
   23114:	d9002d15 	stw	r4,180(sp)
   23118:	003b7506 	br	21ef0 <__alt_data_end+0xfffe1ef0>
   2311c:	ac400007 	ldb	r17,0(r21)
   23120:	003a5906 	br	21a88 <__alt_data_end+0xfffe1a88>
   23124:	9080100c 	andi	r2,r18,64
   23128:	1000a826 	beq	r2,zero,233cc <___vfprintf_internal_r+0x1ac8>
   2312c:	d9002d17 	ldw	r4,180(sp)
   23130:	002d883a 	mov	r22,zero
   23134:	24c0000b 	ldhu	r19,0(r4)
   23138:	21000104 	addi	r4,r4,4
   2313c:	d9002d15 	stw	r4,180(sp)
   23140:	003ccb06 	br	22470 <__alt_data_end+0xfffe2470>
   23144:	d8c02d17 	ldw	r3,180(sp)
   23148:	d9002917 	ldw	r4,164(sp)
   2314c:	002d883a 	mov	r22,zero
   23150:	18800104 	addi	r2,r3,4
   23154:	1cc00017 	ldw	r19,0(r3)
   23158:	203ebb0e 	bge	r4,zero,22c48 <__alt_data_end+0xfffe2c48>
   2315c:	003ef106 	br	22d24 <__alt_data_end+0xfffe2d24>
   23160:	9080040c 	andi	r2,r18,16
   23164:	1000921e 	bne	r2,zero,233b0 <___vfprintf_internal_r+0x1aac>
   23168:	9480100c 	andi	r18,r18,64
   2316c:	90013926 	beq	r18,zero,23654 <___vfprintf_internal_r+0x1d50>
   23170:	d9002d17 	ldw	r4,180(sp)
   23174:	d9402f17 	ldw	r5,188(sp)
   23178:	20800017 	ldw	r2,0(r4)
   2317c:	21000104 	addi	r4,r4,4
   23180:	d9002d15 	stw	r4,180(sp)
   23184:	1140000d 	sth	r5,0(r2)
   23188:	003a1606 	br	219e4 <__alt_data_end+0xfffe19e4>
   2318c:	9080100c 	andi	r2,r18,64
   23190:	10008026 	beq	r2,zero,23394 <___vfprintf_internal_r+0x1a90>
   23194:	d8c02d17 	ldw	r3,180(sp)
   23198:	1cc0000f 	ldh	r19,0(r3)
   2319c:	18c00104 	addi	r3,r3,4
   231a0:	d8c02d15 	stw	r3,180(sp)
   231a4:	982dd7fa 	srai	r22,r19,31
   231a8:	b005883a 	mov	r2,r22
   231ac:	003b1f06 	br	21e2c <__alt_data_end+0xfffe1e2c>
   231b0:	9080100c 	andi	r2,r18,64
   231b4:	d8002785 	stb	zero,158(sp)
   231b8:	10008a1e 	bne	r2,zero,233e4 <___vfprintf_internal_r+0x1ae0>
   231bc:	d9402d17 	ldw	r5,180(sp)
   231c0:	d8c02917 	ldw	r3,164(sp)
   231c4:	002d883a 	mov	r22,zero
   231c8:	28800104 	addi	r2,r5,4
   231cc:	2cc00017 	ldw	r19,0(r5)
   231d0:	183e4b0e 	bge	r3,zero,22b00 <__alt_data_end+0xfffe2b00>
   231d4:	9d86b03a 	or	r3,r19,r22
   231d8:	d8802d15 	stw	r2,180(sp)
   231dc:	183e4c1e 	bne	r3,zero,22b10 <__alt_data_end+0xfffe2b10>
   231e0:	0039883a 	mov	fp,zero
   231e4:	0005883a 	mov	r2,zero
   231e8:	003d4006 	br	226ec <__alt_data_end+0xfffe26ec>
   231ec:	014000f4 	movhi	r5,3
   231f0:	297d2684 	addi	r5,r5,-2918
   231f4:	d9402b15 	stw	r5,172(sp)
   231f8:	d9402b17 	ldw	r5,172(sp)
   231fc:	1c47883a 	add	r3,r3,r17
   23200:	10800044 	addi	r2,r2,1
   23204:	41400015 	stw	r5,0(r8)
   23208:	44400115 	stw	r17,4(r8)
   2320c:	d8c02015 	stw	r3,128(sp)
   23210:	d8801f15 	stw	r2,124(sp)
   23214:	010001c4 	movi	r4,7
   23218:	20bec816 	blt	r4,r2,22d3c <__alt_data_end+0xfffe2d3c>
   2321c:	42000204 	addi	r8,r8,8
   23220:	003ecd06 	br	22d58 <__alt_data_end+0xfffe2d58>
   23224:	d9002917 	ldw	r4,164(sp)
   23228:	d8002785 	stb	zero,158(sp)
   2322c:	203d2d16 	blt	r4,zero,226e4 <__alt_data_end+0xfffe26e4>
   23230:	00bfdfc4 	movi	r2,-129
   23234:	90a4703a 	and	r18,r18,r2
   23238:	003a9106 	br	21c80 <__alt_data_end+0xfffe1c80>
   2323c:	010000f4 	movhi	r4,3
   23240:	213d2684 	addi	r4,r4,-2918
   23244:	d9002b15 	stw	r4,172(sp)
   23248:	003c0c06 	br	2227c <__alt_data_end+0xfffe227c>
   2324c:	d9002c17 	ldw	r4,176(sp)
   23250:	d9801e04 	addi	r6,sp,120
   23254:	b80b883a 	mov	r5,r23
   23258:	002841c0 	call	2841c <__sprint_r>
   2325c:	103aab1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   23260:	d8c02017 	ldw	r3,128(sp)
   23264:	da000404 	addi	r8,sp,16
   23268:	003d4106 	br	22770 <__alt_data_end+0xfffe2770>
   2326c:	d8801f17 	ldw	r2,124(sp)
   23270:	014000f4 	movhi	r5,3
   23274:	01000044 	movi	r4,1
   23278:	18c00044 	addi	r3,r3,1
   2327c:	10800044 	addi	r2,r2,1
   23280:	297d2604 	addi	r5,r5,-2920
   23284:	41000115 	stw	r4,4(r8)
   23288:	41400015 	stw	r5,0(r8)
   2328c:	d8c02015 	stw	r3,128(sp)
   23290:	d8801f15 	stw	r2,124(sp)
   23294:	010001c4 	movi	r4,7
   23298:	20805c16 	blt	r4,r2,2340c <___vfprintf_internal_r+0x1b08>
   2329c:	42000204 	addi	r8,r8,8
   232a0:	8800041e 	bne	r17,zero,232b4 <___vfprintf_internal_r+0x19b0>
   232a4:	d8803317 	ldw	r2,204(sp)
   232a8:	1000021e 	bne	r2,zero,232b4 <___vfprintf_internal_r+0x19b0>
   232ac:	9080004c 	andi	r2,r18,1
   232b0:	103c0926 	beq	r2,zero,222d8 <__alt_data_end+0xfffe22d8>
   232b4:	d9003717 	ldw	r4,220(sp)
   232b8:	d8801f17 	ldw	r2,124(sp)
   232bc:	d9403417 	ldw	r5,208(sp)
   232c0:	20c7883a 	add	r3,r4,r3
   232c4:	10800044 	addi	r2,r2,1
   232c8:	41000115 	stw	r4,4(r8)
   232cc:	41400015 	stw	r5,0(r8)
   232d0:	d8c02015 	stw	r3,128(sp)
   232d4:	d8801f15 	stw	r2,124(sp)
   232d8:	010001c4 	movi	r4,7
   232dc:	20812116 	blt	r4,r2,23764 <___vfprintf_internal_r+0x1e60>
   232e0:	42000204 	addi	r8,r8,8
   232e4:	0463c83a 	sub	r17,zero,r17
   232e8:	0440730e 	bge	zero,r17,234b8 <___vfprintf_internal_r+0x1bb4>
   232ec:	05800404 	movi	r22,16
   232f0:	b440860e 	bge	r22,r17,2350c <___vfprintf_internal_r+0x1c08>
   232f4:	014000f4 	movhi	r5,3
   232f8:	297d2684 	addi	r5,r5,-2918
   232fc:	d9402b15 	stw	r5,172(sp)
   23300:	070001c4 	movi	fp,7
   23304:	dcc02c17 	ldw	r19,176(sp)
   23308:	00000306 	br	23318 <___vfprintf_internal_r+0x1a14>
   2330c:	42000204 	addi	r8,r8,8
   23310:	8c7ffc04 	addi	r17,r17,-16
   23314:	b440800e 	bge	r22,r17,23518 <___vfprintf_internal_r+0x1c14>
   23318:	18c00404 	addi	r3,r3,16
   2331c:	10800044 	addi	r2,r2,1
   23320:	45000015 	stw	r20,0(r8)
   23324:	45800115 	stw	r22,4(r8)
   23328:	d8c02015 	stw	r3,128(sp)
   2332c:	d8801f15 	stw	r2,124(sp)
   23330:	e0bff60e 	bge	fp,r2,2330c <__alt_data_end+0xfffe330c>
   23334:	d9801e04 	addi	r6,sp,120
   23338:	b80b883a 	mov	r5,r23
   2333c:	9809883a 	mov	r4,r19
   23340:	002841c0 	call	2841c <__sprint_r>
   23344:	103a711e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   23348:	d8c02017 	ldw	r3,128(sp)
   2334c:	d8801f17 	ldw	r2,124(sp)
   23350:	da000404 	addi	r8,sp,16
   23354:	003fee06 	br	23310 <__alt_data_end+0xfffe3310>
   23358:	00bfffc4 	movi	r2,-1
   2335c:	003a6f06 	br	21d1c <__alt_data_end+0xfffe1d1c>
   23360:	008011c4 	movi	r2,71
   23364:	1440b816 	blt	r2,r17,23648 <___vfprintf_internal_r+0x1d44>
   23368:	040000f4 	movhi	r16,3
   2336c:	843d1804 	addi	r16,r16,-2976
   23370:	00c000c4 	movi	r3,3
   23374:	00bfdfc4 	movi	r2,-129
   23378:	d8c02a15 	stw	r3,168(sp)
   2337c:	90a4703a 	and	r18,r18,r2
   23380:	df002783 	ldbu	fp,158(sp)
   23384:	d8c02e15 	stw	r3,184(sp)
   23388:	d8002915 	stw	zero,164(sp)
   2338c:	d8003215 	stw	zero,200(sp)
   23390:	003b2906 	br	22038 <__alt_data_end+0xfffe2038>
   23394:	d9002d17 	ldw	r4,180(sp)
   23398:	24c00017 	ldw	r19,0(r4)
   2339c:	21000104 	addi	r4,r4,4
   233a0:	d9002d15 	stw	r4,180(sp)
   233a4:	982dd7fa 	srai	r22,r19,31
   233a8:	b005883a 	mov	r2,r22
   233ac:	003a9f06 	br	21e2c <__alt_data_end+0xfffe1e2c>
   233b0:	d9402d17 	ldw	r5,180(sp)
   233b4:	d8c02f17 	ldw	r3,188(sp)
   233b8:	28800017 	ldw	r2,0(r5)
   233bc:	29400104 	addi	r5,r5,4
   233c0:	d9402d15 	stw	r5,180(sp)
   233c4:	10c00015 	stw	r3,0(r2)
   233c8:	00398606 	br	219e4 <__alt_data_end+0xfffe19e4>
   233cc:	d9402d17 	ldw	r5,180(sp)
   233d0:	002d883a 	mov	r22,zero
   233d4:	2cc00017 	ldw	r19,0(r5)
   233d8:	29400104 	addi	r5,r5,4
   233dc:	d9402d15 	stw	r5,180(sp)
   233e0:	003c2306 	br	22470 <__alt_data_end+0xfffe2470>
   233e4:	d8c02d17 	ldw	r3,180(sp)
   233e8:	d9002917 	ldw	r4,164(sp)
   233ec:	002d883a 	mov	r22,zero
   233f0:	18800104 	addi	r2,r3,4
   233f4:	1cc0000b 	ldhu	r19,0(r3)
   233f8:	203dc10e 	bge	r4,zero,22b00 <__alt_data_end+0xfffe2b00>
   233fc:	003f7506 	br	231d4 <__alt_data_end+0xfffe31d4>
   23400:	040000f4 	movhi	r16,3
   23404:	843d1604 	addi	r16,r16,-2984
   23408:	003acc06 	br	21f3c <__alt_data_end+0xfffe1f3c>
   2340c:	d9002c17 	ldw	r4,176(sp)
   23410:	d9801e04 	addi	r6,sp,120
   23414:	b80b883a 	mov	r5,r23
   23418:	002841c0 	call	2841c <__sprint_r>
   2341c:	103a3b1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   23420:	dc402617 	ldw	r17,152(sp)
   23424:	d8c02017 	ldw	r3,128(sp)
   23428:	da000404 	addi	r8,sp,16
   2342c:	003f9c06 	br	232a0 <__alt_data_end+0xfffe32a0>
   23430:	ac400043 	ldbu	r17,1(r21)
   23434:	94800814 	ori	r18,r18,32
   23438:	ad400044 	addi	r21,r21,1
   2343c:	8c403fcc 	andi	r17,r17,255
   23440:	8c40201c 	xori	r17,r17,128
   23444:	8c7fe004 	addi	r17,r17,-128
   23448:	00398f06 	br	21a88 <__alt_data_end+0xfffe1a88>
   2344c:	d8c02d15 	stw	r3,180(sp)
   23450:	0039883a 	mov	fp,zero
   23454:	003e3506 	br	22d2c <__alt_data_end+0xfffe2d2c>
   23458:	d9002c17 	ldw	r4,176(sp)
   2345c:	d9801e04 	addi	r6,sp,120
   23460:	b80b883a 	mov	r5,r23
   23464:	002841c0 	call	2841c <__sprint_r>
   23468:	103a281e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   2346c:	d8c02017 	ldw	r3,128(sp)
   23470:	da000404 	addi	r8,sp,16
   23474:	003cd006 	br	227b8 <__alt_data_end+0xfffe27b8>
   23478:	8009883a 	mov	r4,r16
   2347c:	da003d15 	stw	r8,244(sp)
   23480:	00282880 	call	28288 <strlen>
   23484:	d8802e15 	stw	r2,184(sp)
   23488:	da003d17 	ldw	r8,244(sp)
   2348c:	103c340e 	bge	r2,zero,22560 <__alt_data_end+0xfffe2560>
   23490:	0005883a 	mov	r2,zero
   23494:	003c3206 	br	22560 <__alt_data_end+0xfffe2560>
   23498:	d9002c17 	ldw	r4,176(sp)
   2349c:	d9801e04 	addi	r6,sp,120
   234a0:	b80b883a 	mov	r5,r23
   234a4:	002841c0 	call	2841c <__sprint_r>
   234a8:	103a181e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   234ac:	d8c02017 	ldw	r3,128(sp)
   234b0:	d8801f17 	ldw	r2,124(sp)
   234b4:	da000404 	addi	r8,sp,16
   234b8:	d9403317 	ldw	r5,204(sp)
   234bc:	10800044 	addi	r2,r2,1
   234c0:	44000015 	stw	r16,0(r8)
   234c4:	28c7883a 	add	r3,r5,r3
   234c8:	003b7d06 	br	222c0 <__alt_data_end+0xfffe22c0>
   234cc:	010000f4 	movhi	r4,3
   234d0:	213d2a84 	addi	r4,r4,-2902
   234d4:	d9003515 	stw	r4,212(sp)
   234d8:	003b1406 	br	2212c <__alt_data_end+0xfffe212c>
   234dc:	013fffc4 	movi	r4,-1
   234e0:	003a3506 	br	21db8 <__alt_data_end+0xfffe1db8>
   234e4:	0023883a 	mov	r17,zero
   234e8:	003d9d06 	br	22b60 <__alt_data_end+0xfffe2b60>
   234ec:	d9002c17 	ldw	r4,176(sp)
   234f0:	d9801e04 	addi	r6,sp,120
   234f4:	b80b883a 	mov	r5,r23
   234f8:	002841c0 	call	2841c <__sprint_r>
   234fc:	103a031e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   23500:	d8c02017 	ldw	r3,128(sp)
   23504:	da000404 	addi	r8,sp,16
   23508:	003d9406 	br	22b5c <__alt_data_end+0xfffe2b5c>
   2350c:	010000f4 	movhi	r4,3
   23510:	213d2684 	addi	r4,r4,-2918
   23514:	d9002b15 	stw	r4,172(sp)
   23518:	d9002b17 	ldw	r4,172(sp)
   2351c:	1c47883a 	add	r3,r3,r17
   23520:	10800044 	addi	r2,r2,1
   23524:	41000015 	stw	r4,0(r8)
   23528:	44400115 	stw	r17,4(r8)
   2352c:	d8c02015 	stw	r3,128(sp)
   23530:	d8801f15 	stw	r2,124(sp)
   23534:	010001c4 	movi	r4,7
   23538:	20bfd716 	blt	r4,r2,23498 <__alt_data_end+0xfffe3498>
   2353c:	42000204 	addi	r8,r8,8
   23540:	003fdd06 	br	234b8 <__alt_data_end+0xfffe34b8>
   23544:	d9002c17 	ldw	r4,176(sp)
   23548:	d9801e04 	addi	r6,sp,120
   2354c:	b80b883a 	mov	r5,r23
   23550:	002841c0 	call	2841c <__sprint_r>
   23554:	1039ed1e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   23558:	d8802617 	ldw	r2,152(sp)
   2355c:	d8c02017 	ldw	r3,128(sp)
   23560:	da000404 	addi	r8,sp,16
   23564:	003e1006 	br	22da8 <__alt_data_end+0xfffe2da8>
   23568:	00800044 	movi	r2,1
   2356c:	10803fcc 	andi	r2,r2,255
   23570:	00c00044 	movi	r3,1
   23574:	10fa3526 	beq	r2,r3,21e4c <__alt_data_end+0xfffe1e4c>
   23578:	00c00084 	movi	r3,2
   2357c:	10fbcb26 	beq	r2,r3,224ac <__alt_data_end+0xfffe24ac>
   23580:	003a8f06 	br	21fc0 <__alt_data_end+0xfffe1fc0>
   23584:	010000f4 	movhi	r4,3
   23588:	213d2a84 	addi	r4,r4,-2902
   2358c:	d9003515 	stw	r4,212(sp)
   23590:	003b7606 	br	2236c <__alt_data_end+0xfffe236c>
   23594:	d8802917 	ldw	r2,164(sp)
   23598:	00c00184 	movi	r3,6
   2359c:	1880012e 	bgeu	r3,r2,235a4 <___vfprintf_internal_r+0x1ca0>
   235a0:	1805883a 	mov	r2,r3
   235a4:	d8802e15 	stw	r2,184(sp)
   235a8:	1000ef16 	blt	r2,zero,23968 <___vfprintf_internal_r+0x2064>
   235ac:	040000f4 	movhi	r16,3
   235b0:	d8802a15 	stw	r2,168(sp)
   235b4:	dcc02d15 	stw	r19,180(sp)
   235b8:	d8002915 	stw	zero,164(sp)
   235bc:	d8003215 	stw	zero,200(sp)
   235c0:	843d2404 	addi	r16,r16,-2928
   235c4:	0039883a 	mov	fp,zero
   235c8:	003aa206 	br	22054 <__alt_data_end+0xfffe2054>
   235cc:	0021883a 	mov	r16,zero
   235d0:	003e0706 	br	22df0 <__alt_data_end+0xfffe2df0>
   235d4:	d9002c17 	ldw	r4,176(sp)
   235d8:	d9801e04 	addi	r6,sp,120
   235dc:	b80b883a 	mov	r5,r23
   235e0:	002841c0 	call	2841c <__sprint_r>
   235e4:	1039c91e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   235e8:	d8802617 	ldw	r2,152(sp)
   235ec:	d9403317 	ldw	r5,204(sp)
   235f0:	d8c02017 	ldw	r3,128(sp)
   235f4:	da000404 	addi	r8,sp,16
   235f8:	2885c83a 	sub	r2,r5,r2
   235fc:	003dfb06 	br	22dec <__alt_data_end+0xfffe2dec>
   23600:	9080004c 	andi	r2,r18,1
   23604:	103e8f1e 	bne	r2,zero,23044 <__alt_data_end+0xfffe3044>
   23608:	d8802117 	ldw	r2,132(sp)
   2360c:	003e9e06 	br	23088 <__alt_data_end+0xfffe3088>
   23610:	1025883a 	mov	r18,r2
   23614:	0039883a 	mov	fp,zero
   23618:	00800084 	movi	r2,2
   2361c:	003fd306 	br	2356c <__alt_data_end+0xfffe356c>
   23620:	07000b44 	movi	fp,45
   23624:	df002785 	stb	fp,158(sp)
   23628:	003a4006 	br	21f2c <__alt_data_end+0xfffe1f2c>
   2362c:	00c00b44 	movi	r3,45
   23630:	d8c02785 	stb	r3,158(sp)
   23634:	d8802a15 	stw	r2,168(sp)
   23638:	dc802b17 	ldw	r18,172(sp)
   2363c:	d8002915 	stw	zero,164(sp)
   23640:	07000b44 	movi	fp,45
   23644:	003a8006 	br	22048 <__alt_data_end+0xfffe2048>
   23648:	040000f4 	movhi	r16,3
   2364c:	843d1904 	addi	r16,r16,-2972
   23650:	003f4706 	br	23370 <__alt_data_end+0xfffe3370>
   23654:	d8c02d17 	ldw	r3,180(sp)
   23658:	d9002f17 	ldw	r4,188(sp)
   2365c:	18800017 	ldw	r2,0(r3)
   23660:	18c00104 	addi	r3,r3,4
   23664:	d8c02d15 	stw	r3,180(sp)
   23668:	11000015 	stw	r4,0(r2)
   2366c:	0038dd06 	br	219e4 <__alt_data_end+0xfffe19e4>
   23670:	dd802617 	ldw	r22,152(sp)
   23674:	00bfff44 	movi	r2,-3
   23678:	b0801c16 	blt	r22,r2,236ec <___vfprintf_internal_r+0x1de8>
   2367c:	d9402917 	ldw	r5,164(sp)
   23680:	2d801a16 	blt	r5,r22,236ec <___vfprintf_internal_r+0x1de8>
   23684:	dd803215 	stw	r22,200(sp)
   23688:	003e8906 	br	230b0 <__alt_data_end+0xfffe30b0>
   2368c:	010000f4 	movhi	r4,3
   23690:	213d2684 	addi	r4,r4,-2918
   23694:	d9002b15 	stw	r4,172(sp)
   23698:	003c9106 	br	228e0 <__alt_data_end+0xfffe28e0>
   2369c:	e005883a 	mov	r2,fp
   236a0:	003e7906 	br	23088 <__alt_data_end+0xfffe3088>
   236a4:	d9402917 	ldw	r5,164(sp)
   236a8:	df002783 	ldbu	fp,158(sp)
   236ac:	dcc02d15 	stw	r19,180(sp)
   236b0:	d9402a15 	stw	r5,168(sp)
   236b4:	d9402e15 	stw	r5,184(sp)
   236b8:	d8002915 	stw	zero,164(sp)
   236bc:	d8003215 	stw	zero,200(sp)
   236c0:	003a5d06 	br	22038 <__alt_data_end+0xfffe2038>
   236c4:	9080004c 	andi	r2,r18,1
   236c8:	0039883a 	mov	fp,zero
   236cc:	10000426 	beq	r2,zero,236e0 <___vfprintf_internal_r+0x1ddc>
   236d0:	00800c04 	movi	r2,48
   236d4:	dc001dc4 	addi	r16,sp,119
   236d8:	d8801dc5 	stb	r2,119(sp)
   236dc:	003b8006 	br	224e0 <__alt_data_end+0xfffe24e0>
   236e0:	d8002e15 	stw	zero,184(sp)
   236e4:	dc001e04 	addi	r16,sp,120
   236e8:	003a4d06 	br	22020 <__alt_data_end+0xfffe2020>
   236ec:	8c7fff84 	addi	r17,r17,-2
   236f0:	b5bfffc4 	addi	r22,r22,-1
   236f4:	dd802615 	stw	r22,152(sp)
   236f8:	dc4022c5 	stb	r17,139(sp)
   236fc:	b000bf16 	blt	r22,zero,239fc <___vfprintf_internal_r+0x20f8>
   23700:	00800ac4 	movi	r2,43
   23704:	d8802305 	stb	r2,140(sp)
   23708:	00800244 	movi	r2,9
   2370c:	15807016 	blt	r2,r22,238d0 <___vfprintf_internal_r+0x1fcc>
   23710:	00800c04 	movi	r2,48
   23714:	b5800c04 	addi	r22,r22,48
   23718:	d8802345 	stb	r2,141(sp)
   2371c:	dd802385 	stb	r22,142(sp)
   23720:	d88023c4 	addi	r2,sp,143
   23724:	df0022c4 	addi	fp,sp,139
   23728:	d8c03317 	ldw	r3,204(sp)
   2372c:	1739c83a 	sub	fp,r2,fp
   23730:	d9003317 	ldw	r4,204(sp)
   23734:	e0c7883a 	add	r3,fp,r3
   23738:	df003a15 	stw	fp,232(sp)
   2373c:	d8c02e15 	stw	r3,184(sp)
   23740:	00800044 	movi	r2,1
   23744:	1100b30e 	bge	r2,r4,23a14 <___vfprintf_internal_r+0x2110>
   23748:	d8c02e17 	ldw	r3,184(sp)
   2374c:	18c00044 	addi	r3,r3,1
   23750:	d8c02e15 	stw	r3,184(sp)
   23754:	1805883a 	mov	r2,r3
   23758:	1800ac16 	blt	r3,zero,23a0c <___vfprintf_internal_r+0x2108>
   2375c:	d8003215 	stw	zero,200(sp)
   23760:	003e5d06 	br	230d8 <__alt_data_end+0xfffe30d8>
   23764:	d9002c17 	ldw	r4,176(sp)
   23768:	d9801e04 	addi	r6,sp,120
   2376c:	b80b883a 	mov	r5,r23
   23770:	002841c0 	call	2841c <__sprint_r>
   23774:	1039651e 	bne	r2,zero,21d0c <__alt_data_end+0xfffe1d0c>
   23778:	dc402617 	ldw	r17,152(sp)
   2377c:	d8c02017 	ldw	r3,128(sp)
   23780:	d8801f17 	ldw	r2,124(sp)
   23784:	da000404 	addi	r8,sp,16
   23788:	003ed606 	br	232e4 <__alt_data_end+0xfffe32e4>
   2378c:	582b883a 	mov	r21,r11
   23790:	d8002915 	stw	zero,164(sp)
   23794:	0038bd06 	br	21a8c <__alt_data_end+0xfffe1a8c>
   23798:	d8802917 	ldw	r2,164(sp)
   2379c:	103e071e 	bne	r2,zero,22fbc <__alt_data_end+0xfffe2fbc>
   237a0:	dc002915 	stw	r16,164(sp)
   237a4:	003e0506 	br	22fbc <__alt_data_end+0xfffe2fbc>
   237a8:	d9002917 	ldw	r4,164(sp)
   237ac:	20c00044 	addi	r3,r4,1
   237b0:	003e0f06 	br	22ff0 <__alt_data_end+0xfffe2ff0>
   237b4:	01400184 	movi	r5,6
   237b8:	d9402915 	stw	r5,164(sp)
   237bc:	003dff06 	br	22fbc <__alt_data_end+0xfffe2fbc>
   237c0:	d8802104 	addi	r2,sp,132
   237c4:	d8800315 	stw	r2,12(sp)
   237c8:	d8802504 	addi	r2,sp,148
   237cc:	d8800215 	stw	r2,8(sp)
   237d0:	d8802604 	addi	r2,sp,152
   237d4:	d8800115 	stw	r2,4(sp)
   237d8:	d8802917 	ldw	r2,164(sp)
   237dc:	d9403617 	ldw	r5,216(sp)
   237e0:	d9002c17 	ldw	r4,176(sp)
   237e4:	d8800015 	stw	r2,0(sp)
   237e8:	01c000c4 	movi	r7,3
   237ec:	980d883a 	mov	r6,r19
   237f0:	da003d15 	stw	r8,244(sp)
   237f4:	0023f280 	call	23f28 <_dtoa_r>
   237f8:	d8c02917 	ldw	r3,164(sp)
   237fc:	da003d17 	ldw	r8,244(sp)
   23800:	1021883a 	mov	r16,r2
   23804:	10f9883a 	add	fp,r2,r3
   23808:	81000007 	ldb	r4,0(r16)
   2380c:	00800c04 	movi	r2,48
   23810:	20805e26 	beq	r4,r2,2398c <___vfprintf_internal_r+0x2088>
   23814:	d8c02617 	ldw	r3,152(sp)
   23818:	e0f9883a 	add	fp,fp,r3
   2381c:	003e0a06 	br	23048 <__alt_data_end+0xfffe3048>
   23820:	00c00b44 	movi	r3,45
   23824:	24e0003c 	xorhi	r19,r4,32768
   23828:	d8c02a05 	stb	r3,168(sp)
   2382c:	003de906 	br	22fd4 <__alt_data_end+0xfffe2fd4>
   23830:	d8c03217 	ldw	r3,200(sp)
   23834:	00c07a0e 	bge	zero,r3,23a20 <___vfprintf_internal_r+0x211c>
   23838:	00800044 	movi	r2,1
   2383c:	d9003317 	ldw	r4,204(sp)
   23840:	1105883a 	add	r2,r2,r4
   23844:	d8802e15 	stw	r2,184(sp)
   23848:	10004e16 	blt	r2,zero,23984 <___vfprintf_internal_r+0x2080>
   2384c:	044019c4 	movi	r17,103
   23850:	003e2106 	br	230d8 <__alt_data_end+0xfffe30d8>
   23854:	d9002917 	ldw	r4,164(sp)
   23858:	d8802104 	addi	r2,sp,132
   2385c:	d8800315 	stw	r2,12(sp)
   23860:	d9000015 	stw	r4,0(sp)
   23864:	d8802504 	addi	r2,sp,148
   23868:	d9403617 	ldw	r5,216(sp)
   2386c:	d9002c17 	ldw	r4,176(sp)
   23870:	d8800215 	stw	r2,8(sp)
   23874:	d8802604 	addi	r2,sp,152
   23878:	d8800115 	stw	r2,4(sp)
   2387c:	01c000c4 	movi	r7,3
   23880:	980d883a 	mov	r6,r19
   23884:	da003d15 	stw	r8,244(sp)
   23888:	0023f280 	call	23f28 <_dtoa_r>
   2388c:	d8c02917 	ldw	r3,164(sp)
   23890:	da003d17 	ldw	r8,244(sp)
   23894:	1021883a 	mov	r16,r2
   23898:	00801184 	movi	r2,70
   2389c:	80f9883a 	add	fp,r16,r3
   238a0:	88bfd926 	beq	r17,r2,23808 <__alt_data_end+0xfffe3808>
   238a4:	003de806 	br	23048 <__alt_data_end+0xfffe3048>
   238a8:	d9002917 	ldw	r4,164(sp)
   238ac:	00c04d0e 	bge	zero,r3,239e4 <___vfprintf_internal_r+0x20e0>
   238b0:	2000441e 	bne	r4,zero,239c4 <___vfprintf_internal_r+0x20c0>
   238b4:	9480004c 	andi	r18,r18,1
   238b8:	9000421e 	bne	r18,zero,239c4 <___vfprintf_internal_r+0x20c0>
   238bc:	1805883a 	mov	r2,r3
   238c0:	18007016 	blt	r3,zero,23a84 <___vfprintf_internal_r+0x2180>
   238c4:	d8c03217 	ldw	r3,200(sp)
   238c8:	d8c02e15 	stw	r3,184(sp)
   238cc:	003e0206 	br	230d8 <__alt_data_end+0xfffe30d8>
   238d0:	df0022c4 	addi	fp,sp,139
   238d4:	dc002915 	stw	r16,164(sp)
   238d8:	4027883a 	mov	r19,r8
   238dc:	e021883a 	mov	r16,fp
   238e0:	b009883a 	mov	r4,r22
   238e4:	01400284 	movi	r5,10
   238e8:	00204ec0 	call	204ec <__modsi3>
   238ec:	10800c04 	addi	r2,r2,48
   238f0:	843fffc4 	addi	r16,r16,-1
   238f4:	b009883a 	mov	r4,r22
   238f8:	01400284 	movi	r5,10
   238fc:	80800005 	stb	r2,0(r16)
   23900:	00204680 	call	20468 <__divsi3>
   23904:	102d883a 	mov	r22,r2
   23908:	00800244 	movi	r2,9
   2390c:	15bff416 	blt	r2,r22,238e0 <__alt_data_end+0xfffe38e0>
   23910:	9811883a 	mov	r8,r19
   23914:	b0800c04 	addi	r2,r22,48
   23918:	8027883a 	mov	r19,r16
   2391c:	997fffc4 	addi	r5,r19,-1
   23920:	98bfffc5 	stb	r2,-1(r19)
   23924:	dc002917 	ldw	r16,164(sp)
   23928:	2f006a2e 	bgeu	r5,fp,23ad4 <___vfprintf_internal_r+0x21d0>
   2392c:	d9c02384 	addi	r7,sp,142
   23930:	3ccfc83a 	sub	r7,r7,r19
   23934:	d9002344 	addi	r4,sp,141
   23938:	e1cf883a 	add	r7,fp,r7
   2393c:	00000106 	br	23944 <___vfprintf_internal_r+0x2040>
   23940:	28800003 	ldbu	r2,0(r5)
   23944:	20800005 	stb	r2,0(r4)
   23948:	21000044 	addi	r4,r4,1
   2394c:	29400044 	addi	r5,r5,1
   23950:	393ffb1e 	bne	r7,r4,23940 <__alt_data_end+0xfffe3940>
   23954:	d8802304 	addi	r2,sp,140
   23958:	14c5c83a 	sub	r2,r2,r19
   2395c:	d8c02344 	addi	r3,sp,141
   23960:	1885883a 	add	r2,r3,r2
   23964:	003f7006 	br	23728 <__alt_data_end+0xfffe3728>
   23968:	0005883a 	mov	r2,zero
   2396c:	003f0f06 	br	235ac <__alt_data_end+0xfffe35ac>
   23970:	d8c03217 	ldw	r3,200(sp)
   23974:	18c00044 	addi	r3,r3,1
   23978:	d8c02e15 	stw	r3,184(sp)
   2397c:	1805883a 	mov	r2,r3
   23980:	183fb20e 	bge	r3,zero,2384c <__alt_data_end+0xfffe384c>
   23984:	0005883a 	mov	r2,zero
   23988:	003fb006 	br	2384c <__alt_data_end+0xfffe384c>
   2398c:	d9003617 	ldw	r4,216(sp)
   23990:	000d883a 	mov	r6,zero
   23994:	000f883a 	mov	r7,zero
   23998:	980b883a 	mov	r5,r19
   2399c:	d8c03c15 	stw	r3,240(sp)
   239a0:	da003d15 	stw	r8,244(sp)
   239a4:	002ca5c0 	call	2ca5c <__eqdf2>
   239a8:	d8c03c17 	ldw	r3,240(sp)
   239ac:	da003d17 	ldw	r8,244(sp)
   239b0:	103f9826 	beq	r2,zero,23814 <__alt_data_end+0xfffe3814>
   239b4:	00800044 	movi	r2,1
   239b8:	10c7c83a 	sub	r3,r2,r3
   239bc:	d8c02615 	stw	r3,152(sp)
   239c0:	003f9506 	br	23818 <__alt_data_end+0xfffe3818>
   239c4:	d9002917 	ldw	r4,164(sp)
   239c8:	d8c03217 	ldw	r3,200(sp)
   239cc:	20800044 	addi	r2,r4,1
   239d0:	1885883a 	add	r2,r3,r2
   239d4:	d8802e15 	stw	r2,184(sp)
   239d8:	103dbf0e 	bge	r2,zero,230d8 <__alt_data_end+0xfffe30d8>
   239dc:	0005883a 	mov	r2,zero
   239e0:	003dbd06 	br	230d8 <__alt_data_end+0xfffe30d8>
   239e4:	2000211e 	bne	r4,zero,23a6c <___vfprintf_internal_r+0x2168>
   239e8:	9480004c 	andi	r18,r18,1
   239ec:	90001f1e 	bne	r18,zero,23a6c <___vfprintf_internal_r+0x2168>
   239f0:	00800044 	movi	r2,1
   239f4:	d8802e15 	stw	r2,184(sp)
   239f8:	003db706 	br	230d8 <__alt_data_end+0xfffe30d8>
   239fc:	00800b44 	movi	r2,45
   23a00:	05adc83a 	sub	r22,zero,r22
   23a04:	d8802305 	stb	r2,140(sp)
   23a08:	003f3f06 	br	23708 <__alt_data_end+0xfffe3708>
   23a0c:	0005883a 	mov	r2,zero
   23a10:	003f5206 	br	2375c <__alt_data_end+0xfffe375c>
   23a14:	90a4703a 	and	r18,r18,r2
   23a18:	903f4e26 	beq	r18,zero,23754 <__alt_data_end+0xfffe3754>
   23a1c:	003f4a06 	br	23748 <__alt_data_end+0xfffe3748>
   23a20:	00800084 	movi	r2,2
   23a24:	10c5c83a 	sub	r2,r2,r3
   23a28:	003f8406 	br	2383c <__alt_data_end+0xfffe383c>
   23a2c:	d8802d17 	ldw	r2,180(sp)
   23a30:	d9002d17 	ldw	r4,180(sp)
   23a34:	ac400043 	ldbu	r17,1(r21)
   23a38:	10800017 	ldw	r2,0(r2)
   23a3c:	582b883a 	mov	r21,r11
   23a40:	d8802915 	stw	r2,164(sp)
   23a44:	20800104 	addi	r2,r4,4
   23a48:	d9002917 	ldw	r4,164(sp)
   23a4c:	d8802d15 	stw	r2,180(sp)
   23a50:	203e7a0e 	bge	r4,zero,2343c <__alt_data_end+0xfffe343c>
   23a54:	8c403fcc 	andi	r17,r17,255
   23a58:	00bfffc4 	movi	r2,-1
   23a5c:	8c40201c 	xori	r17,r17,128
   23a60:	d8802915 	stw	r2,164(sp)
   23a64:	8c7fe004 	addi	r17,r17,-128
   23a68:	00380706 	br	21a88 <__alt_data_end+0xfffe1a88>
   23a6c:	d8c02917 	ldw	r3,164(sp)
   23a70:	18c00084 	addi	r3,r3,2
   23a74:	d8c02e15 	stw	r3,184(sp)
   23a78:	1805883a 	mov	r2,r3
   23a7c:	183d960e 	bge	r3,zero,230d8 <__alt_data_end+0xfffe30d8>
   23a80:	003fd606 	br	239dc <__alt_data_end+0xfffe39dc>
   23a84:	0005883a 	mov	r2,zero
   23a88:	003f8e06 	br	238c4 <__alt_data_end+0xfffe38c4>
   23a8c:	9080004c 	andi	r2,r18,1
   23a90:	103f811e 	bne	r2,zero,23898 <__alt_data_end+0xfffe3898>
   23a94:	d8802117 	ldw	r2,132(sp)
   23a98:	1405c83a 	sub	r2,r2,r16
   23a9c:	d8803315 	stw	r2,204(sp)
   23aa0:	b47ef326 	beq	r22,r17,23670 <__alt_data_end+0xfffe3670>
   23aa4:	dd802617 	ldw	r22,152(sp)
   23aa8:	003f1106 	br	236f0 <__alt_data_end+0xfffe36f0>
   23aac:	d9c02785 	stb	r7,158(sp)
   23ab0:	00390406 	br	21ec4 <__alt_data_end+0xfffe1ec4>
   23ab4:	d9c02785 	stb	r7,158(sp)
   23ab8:	0038d306 	br	21e08 <__alt_data_end+0xfffe1e08>
   23abc:	d9c02785 	stb	r7,158(sp)
   23ac0:	003a6106 	br	22448 <__alt_data_end+0xfffe2448>
   23ac4:	d9c02785 	stb	r7,158(sp)
   23ac8:	003af806 	br	226ac <__alt_data_end+0xfffe26ac>
   23acc:	0005883a 	mov	r2,zero
   23ad0:	003d7e06 	br	230cc <__alt_data_end+0xfffe30cc>
   23ad4:	d8802344 	addi	r2,sp,141
   23ad8:	003f1306 	br	23728 <__alt_data_end+0xfffe3728>
   23adc:	d9c02785 	stb	r7,158(sp)
   23ae0:	00392306 	br	21f70 <__alt_data_end+0xfffe1f70>
   23ae4:	d9c02785 	stb	r7,158(sp)
   23ae8:	003aa906 	br	22590 <__alt_data_end+0xfffe2590>
   23aec:	d9c02785 	stb	r7,158(sp)
   23af0:	003a3d06 	br	223e8 <__alt_data_end+0xfffe23e8>
   23af4:	d9c02785 	stb	r7,158(sp)
   23af8:	003aca06 	br	22624 <__alt_data_end+0xfffe2624>

00023afc <__vfprintf_internal>:
   23afc:	008000f4 	movhi	r2,3
   23b00:	10844104 	addi	r2,r2,4356
   23b04:	300f883a 	mov	r7,r6
   23b08:	280d883a 	mov	r6,r5
   23b0c:	200b883a 	mov	r5,r4
   23b10:	11000017 	ldw	r4,0(r2)
   23b14:	00219041 	jmpi	21904 <___vfprintf_internal_r>

00023b18 <__sbprintf>:
   23b18:	2880030b 	ldhu	r2,12(r5)
   23b1c:	2ac01917 	ldw	r11,100(r5)
   23b20:	2a80038b 	ldhu	r10,14(r5)
   23b24:	2a400717 	ldw	r9,28(r5)
   23b28:	2a000917 	ldw	r8,36(r5)
   23b2c:	defee204 	addi	sp,sp,-1144
   23b30:	00c10004 	movi	r3,1024
   23b34:	dc011a15 	stw	r16,1128(sp)
   23b38:	10bfff4c 	andi	r2,r2,65533
   23b3c:	2821883a 	mov	r16,r5
   23b40:	d8cb883a 	add	r5,sp,r3
   23b44:	dc811c15 	stw	r18,1136(sp)
   23b48:	dc411b15 	stw	r17,1132(sp)
   23b4c:	dfc11d15 	stw	ra,1140(sp)
   23b50:	2025883a 	mov	r18,r4
   23b54:	d881030d 	sth	r2,1036(sp)
   23b58:	dac11915 	stw	r11,1124(sp)
   23b5c:	da81038d 	sth	r10,1038(sp)
   23b60:	da410715 	stw	r9,1052(sp)
   23b64:	da010915 	stw	r8,1060(sp)
   23b68:	dec10015 	stw	sp,1024(sp)
   23b6c:	dec10415 	stw	sp,1040(sp)
   23b70:	d8c10215 	stw	r3,1032(sp)
   23b74:	d8c10515 	stw	r3,1044(sp)
   23b78:	d8010615 	stw	zero,1048(sp)
   23b7c:	00219040 	call	21904 <___vfprintf_internal_r>
   23b80:	1023883a 	mov	r17,r2
   23b84:	10000416 	blt	r2,zero,23b98 <__sbprintf+0x80>
   23b88:	d9410004 	addi	r5,sp,1024
   23b8c:	9009883a 	mov	r4,r18
   23b90:	00257cc0 	call	257cc <_fflush_r>
   23b94:	10000d1e 	bne	r2,zero,23bcc <__sbprintf+0xb4>
   23b98:	d881030b 	ldhu	r2,1036(sp)
   23b9c:	1080100c 	andi	r2,r2,64
   23ba0:	10000326 	beq	r2,zero,23bb0 <__sbprintf+0x98>
   23ba4:	8080030b 	ldhu	r2,12(r16)
   23ba8:	10801014 	ori	r2,r2,64
   23bac:	8080030d 	sth	r2,12(r16)
   23bb0:	8805883a 	mov	r2,r17
   23bb4:	dfc11d17 	ldw	ra,1140(sp)
   23bb8:	dc811c17 	ldw	r18,1136(sp)
   23bbc:	dc411b17 	ldw	r17,1132(sp)
   23bc0:	dc011a17 	ldw	r16,1128(sp)
   23bc4:	dec11e04 	addi	sp,sp,1144
   23bc8:	f800283a 	ret
   23bcc:	047fffc4 	movi	r17,-1
   23bd0:	003ff106 	br	23b98 <__alt_data_end+0xfffe3b98>

00023bd4 <__swsetup_r>:
   23bd4:	008000f4 	movhi	r2,3
   23bd8:	defffd04 	addi	sp,sp,-12
   23bdc:	10844104 	addi	r2,r2,4356
   23be0:	dc400115 	stw	r17,4(sp)
   23be4:	2023883a 	mov	r17,r4
   23be8:	11000017 	ldw	r4,0(r2)
   23bec:	dc000015 	stw	r16,0(sp)
   23bf0:	dfc00215 	stw	ra,8(sp)
   23bf4:	2821883a 	mov	r16,r5
   23bf8:	20000226 	beq	r4,zero,23c04 <__swsetup_r+0x30>
   23bfc:	20800e17 	ldw	r2,56(r4)
   23c00:	10003126 	beq	r2,zero,23cc8 <__swsetup_r+0xf4>
   23c04:	8080030b 	ldhu	r2,12(r16)
   23c08:	10c0020c 	andi	r3,r2,8
   23c0c:	1009883a 	mov	r4,r2
   23c10:	18000f26 	beq	r3,zero,23c50 <__swsetup_r+0x7c>
   23c14:	80c00417 	ldw	r3,16(r16)
   23c18:	18001526 	beq	r3,zero,23c70 <__swsetup_r+0x9c>
   23c1c:	1100004c 	andi	r4,r2,1
   23c20:	20001c1e 	bne	r4,zero,23c94 <__swsetup_r+0xc0>
   23c24:	1080008c 	andi	r2,r2,2
   23c28:	1000291e 	bne	r2,zero,23cd0 <__swsetup_r+0xfc>
   23c2c:	80800517 	ldw	r2,20(r16)
   23c30:	80800215 	stw	r2,8(r16)
   23c34:	18001c26 	beq	r3,zero,23ca8 <__swsetup_r+0xd4>
   23c38:	0005883a 	mov	r2,zero
   23c3c:	dfc00217 	ldw	ra,8(sp)
   23c40:	dc400117 	ldw	r17,4(sp)
   23c44:	dc000017 	ldw	r16,0(sp)
   23c48:	dec00304 	addi	sp,sp,12
   23c4c:	f800283a 	ret
   23c50:	2080040c 	andi	r2,r4,16
   23c54:	10002e26 	beq	r2,zero,23d10 <__swsetup_r+0x13c>
   23c58:	2080010c 	andi	r2,r4,4
   23c5c:	10001e1e 	bne	r2,zero,23cd8 <__swsetup_r+0x104>
   23c60:	80c00417 	ldw	r3,16(r16)
   23c64:	20800214 	ori	r2,r4,8
   23c68:	8080030d 	sth	r2,12(r16)
   23c6c:	183feb1e 	bne	r3,zero,23c1c <__alt_data_end+0xfffe3c1c>
   23c70:	1100a00c 	andi	r4,r2,640
   23c74:	01408004 	movi	r5,512
   23c78:	217fe826 	beq	r4,r5,23c1c <__alt_data_end+0xfffe3c1c>
   23c7c:	800b883a 	mov	r5,r16
   23c80:	8809883a 	mov	r4,r17
   23c84:	00262900 	call	26290 <__smakebuf_r>
   23c88:	8080030b 	ldhu	r2,12(r16)
   23c8c:	80c00417 	ldw	r3,16(r16)
   23c90:	003fe206 	br	23c1c <__alt_data_end+0xfffe3c1c>
   23c94:	80800517 	ldw	r2,20(r16)
   23c98:	80000215 	stw	zero,8(r16)
   23c9c:	0085c83a 	sub	r2,zero,r2
   23ca0:	80800615 	stw	r2,24(r16)
   23ca4:	183fe41e 	bne	r3,zero,23c38 <__alt_data_end+0xfffe3c38>
   23ca8:	80c0030b 	ldhu	r3,12(r16)
   23cac:	0005883a 	mov	r2,zero
   23cb0:	1900200c 	andi	r4,r3,128
   23cb4:	203fe126 	beq	r4,zero,23c3c <__alt_data_end+0xfffe3c3c>
   23cb8:	18c01014 	ori	r3,r3,64
   23cbc:	80c0030d 	sth	r3,12(r16)
   23cc0:	00bfffc4 	movi	r2,-1
   23cc4:	003fdd06 	br	23c3c <__alt_data_end+0xfffe3c3c>
   23cc8:	0025ba80 	call	25ba8 <__sinit>
   23ccc:	003fcd06 	br	23c04 <__alt_data_end+0xfffe3c04>
   23cd0:	0005883a 	mov	r2,zero
   23cd4:	003fd606 	br	23c30 <__alt_data_end+0xfffe3c30>
   23cd8:	81400c17 	ldw	r5,48(r16)
   23cdc:	28000626 	beq	r5,zero,23cf8 <__swsetup_r+0x124>
   23ce0:	80801004 	addi	r2,r16,64
   23ce4:	28800326 	beq	r5,r2,23cf4 <__swsetup_r+0x120>
   23ce8:	8809883a 	mov	r4,r17
   23cec:	0025d1c0 	call	25d1c <_free_r>
   23cf0:	8100030b 	ldhu	r4,12(r16)
   23cf4:	80000c15 	stw	zero,48(r16)
   23cf8:	80c00417 	ldw	r3,16(r16)
   23cfc:	00bff6c4 	movi	r2,-37
   23d00:	1108703a 	and	r4,r2,r4
   23d04:	80000115 	stw	zero,4(r16)
   23d08:	80c00015 	stw	r3,0(r16)
   23d0c:	003fd506 	br	23c64 <__alt_data_end+0xfffe3c64>
   23d10:	00800244 	movi	r2,9
   23d14:	88800015 	stw	r2,0(r17)
   23d18:	20801014 	ori	r2,r4,64
   23d1c:	8080030d 	sth	r2,12(r16)
   23d20:	00bfffc4 	movi	r2,-1
   23d24:	003fc506 	br	23c3c <__alt_data_end+0xfffe3c3c>

00023d28 <quorem>:
   23d28:	defff704 	addi	sp,sp,-36
   23d2c:	dc800215 	stw	r18,8(sp)
   23d30:	20800417 	ldw	r2,16(r4)
   23d34:	2c800417 	ldw	r18,16(r5)
   23d38:	dfc00815 	stw	ra,32(sp)
   23d3c:	ddc00715 	stw	r23,28(sp)
   23d40:	dd800615 	stw	r22,24(sp)
   23d44:	dd400515 	stw	r21,20(sp)
   23d48:	dd000415 	stw	r20,16(sp)
   23d4c:	dcc00315 	stw	r19,12(sp)
   23d50:	dc400115 	stw	r17,4(sp)
   23d54:	dc000015 	stw	r16,0(sp)
   23d58:	14807116 	blt	r2,r18,23f20 <quorem+0x1f8>
   23d5c:	94bfffc4 	addi	r18,r18,-1
   23d60:	94ad883a 	add	r22,r18,r18
   23d64:	b5ad883a 	add	r22,r22,r22
   23d68:	2c400504 	addi	r17,r5,20
   23d6c:	8da9883a 	add	r20,r17,r22
   23d70:	25400504 	addi	r21,r4,20
   23d74:	282f883a 	mov	r23,r5
   23d78:	adad883a 	add	r22,r21,r22
   23d7c:	a1400017 	ldw	r5,0(r20)
   23d80:	2021883a 	mov	r16,r4
   23d84:	b1000017 	ldw	r4,0(r22)
   23d88:	29400044 	addi	r5,r5,1
   23d8c:	00205600 	call	20560 <__udivsi3>
   23d90:	1027883a 	mov	r19,r2
   23d94:	10002c26 	beq	r2,zero,23e48 <quorem+0x120>
   23d98:	a813883a 	mov	r9,r21
   23d9c:	880b883a 	mov	r5,r17
   23da0:	0009883a 	mov	r4,zero
   23da4:	000d883a 	mov	r6,zero
   23da8:	2a000017 	ldw	r8,0(r5)
   23dac:	49c00017 	ldw	r7,0(r9)
   23db0:	29400104 	addi	r5,r5,4
   23db4:	40bfffcc 	andi	r2,r8,65535
   23db8:	14c5383a 	mul	r2,r2,r19
   23dbc:	4010d43a 	srli	r8,r8,16
   23dc0:	38ffffcc 	andi	r3,r7,65535
   23dc4:	1105883a 	add	r2,r2,r4
   23dc8:	1008d43a 	srli	r4,r2,16
   23dcc:	44d1383a 	mul	r8,r8,r19
   23dd0:	198d883a 	add	r6,r3,r6
   23dd4:	10ffffcc 	andi	r3,r2,65535
   23dd8:	30c7c83a 	sub	r3,r6,r3
   23ddc:	380ed43a 	srli	r7,r7,16
   23de0:	4105883a 	add	r2,r8,r4
   23de4:	180dd43a 	srai	r6,r3,16
   23de8:	113fffcc 	andi	r4,r2,65535
   23dec:	390fc83a 	sub	r7,r7,r4
   23df0:	398d883a 	add	r6,r7,r6
   23df4:	300e943a 	slli	r7,r6,16
   23df8:	18ffffcc 	andi	r3,r3,65535
   23dfc:	1008d43a 	srli	r4,r2,16
   23e00:	38ceb03a 	or	r7,r7,r3
   23e04:	49c00015 	stw	r7,0(r9)
   23e08:	300dd43a 	srai	r6,r6,16
   23e0c:	4a400104 	addi	r9,r9,4
   23e10:	a17fe52e 	bgeu	r20,r5,23da8 <__alt_data_end+0xfffe3da8>
   23e14:	b0800017 	ldw	r2,0(r22)
   23e18:	10000b1e 	bne	r2,zero,23e48 <quorem+0x120>
   23e1c:	b0bfff04 	addi	r2,r22,-4
   23e20:	a880082e 	bgeu	r21,r2,23e44 <quorem+0x11c>
   23e24:	b0ffff17 	ldw	r3,-4(r22)
   23e28:	18000326 	beq	r3,zero,23e38 <quorem+0x110>
   23e2c:	00000506 	br	23e44 <quorem+0x11c>
   23e30:	10c00017 	ldw	r3,0(r2)
   23e34:	1800031e 	bne	r3,zero,23e44 <quorem+0x11c>
   23e38:	10bfff04 	addi	r2,r2,-4
   23e3c:	94bfffc4 	addi	r18,r18,-1
   23e40:	a8bffb36 	bltu	r21,r2,23e30 <__alt_data_end+0xfffe3e30>
   23e44:	84800415 	stw	r18,16(r16)
   23e48:	b80b883a 	mov	r5,r23
   23e4c:	8009883a 	mov	r4,r16
   23e50:	00278740 	call	27874 <__mcmp>
   23e54:	10002616 	blt	r2,zero,23ef0 <quorem+0x1c8>
   23e58:	9cc00044 	addi	r19,r19,1
   23e5c:	a805883a 	mov	r2,r21
   23e60:	000b883a 	mov	r5,zero
   23e64:	11000017 	ldw	r4,0(r2)
   23e68:	89800017 	ldw	r6,0(r17)
   23e6c:	10800104 	addi	r2,r2,4
   23e70:	20ffffcc 	andi	r3,r4,65535
   23e74:	194b883a 	add	r5,r3,r5
   23e78:	30ffffcc 	andi	r3,r6,65535
   23e7c:	28c7c83a 	sub	r3,r5,r3
   23e80:	300cd43a 	srli	r6,r6,16
   23e84:	2008d43a 	srli	r4,r4,16
   23e88:	180bd43a 	srai	r5,r3,16
   23e8c:	18ffffcc 	andi	r3,r3,65535
   23e90:	2189c83a 	sub	r4,r4,r6
   23e94:	2149883a 	add	r4,r4,r5
   23e98:	200c943a 	slli	r6,r4,16
   23e9c:	8c400104 	addi	r17,r17,4
   23ea0:	200bd43a 	srai	r5,r4,16
   23ea4:	30c6b03a 	or	r3,r6,r3
   23ea8:	10ffff15 	stw	r3,-4(r2)
   23eac:	a47fed2e 	bgeu	r20,r17,23e64 <__alt_data_end+0xfffe3e64>
   23eb0:	9485883a 	add	r2,r18,r18
   23eb4:	1085883a 	add	r2,r2,r2
   23eb8:	a887883a 	add	r3,r21,r2
   23ebc:	18800017 	ldw	r2,0(r3)
   23ec0:	10000b1e 	bne	r2,zero,23ef0 <quorem+0x1c8>
   23ec4:	18bfff04 	addi	r2,r3,-4
   23ec8:	a880082e 	bgeu	r21,r2,23eec <quorem+0x1c4>
   23ecc:	18ffff17 	ldw	r3,-4(r3)
   23ed0:	18000326 	beq	r3,zero,23ee0 <quorem+0x1b8>
   23ed4:	00000506 	br	23eec <quorem+0x1c4>
   23ed8:	10c00017 	ldw	r3,0(r2)
   23edc:	1800031e 	bne	r3,zero,23eec <quorem+0x1c4>
   23ee0:	10bfff04 	addi	r2,r2,-4
   23ee4:	94bfffc4 	addi	r18,r18,-1
   23ee8:	a8bffb36 	bltu	r21,r2,23ed8 <__alt_data_end+0xfffe3ed8>
   23eec:	84800415 	stw	r18,16(r16)
   23ef0:	9805883a 	mov	r2,r19
   23ef4:	dfc00817 	ldw	ra,32(sp)
   23ef8:	ddc00717 	ldw	r23,28(sp)
   23efc:	dd800617 	ldw	r22,24(sp)
   23f00:	dd400517 	ldw	r21,20(sp)
   23f04:	dd000417 	ldw	r20,16(sp)
   23f08:	dcc00317 	ldw	r19,12(sp)
   23f0c:	dc800217 	ldw	r18,8(sp)
   23f10:	dc400117 	ldw	r17,4(sp)
   23f14:	dc000017 	ldw	r16,0(sp)
   23f18:	dec00904 	addi	sp,sp,36
   23f1c:	f800283a 	ret
   23f20:	0005883a 	mov	r2,zero
   23f24:	003ff306 	br	23ef4 <__alt_data_end+0xfffe3ef4>

00023f28 <_dtoa_r>:
   23f28:	20801017 	ldw	r2,64(r4)
   23f2c:	deffde04 	addi	sp,sp,-136
   23f30:	df002015 	stw	fp,128(sp)
   23f34:	dcc01b15 	stw	r19,108(sp)
   23f38:	dc801a15 	stw	r18,104(sp)
   23f3c:	dc401915 	stw	r17,100(sp)
   23f40:	dc001815 	stw	r16,96(sp)
   23f44:	dfc02115 	stw	ra,132(sp)
   23f48:	ddc01f15 	stw	r23,124(sp)
   23f4c:	dd801e15 	stw	r22,120(sp)
   23f50:	dd401d15 	stw	r21,116(sp)
   23f54:	dd001c15 	stw	r20,112(sp)
   23f58:	d9c00315 	stw	r7,12(sp)
   23f5c:	2039883a 	mov	fp,r4
   23f60:	3023883a 	mov	r17,r6
   23f64:	2825883a 	mov	r18,r5
   23f68:	dc002417 	ldw	r16,144(sp)
   23f6c:	3027883a 	mov	r19,r6
   23f70:	10000826 	beq	r2,zero,23f94 <_dtoa_r+0x6c>
   23f74:	21801117 	ldw	r6,68(r4)
   23f78:	00c00044 	movi	r3,1
   23f7c:	100b883a 	mov	r5,r2
   23f80:	1986983a 	sll	r3,r3,r6
   23f84:	11800115 	stw	r6,4(r2)
   23f88:	10c00215 	stw	r3,8(r2)
   23f8c:	00270540 	call	27054 <_Bfree>
   23f90:	e0001015 	stw	zero,64(fp)
   23f94:	88002e16 	blt	r17,zero,24050 <_dtoa_r+0x128>
   23f98:	80000015 	stw	zero,0(r16)
   23f9c:	889ffc2c 	andhi	r2,r17,32752
   23fa0:	00dffc34 	movhi	r3,32752
   23fa4:	10c01c26 	beq	r2,r3,24018 <_dtoa_r+0xf0>
   23fa8:	000d883a 	mov	r6,zero
   23fac:	000f883a 	mov	r7,zero
   23fb0:	9009883a 	mov	r4,r18
   23fb4:	980b883a 	mov	r5,r19
   23fb8:	002ca5c0 	call	2ca5c <__eqdf2>
   23fbc:	10002b1e 	bne	r2,zero,2406c <_dtoa_r+0x144>
   23fc0:	d9c02317 	ldw	r7,140(sp)
   23fc4:	00800044 	movi	r2,1
   23fc8:	38800015 	stw	r2,0(r7)
   23fcc:	d8802517 	ldw	r2,148(sp)
   23fd0:	10019e26 	beq	r2,zero,2464c <_dtoa_r+0x724>
   23fd4:	d8c02517 	ldw	r3,148(sp)
   23fd8:	008000f4 	movhi	r2,3
   23fdc:	10bd2644 	addi	r2,r2,-2919
   23fe0:	18800015 	stw	r2,0(r3)
   23fe4:	10bfffc4 	addi	r2,r2,-1
   23fe8:	dfc02117 	ldw	ra,132(sp)
   23fec:	df002017 	ldw	fp,128(sp)
   23ff0:	ddc01f17 	ldw	r23,124(sp)
   23ff4:	dd801e17 	ldw	r22,120(sp)
   23ff8:	dd401d17 	ldw	r21,116(sp)
   23ffc:	dd001c17 	ldw	r20,112(sp)
   24000:	dcc01b17 	ldw	r19,108(sp)
   24004:	dc801a17 	ldw	r18,104(sp)
   24008:	dc401917 	ldw	r17,100(sp)
   2400c:	dc001817 	ldw	r16,96(sp)
   24010:	dec02204 	addi	sp,sp,136
   24014:	f800283a 	ret
   24018:	d8c02317 	ldw	r3,140(sp)
   2401c:	0089c3c4 	movi	r2,9999
   24020:	18800015 	stw	r2,0(r3)
   24024:	90017726 	beq	r18,zero,24604 <_dtoa_r+0x6dc>
   24028:	008000f4 	movhi	r2,3
   2402c:	10bd3204 	addi	r2,r2,-2872
   24030:	d9002517 	ldw	r4,148(sp)
   24034:	203fec26 	beq	r4,zero,23fe8 <__alt_data_end+0xfffe3fe8>
   24038:	10c000c7 	ldb	r3,3(r2)
   2403c:	1801781e 	bne	r3,zero,24620 <_dtoa_r+0x6f8>
   24040:	10c000c4 	addi	r3,r2,3
   24044:	d9802517 	ldw	r6,148(sp)
   24048:	30c00015 	stw	r3,0(r6)
   2404c:	003fe606 	br	23fe8 <__alt_data_end+0xfffe3fe8>
   24050:	04e00034 	movhi	r19,32768
   24054:	9cffffc4 	addi	r19,r19,-1
   24058:	00800044 	movi	r2,1
   2405c:	8ce6703a 	and	r19,r17,r19
   24060:	80800015 	stw	r2,0(r16)
   24064:	9823883a 	mov	r17,r19
   24068:	003fcc06 	br	23f9c <__alt_data_end+0xfffe3f9c>
   2406c:	d8800204 	addi	r2,sp,8
   24070:	d8800015 	stw	r2,0(sp)
   24074:	d9c00104 	addi	r7,sp,4
   24078:	900b883a 	mov	r5,r18
   2407c:	980d883a 	mov	r6,r19
   24080:	e009883a 	mov	r4,fp
   24084:	8820d53a 	srli	r16,r17,20
   24088:	0027c400 	call	27c40 <__d2b>
   2408c:	d8800915 	stw	r2,36(sp)
   24090:	8001651e 	bne	r16,zero,24628 <_dtoa_r+0x700>
   24094:	dd800217 	ldw	r22,8(sp)
   24098:	dc000117 	ldw	r16,4(sp)
   2409c:	00800804 	movi	r2,32
   240a0:	b421883a 	add	r16,r22,r16
   240a4:	80c10c84 	addi	r3,r16,1074
   240a8:	10c2d10e 	bge	r2,r3,24bf0 <_dtoa_r+0xcc8>
   240ac:	00801004 	movi	r2,64
   240b0:	81010484 	addi	r4,r16,1042
   240b4:	10c7c83a 	sub	r3,r2,r3
   240b8:	9108d83a 	srl	r4,r18,r4
   240bc:	88e2983a 	sll	r17,r17,r3
   240c0:	2448b03a 	or	r4,r4,r17
   240c4:	002178c0 	call	2178c <__floatunsidf>
   240c8:	017f8434 	movhi	r5,65040
   240cc:	01800044 	movi	r6,1
   240d0:	1009883a 	mov	r4,r2
   240d4:	194b883a 	add	r5,r3,r5
   240d8:	843fffc4 	addi	r16,r16,-1
   240dc:	d9801115 	stw	r6,68(sp)
   240e0:	000d883a 	mov	r6,zero
   240e4:	01cffe34 	movhi	r7,16376
   240e8:	0020e100 	call	20e10 <__subdf3>
   240ec:	0198dbf4 	movhi	r6,25455
   240f0:	01cff4f4 	movhi	r7,16339
   240f4:	3190d844 	addi	r6,r6,17249
   240f8:	39e1e9c4 	addi	r7,r7,-30809
   240fc:	1009883a 	mov	r4,r2
   24100:	180b883a 	mov	r5,r3
   24104:	00206f80 	call	206f8 <__muldf3>
   24108:	01a2d874 	movhi	r6,35681
   2410c:	01cff1f4 	movhi	r7,16327
   24110:	31b22cc4 	addi	r6,r6,-14157
   24114:	39e28a04 	addi	r7,r7,-30168
   24118:	180b883a 	mov	r5,r3
   2411c:	1009883a 	mov	r4,r2
   24120:	002b8c80 	call	2b8c8 <__adddf3>
   24124:	8009883a 	mov	r4,r16
   24128:	1029883a 	mov	r20,r2
   2412c:	1823883a 	mov	r17,r3
   24130:	002cbd80 	call	2cbd8 <__floatsidf>
   24134:	019427f4 	movhi	r6,20639
   24138:	01cff4f4 	movhi	r7,16339
   2413c:	319e7ec4 	addi	r6,r6,31227
   24140:	39d104c4 	addi	r7,r7,17427
   24144:	1009883a 	mov	r4,r2
   24148:	180b883a 	mov	r5,r3
   2414c:	00206f80 	call	206f8 <__muldf3>
   24150:	100d883a 	mov	r6,r2
   24154:	180f883a 	mov	r7,r3
   24158:	a009883a 	mov	r4,r20
   2415c:	880b883a 	mov	r5,r17
   24160:	002b8c80 	call	2b8c8 <__adddf3>
   24164:	1009883a 	mov	r4,r2
   24168:	180b883a 	mov	r5,r3
   2416c:	1029883a 	mov	r20,r2
   24170:	1823883a 	mov	r17,r3
   24174:	002170c0 	call	2170c <__fixdfsi>
   24178:	000d883a 	mov	r6,zero
   2417c:	000f883a 	mov	r7,zero
   24180:	a009883a 	mov	r4,r20
   24184:	880b883a 	mov	r5,r17
   24188:	d8800515 	stw	r2,20(sp)
   2418c:	002cae40 	call	2cae4 <__ledf2>
   24190:	10028716 	blt	r2,zero,24bb0 <_dtoa_r+0xc88>
   24194:	d8c00517 	ldw	r3,20(sp)
   24198:	00800584 	movi	r2,22
   2419c:	10c27536 	bltu	r2,r3,24b74 <_dtoa_r+0xc4c>
   241a0:	180490fa 	slli	r2,r3,3
   241a4:	00c000f4 	movhi	r3,3
   241a8:	18fd4e04 	addi	r3,r3,-2760
   241ac:	1885883a 	add	r2,r3,r2
   241b0:	11000017 	ldw	r4,0(r2)
   241b4:	11400117 	ldw	r5,4(r2)
   241b8:	900d883a 	mov	r6,r18
   241bc:	980f883a 	mov	r7,r19
   241c0:	002061c0 	call	2061c <__gedf2>
   241c4:	00828d0e 	bge	zero,r2,24bfc <_dtoa_r+0xcd4>
   241c8:	d9000517 	ldw	r4,20(sp)
   241cc:	d8000e15 	stw	zero,56(sp)
   241d0:	213fffc4 	addi	r4,r4,-1
   241d4:	d9000515 	stw	r4,20(sp)
   241d8:	b42dc83a 	sub	r22,r22,r16
   241dc:	b5bfffc4 	addi	r22,r22,-1
   241e0:	b0026f16 	blt	r22,zero,24ba0 <_dtoa_r+0xc78>
   241e4:	d8000815 	stw	zero,32(sp)
   241e8:	d9c00517 	ldw	r7,20(sp)
   241ec:	38026416 	blt	r7,zero,24b80 <_dtoa_r+0xc58>
   241f0:	b1ed883a 	add	r22,r22,r7
   241f4:	d9c00d15 	stw	r7,52(sp)
   241f8:	d8000a15 	stw	zero,40(sp)
   241fc:	d9800317 	ldw	r6,12(sp)
   24200:	00800244 	movi	r2,9
   24204:	11811436 	bltu	r2,r6,24658 <_dtoa_r+0x730>
   24208:	00800144 	movi	r2,5
   2420c:	1184e10e 	bge	r2,r6,25594 <_dtoa_r+0x166c>
   24210:	31bfff04 	addi	r6,r6,-4
   24214:	d9800315 	stw	r6,12(sp)
   24218:	0023883a 	mov	r17,zero
   2421c:	d9800317 	ldw	r6,12(sp)
   24220:	008000c4 	movi	r2,3
   24224:	30836726 	beq	r6,r2,24fc4 <_dtoa_r+0x109c>
   24228:	1183410e 	bge	r2,r6,24f30 <_dtoa_r+0x1008>
   2422c:	d9c00317 	ldw	r7,12(sp)
   24230:	00800104 	movi	r2,4
   24234:	38827c26 	beq	r7,r2,24c28 <_dtoa_r+0xd00>
   24238:	00800144 	movi	r2,5
   2423c:	3884c41e 	bne	r7,r2,25550 <_dtoa_r+0x1628>
   24240:	00800044 	movi	r2,1
   24244:	d8800b15 	stw	r2,44(sp)
   24248:	d8c00517 	ldw	r3,20(sp)
   2424c:	d9002217 	ldw	r4,136(sp)
   24250:	1907883a 	add	r3,r3,r4
   24254:	19800044 	addi	r6,r3,1
   24258:	d8c00c15 	stw	r3,48(sp)
   2425c:	d9800615 	stw	r6,24(sp)
   24260:	0183a40e 	bge	zero,r6,250f4 <_dtoa_r+0x11cc>
   24264:	d9800617 	ldw	r6,24(sp)
   24268:	3021883a 	mov	r16,r6
   2426c:	e0001115 	stw	zero,68(fp)
   24270:	008005c4 	movi	r2,23
   24274:	1184c92e 	bgeu	r2,r6,2559c <_dtoa_r+0x1674>
   24278:	00c00044 	movi	r3,1
   2427c:	00800104 	movi	r2,4
   24280:	1085883a 	add	r2,r2,r2
   24284:	11000504 	addi	r4,r2,20
   24288:	180b883a 	mov	r5,r3
   2428c:	18c00044 	addi	r3,r3,1
   24290:	313ffb2e 	bgeu	r6,r4,24280 <__alt_data_end+0xfffe4280>
   24294:	e1401115 	stw	r5,68(fp)
   24298:	e009883a 	mov	r4,fp
   2429c:	0026fac0 	call	26fac <_Balloc>
   242a0:	d8800715 	stw	r2,28(sp)
   242a4:	e0801015 	stw	r2,64(fp)
   242a8:	00800384 	movi	r2,14
   242ac:	1400f736 	bltu	r2,r16,2468c <_dtoa_r+0x764>
   242b0:	8800f626 	beq	r17,zero,2468c <_dtoa_r+0x764>
   242b4:	d9c00517 	ldw	r7,20(sp)
   242b8:	01c39a0e 	bge	zero,r7,25124 <_dtoa_r+0x11fc>
   242bc:	388003cc 	andi	r2,r7,15
   242c0:	100490fa 	slli	r2,r2,3
   242c4:	382bd13a 	srai	r21,r7,4
   242c8:	00c000f4 	movhi	r3,3
   242cc:	18fd4e04 	addi	r3,r3,-2760
   242d0:	1885883a 	add	r2,r3,r2
   242d4:	a8c0040c 	andi	r3,r21,16
   242d8:	12400017 	ldw	r9,0(r2)
   242dc:	12000117 	ldw	r8,4(r2)
   242e0:	18037926 	beq	r3,zero,250c8 <_dtoa_r+0x11a0>
   242e4:	008000f4 	movhi	r2,3
   242e8:	10bd4404 	addi	r2,r2,-2800
   242ec:	11800817 	ldw	r6,32(r2)
   242f0:	11c00917 	ldw	r7,36(r2)
   242f4:	9009883a 	mov	r4,r18
   242f8:	980b883a 	mov	r5,r19
   242fc:	da001715 	stw	r8,92(sp)
   24300:	da401615 	stw	r9,88(sp)
   24304:	002c1740 	call	2c174 <__divdf3>
   24308:	da001717 	ldw	r8,92(sp)
   2430c:	da401617 	ldw	r9,88(sp)
   24310:	ad4003cc 	andi	r21,r21,15
   24314:	040000c4 	movi	r16,3
   24318:	1023883a 	mov	r17,r2
   2431c:	1829883a 	mov	r20,r3
   24320:	a8001126 	beq	r21,zero,24368 <_dtoa_r+0x440>
   24324:	05c000f4 	movhi	r23,3
   24328:	bdfd4404 	addi	r23,r23,-2800
   2432c:	4805883a 	mov	r2,r9
   24330:	4007883a 	mov	r3,r8
   24334:	a980004c 	andi	r6,r21,1
   24338:	1009883a 	mov	r4,r2
   2433c:	a82bd07a 	srai	r21,r21,1
   24340:	180b883a 	mov	r5,r3
   24344:	30000426 	beq	r6,zero,24358 <_dtoa_r+0x430>
   24348:	b9800017 	ldw	r6,0(r23)
   2434c:	b9c00117 	ldw	r7,4(r23)
   24350:	84000044 	addi	r16,r16,1
   24354:	00206f80 	call	206f8 <__muldf3>
   24358:	bdc00204 	addi	r23,r23,8
   2435c:	a83ff51e 	bne	r21,zero,24334 <__alt_data_end+0xfffe4334>
   24360:	1013883a 	mov	r9,r2
   24364:	1811883a 	mov	r8,r3
   24368:	480d883a 	mov	r6,r9
   2436c:	400f883a 	mov	r7,r8
   24370:	8809883a 	mov	r4,r17
   24374:	a00b883a 	mov	r5,r20
   24378:	002c1740 	call	2c174 <__divdf3>
   2437c:	d8800f15 	stw	r2,60(sp)
   24380:	d8c01015 	stw	r3,64(sp)
   24384:	d8c00e17 	ldw	r3,56(sp)
   24388:	18000626 	beq	r3,zero,243a4 <_dtoa_r+0x47c>
   2438c:	d9000f17 	ldw	r4,60(sp)
   24390:	d9401017 	ldw	r5,64(sp)
   24394:	000d883a 	mov	r6,zero
   24398:	01cffc34 	movhi	r7,16368
   2439c:	002cae40 	call	2cae4 <__ledf2>
   243a0:	10040b16 	blt	r2,zero,253d0 <_dtoa_r+0x14a8>
   243a4:	8009883a 	mov	r4,r16
   243a8:	002cbd80 	call	2cbd8 <__floatsidf>
   243ac:	d9800f17 	ldw	r6,60(sp)
   243b0:	d9c01017 	ldw	r7,64(sp)
   243b4:	1009883a 	mov	r4,r2
   243b8:	180b883a 	mov	r5,r3
   243bc:	00206f80 	call	206f8 <__muldf3>
   243c0:	000d883a 	mov	r6,zero
   243c4:	01d00734 	movhi	r7,16412
   243c8:	1009883a 	mov	r4,r2
   243cc:	180b883a 	mov	r5,r3
   243d0:	002b8c80 	call	2b8c8 <__adddf3>
   243d4:	1021883a 	mov	r16,r2
   243d8:	d8800617 	ldw	r2,24(sp)
   243dc:	047f3034 	movhi	r17,64704
   243e0:	1c63883a 	add	r17,r3,r17
   243e4:	10031826 	beq	r2,zero,25048 <_dtoa_r+0x1120>
   243e8:	d8c00517 	ldw	r3,20(sp)
   243ec:	db000617 	ldw	r12,24(sp)
   243f0:	d8c01315 	stw	r3,76(sp)
   243f4:	d9000b17 	ldw	r4,44(sp)
   243f8:	20038f26 	beq	r4,zero,25238 <_dtoa_r+0x1310>
   243fc:	60bfffc4 	addi	r2,r12,-1
   24400:	100490fa 	slli	r2,r2,3
   24404:	00c000f4 	movhi	r3,3
   24408:	18fd4e04 	addi	r3,r3,-2760
   2440c:	1885883a 	add	r2,r3,r2
   24410:	11800017 	ldw	r6,0(r2)
   24414:	11c00117 	ldw	r7,4(r2)
   24418:	d8800717 	ldw	r2,28(sp)
   2441c:	0009883a 	mov	r4,zero
   24420:	014ff834 	movhi	r5,16352
   24424:	db001615 	stw	r12,88(sp)
   24428:	15c00044 	addi	r23,r2,1
   2442c:	002c1740 	call	2c174 <__divdf3>
   24430:	800d883a 	mov	r6,r16
   24434:	880f883a 	mov	r7,r17
   24438:	1009883a 	mov	r4,r2
   2443c:	180b883a 	mov	r5,r3
   24440:	0020e100 	call	20e10 <__subdf3>
   24444:	d9401017 	ldw	r5,64(sp)
   24448:	d9000f17 	ldw	r4,60(sp)
   2444c:	102b883a 	mov	r21,r2
   24450:	d8c01215 	stw	r3,72(sp)
   24454:	002170c0 	call	2170c <__fixdfsi>
   24458:	1009883a 	mov	r4,r2
   2445c:	1029883a 	mov	r20,r2
   24460:	002cbd80 	call	2cbd8 <__floatsidf>
   24464:	d9000f17 	ldw	r4,60(sp)
   24468:	d9401017 	ldw	r5,64(sp)
   2446c:	100d883a 	mov	r6,r2
   24470:	180f883a 	mov	r7,r3
   24474:	0020e100 	call	20e10 <__subdf3>
   24478:	1823883a 	mov	r17,r3
   2447c:	d8c00717 	ldw	r3,28(sp)
   24480:	d9401217 	ldw	r5,72(sp)
   24484:	a2000c04 	addi	r8,r20,48
   24488:	1021883a 	mov	r16,r2
   2448c:	1a000005 	stb	r8,0(r3)
   24490:	800d883a 	mov	r6,r16
   24494:	880f883a 	mov	r7,r17
   24498:	a809883a 	mov	r4,r21
   2449c:	4029883a 	mov	r20,r8
   244a0:	002061c0 	call	2061c <__gedf2>
   244a4:	00841d16 	blt	zero,r2,2551c <_dtoa_r+0x15f4>
   244a8:	800d883a 	mov	r6,r16
   244ac:	880f883a 	mov	r7,r17
   244b0:	0009883a 	mov	r4,zero
   244b4:	014ffc34 	movhi	r5,16368
   244b8:	0020e100 	call	20e10 <__subdf3>
   244bc:	d9401217 	ldw	r5,72(sp)
   244c0:	100d883a 	mov	r6,r2
   244c4:	180f883a 	mov	r7,r3
   244c8:	a809883a 	mov	r4,r21
   244cc:	002061c0 	call	2061c <__gedf2>
   244d0:	db001617 	ldw	r12,88(sp)
   244d4:	00840e16 	blt	zero,r2,25510 <_dtoa_r+0x15e8>
   244d8:	00800044 	movi	r2,1
   244dc:	13006b0e 	bge	r2,r12,2468c <_dtoa_r+0x764>
   244e0:	d9000717 	ldw	r4,28(sp)
   244e4:	dd800f15 	stw	r22,60(sp)
   244e8:	dcc01015 	stw	r19,64(sp)
   244ec:	2319883a 	add	r12,r4,r12
   244f0:	dcc01217 	ldw	r19,72(sp)
   244f4:	602d883a 	mov	r22,r12
   244f8:	dc801215 	stw	r18,72(sp)
   244fc:	b825883a 	mov	r18,r23
   24500:	00000906 	br	24528 <_dtoa_r+0x600>
   24504:	0020e100 	call	20e10 <__subdf3>
   24508:	a80d883a 	mov	r6,r21
   2450c:	980f883a 	mov	r7,r19
   24510:	1009883a 	mov	r4,r2
   24514:	180b883a 	mov	r5,r3
   24518:	002cae40 	call	2cae4 <__ledf2>
   2451c:	1003e816 	blt	r2,zero,254c0 <_dtoa_r+0x1598>
   24520:	b825883a 	mov	r18,r23
   24524:	bd83e926 	beq	r23,r22,254cc <_dtoa_r+0x15a4>
   24528:	a809883a 	mov	r4,r21
   2452c:	980b883a 	mov	r5,r19
   24530:	000d883a 	mov	r6,zero
   24534:	01d00934 	movhi	r7,16420
   24538:	00206f80 	call	206f8 <__muldf3>
   2453c:	000d883a 	mov	r6,zero
   24540:	01d00934 	movhi	r7,16420
   24544:	8009883a 	mov	r4,r16
   24548:	880b883a 	mov	r5,r17
   2454c:	102b883a 	mov	r21,r2
   24550:	1827883a 	mov	r19,r3
   24554:	00206f80 	call	206f8 <__muldf3>
   24558:	180b883a 	mov	r5,r3
   2455c:	1009883a 	mov	r4,r2
   24560:	1821883a 	mov	r16,r3
   24564:	1023883a 	mov	r17,r2
   24568:	002170c0 	call	2170c <__fixdfsi>
   2456c:	1009883a 	mov	r4,r2
   24570:	1029883a 	mov	r20,r2
   24574:	002cbd80 	call	2cbd8 <__floatsidf>
   24578:	8809883a 	mov	r4,r17
   2457c:	800b883a 	mov	r5,r16
   24580:	100d883a 	mov	r6,r2
   24584:	180f883a 	mov	r7,r3
   24588:	0020e100 	call	20e10 <__subdf3>
   2458c:	a5000c04 	addi	r20,r20,48
   24590:	a80d883a 	mov	r6,r21
   24594:	980f883a 	mov	r7,r19
   24598:	1009883a 	mov	r4,r2
   2459c:	180b883a 	mov	r5,r3
   245a0:	95000005 	stb	r20,0(r18)
   245a4:	1021883a 	mov	r16,r2
   245a8:	1823883a 	mov	r17,r3
   245ac:	002cae40 	call	2cae4 <__ledf2>
   245b0:	bdc00044 	addi	r23,r23,1
   245b4:	800d883a 	mov	r6,r16
   245b8:	880f883a 	mov	r7,r17
   245bc:	0009883a 	mov	r4,zero
   245c0:	014ffc34 	movhi	r5,16368
   245c4:	103fcf0e 	bge	r2,zero,24504 <__alt_data_end+0xfffe4504>
   245c8:	d8c01317 	ldw	r3,76(sp)
   245cc:	d8c00515 	stw	r3,20(sp)
   245d0:	d9400917 	ldw	r5,36(sp)
   245d4:	e009883a 	mov	r4,fp
   245d8:	00270540 	call	27054 <_Bfree>
   245dc:	d9000517 	ldw	r4,20(sp)
   245e0:	d9802317 	ldw	r6,140(sp)
   245e4:	d9c02517 	ldw	r7,148(sp)
   245e8:	b8000005 	stb	zero,0(r23)
   245ec:	20800044 	addi	r2,r4,1
   245f0:	30800015 	stw	r2,0(r6)
   245f4:	3802aa26 	beq	r7,zero,250a0 <_dtoa_r+0x1178>
   245f8:	3dc00015 	stw	r23,0(r7)
   245fc:	d8800717 	ldw	r2,28(sp)
   24600:	003e7906 	br	23fe8 <__alt_data_end+0xfffe3fe8>
   24604:	00800434 	movhi	r2,16
   24608:	10bfffc4 	addi	r2,r2,-1
   2460c:	88a2703a 	and	r17,r17,r2
   24610:	883e851e 	bne	r17,zero,24028 <__alt_data_end+0xfffe4028>
   24614:	008000f4 	movhi	r2,3
   24618:	10bd2f04 	addi	r2,r2,-2884
   2461c:	003e8406 	br	24030 <__alt_data_end+0xfffe4030>
   24620:	10c00204 	addi	r3,r2,8
   24624:	003e8706 	br	24044 <__alt_data_end+0xfffe4044>
   24628:	01400434 	movhi	r5,16
   2462c:	297fffc4 	addi	r5,r5,-1
   24630:	994a703a 	and	r5,r19,r5
   24634:	9009883a 	mov	r4,r18
   24638:	843f0044 	addi	r16,r16,-1023
   2463c:	294ffc34 	orhi	r5,r5,16368
   24640:	dd800217 	ldw	r22,8(sp)
   24644:	d8001115 	stw	zero,68(sp)
   24648:	003ea506 	br	240e0 <__alt_data_end+0xfffe40e0>
   2464c:	008000f4 	movhi	r2,3
   24650:	10bd2604 	addi	r2,r2,-2920
   24654:	003e6406 	br	23fe8 <__alt_data_end+0xfffe3fe8>
   24658:	e0001115 	stw	zero,68(fp)
   2465c:	000b883a 	mov	r5,zero
   24660:	e009883a 	mov	r4,fp
   24664:	0026fac0 	call	26fac <_Balloc>
   24668:	01bfffc4 	movi	r6,-1
   2466c:	01c00044 	movi	r7,1
   24670:	d8800715 	stw	r2,28(sp)
   24674:	d9800c15 	stw	r6,48(sp)
   24678:	e0801015 	stw	r2,64(fp)
   2467c:	d8000315 	stw	zero,12(sp)
   24680:	d9c00b15 	stw	r7,44(sp)
   24684:	d9800615 	stw	r6,24(sp)
   24688:	d8002215 	stw	zero,136(sp)
   2468c:	d8800117 	ldw	r2,4(sp)
   24690:	10008916 	blt	r2,zero,248b8 <_dtoa_r+0x990>
   24694:	d9000517 	ldw	r4,20(sp)
   24698:	00c00384 	movi	r3,14
   2469c:	19008616 	blt	r3,r4,248b8 <_dtoa_r+0x990>
   246a0:	200490fa 	slli	r2,r4,3
   246a4:	00c000f4 	movhi	r3,3
   246a8:	d9802217 	ldw	r6,136(sp)
   246ac:	18fd4e04 	addi	r3,r3,-2760
   246b0:	1885883a 	add	r2,r3,r2
   246b4:	14000017 	ldw	r16,0(r2)
   246b8:	14400117 	ldw	r17,4(r2)
   246bc:	30016316 	blt	r6,zero,24c4c <_dtoa_r+0xd24>
   246c0:	800d883a 	mov	r6,r16
   246c4:	880f883a 	mov	r7,r17
   246c8:	9009883a 	mov	r4,r18
   246cc:	980b883a 	mov	r5,r19
   246d0:	002c1740 	call	2c174 <__divdf3>
   246d4:	180b883a 	mov	r5,r3
   246d8:	1009883a 	mov	r4,r2
   246dc:	002170c0 	call	2170c <__fixdfsi>
   246e0:	1009883a 	mov	r4,r2
   246e4:	102b883a 	mov	r21,r2
   246e8:	002cbd80 	call	2cbd8 <__floatsidf>
   246ec:	800d883a 	mov	r6,r16
   246f0:	880f883a 	mov	r7,r17
   246f4:	1009883a 	mov	r4,r2
   246f8:	180b883a 	mov	r5,r3
   246fc:	00206f80 	call	206f8 <__muldf3>
   24700:	100d883a 	mov	r6,r2
   24704:	180f883a 	mov	r7,r3
   24708:	9009883a 	mov	r4,r18
   2470c:	980b883a 	mov	r5,r19
   24710:	0020e100 	call	20e10 <__subdf3>
   24714:	d9c00717 	ldw	r7,28(sp)
   24718:	1009883a 	mov	r4,r2
   2471c:	a8800c04 	addi	r2,r21,48
   24720:	38800005 	stb	r2,0(r7)
   24724:	3dc00044 	addi	r23,r7,1
   24728:	d9c00617 	ldw	r7,24(sp)
   2472c:	01800044 	movi	r6,1
   24730:	180b883a 	mov	r5,r3
   24734:	2005883a 	mov	r2,r4
   24738:	39803826 	beq	r7,r6,2481c <_dtoa_r+0x8f4>
   2473c:	000d883a 	mov	r6,zero
   24740:	01d00934 	movhi	r7,16420
   24744:	00206f80 	call	206f8 <__muldf3>
   24748:	000d883a 	mov	r6,zero
   2474c:	000f883a 	mov	r7,zero
   24750:	1009883a 	mov	r4,r2
   24754:	180b883a 	mov	r5,r3
   24758:	1025883a 	mov	r18,r2
   2475c:	1827883a 	mov	r19,r3
   24760:	002ca5c0 	call	2ca5c <__eqdf2>
   24764:	103f9a26 	beq	r2,zero,245d0 <__alt_data_end+0xfffe45d0>
   24768:	d9c00617 	ldw	r7,24(sp)
   2476c:	d8c00717 	ldw	r3,28(sp)
   24770:	b829883a 	mov	r20,r23
   24774:	38bfffc4 	addi	r2,r7,-1
   24778:	18ad883a 	add	r22,r3,r2
   2477c:	00000a06 	br	247a8 <_dtoa_r+0x880>
   24780:	00206f80 	call	206f8 <__muldf3>
   24784:	000d883a 	mov	r6,zero
   24788:	000f883a 	mov	r7,zero
   2478c:	1009883a 	mov	r4,r2
   24790:	180b883a 	mov	r5,r3
   24794:	1025883a 	mov	r18,r2
   24798:	1827883a 	mov	r19,r3
   2479c:	b829883a 	mov	r20,r23
   247a0:	002ca5c0 	call	2ca5c <__eqdf2>
   247a4:	103f8a26 	beq	r2,zero,245d0 <__alt_data_end+0xfffe45d0>
   247a8:	800d883a 	mov	r6,r16
   247ac:	880f883a 	mov	r7,r17
   247b0:	9009883a 	mov	r4,r18
   247b4:	980b883a 	mov	r5,r19
   247b8:	002c1740 	call	2c174 <__divdf3>
   247bc:	180b883a 	mov	r5,r3
   247c0:	1009883a 	mov	r4,r2
   247c4:	002170c0 	call	2170c <__fixdfsi>
   247c8:	1009883a 	mov	r4,r2
   247cc:	102b883a 	mov	r21,r2
   247d0:	002cbd80 	call	2cbd8 <__floatsidf>
   247d4:	800d883a 	mov	r6,r16
   247d8:	880f883a 	mov	r7,r17
   247dc:	1009883a 	mov	r4,r2
   247e0:	180b883a 	mov	r5,r3
   247e4:	00206f80 	call	206f8 <__muldf3>
   247e8:	100d883a 	mov	r6,r2
   247ec:	180f883a 	mov	r7,r3
   247f0:	9009883a 	mov	r4,r18
   247f4:	980b883a 	mov	r5,r19
   247f8:	0020e100 	call	20e10 <__subdf3>
   247fc:	aa000c04 	addi	r8,r21,48
   24800:	a2000005 	stb	r8,0(r20)
   24804:	000d883a 	mov	r6,zero
   24808:	01d00934 	movhi	r7,16420
   2480c:	1009883a 	mov	r4,r2
   24810:	180b883a 	mov	r5,r3
   24814:	a5c00044 	addi	r23,r20,1
   24818:	b53fd91e 	bne	r22,r20,24780 <__alt_data_end+0xfffe4780>
   2481c:	100d883a 	mov	r6,r2
   24820:	180f883a 	mov	r7,r3
   24824:	1009883a 	mov	r4,r2
   24828:	180b883a 	mov	r5,r3
   2482c:	002b8c80 	call	2b8c8 <__adddf3>
   24830:	100d883a 	mov	r6,r2
   24834:	180f883a 	mov	r7,r3
   24838:	8009883a 	mov	r4,r16
   2483c:	880b883a 	mov	r5,r17
   24840:	1027883a 	mov	r19,r2
   24844:	1825883a 	mov	r18,r3
   24848:	002cae40 	call	2cae4 <__ledf2>
   2484c:	10000816 	blt	r2,zero,24870 <_dtoa_r+0x948>
   24850:	980d883a 	mov	r6,r19
   24854:	900f883a 	mov	r7,r18
   24858:	8009883a 	mov	r4,r16
   2485c:	880b883a 	mov	r5,r17
   24860:	002ca5c0 	call	2ca5c <__eqdf2>
   24864:	103f5a1e 	bne	r2,zero,245d0 <__alt_data_end+0xfffe45d0>
   24868:	ad40004c 	andi	r21,r21,1
   2486c:	a83f5826 	beq	r21,zero,245d0 <__alt_data_end+0xfffe45d0>
   24870:	bd3fffc3 	ldbu	r20,-1(r23)
   24874:	b8bfffc4 	addi	r2,r23,-1
   24878:	1007883a 	mov	r3,r2
   2487c:	01400e44 	movi	r5,57
   24880:	d9800717 	ldw	r6,28(sp)
   24884:	00000506 	br	2489c <_dtoa_r+0x974>
   24888:	18ffffc4 	addi	r3,r3,-1
   2488c:	11824726 	beq	r2,r6,251ac <_dtoa_r+0x1284>
   24890:	1d000003 	ldbu	r20,0(r3)
   24894:	102f883a 	mov	r23,r2
   24898:	10bfffc4 	addi	r2,r2,-1
   2489c:	a1003fcc 	andi	r4,r20,255
   248a0:	2100201c 	xori	r4,r4,128
   248a4:	213fe004 	addi	r4,r4,-128
   248a8:	217ff726 	beq	r4,r5,24888 <__alt_data_end+0xfffe4888>
   248ac:	a2000044 	addi	r8,r20,1
   248b0:	12000005 	stb	r8,0(r2)
   248b4:	003f4606 	br	245d0 <__alt_data_end+0xfffe45d0>
   248b8:	d9000b17 	ldw	r4,44(sp)
   248bc:	2000c826 	beq	r4,zero,24be0 <_dtoa_r+0xcb8>
   248c0:	d9800317 	ldw	r6,12(sp)
   248c4:	00c00044 	movi	r3,1
   248c8:	1980f90e 	bge	r3,r6,24cb0 <_dtoa_r+0xd88>
   248cc:	d8800617 	ldw	r2,24(sp)
   248d0:	d8c00a17 	ldw	r3,40(sp)
   248d4:	157fffc4 	addi	r21,r2,-1
   248d8:	1d41f316 	blt	r3,r21,250a8 <_dtoa_r+0x1180>
   248dc:	1d6bc83a 	sub	r21,r3,r21
   248e0:	d9c00617 	ldw	r7,24(sp)
   248e4:	3802aa16 	blt	r7,zero,25390 <_dtoa_r+0x1468>
   248e8:	dd000817 	ldw	r20,32(sp)
   248ec:	d8800617 	ldw	r2,24(sp)
   248f0:	d8c00817 	ldw	r3,32(sp)
   248f4:	01400044 	movi	r5,1
   248f8:	e009883a 	mov	r4,fp
   248fc:	1887883a 	add	r3,r3,r2
   24900:	d8c00815 	stw	r3,32(sp)
   24904:	b0ad883a 	add	r22,r22,r2
   24908:	00273b80 	call	273b8 <__i2b>
   2490c:	1023883a 	mov	r17,r2
   24910:	a0000826 	beq	r20,zero,24934 <_dtoa_r+0xa0c>
   24914:	0580070e 	bge	zero,r22,24934 <_dtoa_r+0xa0c>
   24918:	a005883a 	mov	r2,r20
   2491c:	b500b916 	blt	r22,r20,24c04 <_dtoa_r+0xcdc>
   24920:	d9000817 	ldw	r4,32(sp)
   24924:	a0a9c83a 	sub	r20,r20,r2
   24928:	b0adc83a 	sub	r22,r22,r2
   2492c:	2089c83a 	sub	r4,r4,r2
   24930:	d9000815 	stw	r4,32(sp)
   24934:	d9800a17 	ldw	r6,40(sp)
   24938:	0181810e 	bge	zero,r6,24f40 <_dtoa_r+0x1018>
   2493c:	d9c00b17 	ldw	r7,44(sp)
   24940:	3800b326 	beq	r7,zero,24c10 <_dtoa_r+0xce8>
   24944:	a800b226 	beq	r21,zero,24c10 <_dtoa_r+0xce8>
   24948:	880b883a 	mov	r5,r17
   2494c:	a80d883a 	mov	r6,r21
   24950:	e009883a 	mov	r4,fp
   24954:	00275ec0 	call	275ec <__pow5mult>
   24958:	d9800917 	ldw	r6,36(sp)
   2495c:	100b883a 	mov	r5,r2
   24960:	e009883a 	mov	r4,fp
   24964:	1023883a 	mov	r17,r2
   24968:	00273f40 	call	273f4 <__multiply>
   2496c:	1021883a 	mov	r16,r2
   24970:	d8800a17 	ldw	r2,40(sp)
   24974:	d9400917 	ldw	r5,36(sp)
   24978:	e009883a 	mov	r4,fp
   2497c:	1545c83a 	sub	r2,r2,r21
   24980:	d8800a15 	stw	r2,40(sp)
   24984:	00270540 	call	27054 <_Bfree>
   24988:	d8c00a17 	ldw	r3,40(sp)
   2498c:	18009f1e 	bne	r3,zero,24c0c <_dtoa_r+0xce4>
   24990:	05c00044 	movi	r23,1
   24994:	e009883a 	mov	r4,fp
   24998:	b80b883a 	mov	r5,r23
   2499c:	00273b80 	call	273b8 <__i2b>
   249a0:	d9000d17 	ldw	r4,52(sp)
   249a4:	102b883a 	mov	r21,r2
   249a8:	2000ce26 	beq	r4,zero,24ce4 <_dtoa_r+0xdbc>
   249ac:	200d883a 	mov	r6,r4
   249b0:	100b883a 	mov	r5,r2
   249b4:	e009883a 	mov	r4,fp
   249b8:	00275ec0 	call	275ec <__pow5mult>
   249bc:	d9800317 	ldw	r6,12(sp)
   249c0:	102b883a 	mov	r21,r2
   249c4:	b981810e 	bge	r23,r6,24fcc <_dtoa_r+0x10a4>
   249c8:	0027883a 	mov	r19,zero
   249cc:	a8800417 	ldw	r2,16(r21)
   249d0:	05c00804 	movi	r23,32
   249d4:	10800104 	addi	r2,r2,4
   249d8:	1085883a 	add	r2,r2,r2
   249dc:	1085883a 	add	r2,r2,r2
   249e0:	a885883a 	add	r2,r21,r2
   249e4:	11000017 	ldw	r4,0(r2)
   249e8:	00272a00 	call	272a0 <__hi0bits>
   249ec:	b885c83a 	sub	r2,r23,r2
   249f0:	1585883a 	add	r2,r2,r22
   249f4:	108007cc 	andi	r2,r2,31
   249f8:	1000b326 	beq	r2,zero,24cc8 <_dtoa_r+0xda0>
   249fc:	00c00804 	movi	r3,32
   24a00:	1887c83a 	sub	r3,r3,r2
   24a04:	01000104 	movi	r4,4
   24a08:	20c2cd0e 	bge	r4,r3,25540 <_dtoa_r+0x1618>
   24a0c:	00c00704 	movi	r3,28
   24a10:	1885c83a 	sub	r2,r3,r2
   24a14:	d8c00817 	ldw	r3,32(sp)
   24a18:	a0a9883a 	add	r20,r20,r2
   24a1c:	b0ad883a 	add	r22,r22,r2
   24a20:	1887883a 	add	r3,r3,r2
   24a24:	d8c00815 	stw	r3,32(sp)
   24a28:	d9800817 	ldw	r6,32(sp)
   24a2c:	0180040e 	bge	zero,r6,24a40 <_dtoa_r+0xb18>
   24a30:	800b883a 	mov	r5,r16
   24a34:	e009883a 	mov	r4,fp
   24a38:	002772c0 	call	2772c <__lshift>
   24a3c:	1021883a 	mov	r16,r2
   24a40:	0580050e 	bge	zero,r22,24a58 <_dtoa_r+0xb30>
   24a44:	a80b883a 	mov	r5,r21
   24a48:	b00d883a 	mov	r6,r22
   24a4c:	e009883a 	mov	r4,fp
   24a50:	002772c0 	call	2772c <__lshift>
   24a54:	102b883a 	mov	r21,r2
   24a58:	d9c00e17 	ldw	r7,56(sp)
   24a5c:	3801211e 	bne	r7,zero,24ee4 <_dtoa_r+0xfbc>
   24a60:	d9800617 	ldw	r6,24(sp)
   24a64:	0181380e 	bge	zero,r6,24f48 <_dtoa_r+0x1020>
   24a68:	d8c00b17 	ldw	r3,44(sp)
   24a6c:	1800ab1e 	bne	r3,zero,24d1c <_dtoa_r+0xdf4>
   24a70:	dc800717 	ldw	r18,28(sp)
   24a74:	dcc00617 	ldw	r19,24(sp)
   24a78:	9029883a 	mov	r20,r18
   24a7c:	00000206 	br	24a88 <_dtoa_r+0xb60>
   24a80:	002707c0 	call	2707c <__multadd>
   24a84:	1021883a 	mov	r16,r2
   24a88:	a80b883a 	mov	r5,r21
   24a8c:	8009883a 	mov	r4,r16
   24a90:	0023d280 	call	23d28 <quorem>
   24a94:	10800c04 	addi	r2,r2,48
   24a98:	90800005 	stb	r2,0(r18)
   24a9c:	94800044 	addi	r18,r18,1
   24aa0:	9507c83a 	sub	r3,r18,r20
   24aa4:	000f883a 	mov	r7,zero
   24aa8:	01800284 	movi	r6,10
   24aac:	800b883a 	mov	r5,r16
   24ab0:	e009883a 	mov	r4,fp
   24ab4:	1cfff216 	blt	r3,r19,24a80 <__alt_data_end+0xfffe4a80>
   24ab8:	1011883a 	mov	r8,r2
   24abc:	d8800617 	ldw	r2,24(sp)
   24ac0:	0082370e 	bge	zero,r2,253a0 <_dtoa_r+0x1478>
   24ac4:	d9000717 	ldw	r4,28(sp)
   24ac8:	0025883a 	mov	r18,zero
   24acc:	20af883a 	add	r23,r4,r2
   24ad0:	01800044 	movi	r6,1
   24ad4:	800b883a 	mov	r5,r16
   24ad8:	e009883a 	mov	r4,fp
   24adc:	da001715 	stw	r8,92(sp)
   24ae0:	002772c0 	call	2772c <__lshift>
   24ae4:	a80b883a 	mov	r5,r21
   24ae8:	1009883a 	mov	r4,r2
   24aec:	d8800915 	stw	r2,36(sp)
   24af0:	00278740 	call	27874 <__mcmp>
   24af4:	da001717 	ldw	r8,92(sp)
   24af8:	0081800e 	bge	zero,r2,250fc <_dtoa_r+0x11d4>
   24afc:	b93fffc3 	ldbu	r4,-1(r23)
   24b00:	b8bfffc4 	addi	r2,r23,-1
   24b04:	1007883a 	mov	r3,r2
   24b08:	01800e44 	movi	r6,57
   24b0c:	d9c00717 	ldw	r7,28(sp)
   24b10:	00000506 	br	24b28 <_dtoa_r+0xc00>
   24b14:	18ffffc4 	addi	r3,r3,-1
   24b18:	11c12326 	beq	r2,r7,24fa8 <_dtoa_r+0x1080>
   24b1c:	19000003 	ldbu	r4,0(r3)
   24b20:	102f883a 	mov	r23,r2
   24b24:	10bfffc4 	addi	r2,r2,-1
   24b28:	21403fcc 	andi	r5,r4,255
   24b2c:	2940201c 	xori	r5,r5,128
   24b30:	297fe004 	addi	r5,r5,-128
   24b34:	29bff726 	beq	r5,r6,24b14 <__alt_data_end+0xfffe4b14>
   24b38:	21000044 	addi	r4,r4,1
   24b3c:	11000005 	stb	r4,0(r2)
   24b40:	a80b883a 	mov	r5,r21
   24b44:	e009883a 	mov	r4,fp
   24b48:	00270540 	call	27054 <_Bfree>
   24b4c:	883ea026 	beq	r17,zero,245d0 <__alt_data_end+0xfffe45d0>
   24b50:	90000426 	beq	r18,zero,24b64 <_dtoa_r+0xc3c>
   24b54:	94400326 	beq	r18,r17,24b64 <_dtoa_r+0xc3c>
   24b58:	900b883a 	mov	r5,r18
   24b5c:	e009883a 	mov	r4,fp
   24b60:	00270540 	call	27054 <_Bfree>
   24b64:	880b883a 	mov	r5,r17
   24b68:	e009883a 	mov	r4,fp
   24b6c:	00270540 	call	27054 <_Bfree>
   24b70:	003e9706 	br	245d0 <__alt_data_end+0xfffe45d0>
   24b74:	01800044 	movi	r6,1
   24b78:	d9800e15 	stw	r6,56(sp)
   24b7c:	003d9606 	br	241d8 <__alt_data_end+0xfffe41d8>
   24b80:	d8800817 	ldw	r2,32(sp)
   24b84:	d8c00517 	ldw	r3,20(sp)
   24b88:	d8000d15 	stw	zero,52(sp)
   24b8c:	10c5c83a 	sub	r2,r2,r3
   24b90:	00c9c83a 	sub	r4,zero,r3
   24b94:	d8800815 	stw	r2,32(sp)
   24b98:	d9000a15 	stw	r4,40(sp)
   24b9c:	003d9706 	br	241fc <__alt_data_end+0xfffe41fc>
   24ba0:	05adc83a 	sub	r22,zero,r22
   24ba4:	dd800815 	stw	r22,32(sp)
   24ba8:	002d883a 	mov	r22,zero
   24bac:	003d8e06 	br	241e8 <__alt_data_end+0xfffe41e8>
   24bb0:	d9000517 	ldw	r4,20(sp)
   24bb4:	002cbd80 	call	2cbd8 <__floatsidf>
   24bb8:	100d883a 	mov	r6,r2
   24bbc:	180f883a 	mov	r7,r3
   24bc0:	a009883a 	mov	r4,r20
   24bc4:	880b883a 	mov	r5,r17
   24bc8:	002ca5c0 	call	2ca5c <__eqdf2>
   24bcc:	103d7126 	beq	r2,zero,24194 <__alt_data_end+0xfffe4194>
   24bd0:	d9c00517 	ldw	r7,20(sp)
   24bd4:	39ffffc4 	addi	r7,r7,-1
   24bd8:	d9c00515 	stw	r7,20(sp)
   24bdc:	003d6d06 	br	24194 <__alt_data_end+0xfffe4194>
   24be0:	dd400a17 	ldw	r21,40(sp)
   24be4:	dd000817 	ldw	r20,32(sp)
   24be8:	0023883a 	mov	r17,zero
   24bec:	003f4806 	br	24910 <__alt_data_end+0xfffe4910>
   24bf0:	10e3c83a 	sub	r17,r2,r3
   24bf4:	9448983a 	sll	r4,r18,r17
   24bf8:	003d3206 	br	240c4 <__alt_data_end+0xfffe40c4>
   24bfc:	d8000e15 	stw	zero,56(sp)
   24c00:	003d7506 	br	241d8 <__alt_data_end+0xfffe41d8>
   24c04:	b005883a 	mov	r2,r22
   24c08:	003f4506 	br	24920 <__alt_data_end+0xfffe4920>
   24c0c:	dc000915 	stw	r16,36(sp)
   24c10:	d9800a17 	ldw	r6,40(sp)
   24c14:	d9400917 	ldw	r5,36(sp)
   24c18:	e009883a 	mov	r4,fp
   24c1c:	00275ec0 	call	275ec <__pow5mult>
   24c20:	1021883a 	mov	r16,r2
   24c24:	003f5a06 	br	24990 <__alt_data_end+0xfffe4990>
   24c28:	01c00044 	movi	r7,1
   24c2c:	d9c00b15 	stw	r7,44(sp)
   24c30:	d8802217 	ldw	r2,136(sp)
   24c34:	0081280e 	bge	zero,r2,250d8 <_dtoa_r+0x11b0>
   24c38:	100d883a 	mov	r6,r2
   24c3c:	1021883a 	mov	r16,r2
   24c40:	d8800c15 	stw	r2,48(sp)
   24c44:	d8800615 	stw	r2,24(sp)
   24c48:	003d8806 	br	2426c <__alt_data_end+0xfffe426c>
   24c4c:	d8800617 	ldw	r2,24(sp)
   24c50:	00be9b16 	blt	zero,r2,246c0 <__alt_data_end+0xfffe46c0>
   24c54:	10010f1e 	bne	r2,zero,25094 <_dtoa_r+0x116c>
   24c58:	880b883a 	mov	r5,r17
   24c5c:	000d883a 	mov	r6,zero
   24c60:	01d00534 	movhi	r7,16404
   24c64:	8009883a 	mov	r4,r16
   24c68:	00206f80 	call	206f8 <__muldf3>
   24c6c:	900d883a 	mov	r6,r18
   24c70:	980f883a 	mov	r7,r19
   24c74:	1009883a 	mov	r4,r2
   24c78:	180b883a 	mov	r5,r3
   24c7c:	002061c0 	call	2061c <__gedf2>
   24c80:	002b883a 	mov	r21,zero
   24c84:	0023883a 	mov	r17,zero
   24c88:	1000bf16 	blt	r2,zero,24f88 <_dtoa_r+0x1060>
   24c8c:	d9802217 	ldw	r6,136(sp)
   24c90:	ddc00717 	ldw	r23,28(sp)
   24c94:	018c303a 	nor	r6,zero,r6
   24c98:	d9800515 	stw	r6,20(sp)
   24c9c:	a80b883a 	mov	r5,r21
   24ca0:	e009883a 	mov	r4,fp
   24ca4:	00270540 	call	27054 <_Bfree>
   24ca8:	883e4926 	beq	r17,zero,245d0 <__alt_data_end+0xfffe45d0>
   24cac:	003fad06 	br	24b64 <__alt_data_end+0xfffe4b64>
   24cb0:	d9c01117 	ldw	r7,68(sp)
   24cb4:	3801bc26 	beq	r7,zero,253a8 <_dtoa_r+0x1480>
   24cb8:	10810cc4 	addi	r2,r2,1075
   24cbc:	dd400a17 	ldw	r21,40(sp)
   24cc0:	dd000817 	ldw	r20,32(sp)
   24cc4:	003f0a06 	br	248f0 <__alt_data_end+0xfffe48f0>
   24cc8:	00800704 	movi	r2,28
   24ccc:	d9000817 	ldw	r4,32(sp)
   24cd0:	a0a9883a 	add	r20,r20,r2
   24cd4:	b0ad883a 	add	r22,r22,r2
   24cd8:	2089883a 	add	r4,r4,r2
   24cdc:	d9000815 	stw	r4,32(sp)
   24ce0:	003f5106 	br	24a28 <__alt_data_end+0xfffe4a28>
   24ce4:	d8c00317 	ldw	r3,12(sp)
   24ce8:	b8c1fc0e 	bge	r23,r3,254dc <_dtoa_r+0x15b4>
   24cec:	0027883a 	mov	r19,zero
   24cf0:	b805883a 	mov	r2,r23
   24cf4:	003f3e06 	br	249f0 <__alt_data_end+0xfffe49f0>
   24cf8:	880b883a 	mov	r5,r17
   24cfc:	e009883a 	mov	r4,fp
   24d00:	000f883a 	mov	r7,zero
   24d04:	01800284 	movi	r6,10
   24d08:	002707c0 	call	2707c <__multadd>
   24d0c:	d9000c17 	ldw	r4,48(sp)
   24d10:	1023883a 	mov	r17,r2
   24d14:	0102040e 	bge	zero,r4,25528 <_dtoa_r+0x1600>
   24d18:	d9000615 	stw	r4,24(sp)
   24d1c:	0500050e 	bge	zero,r20,24d34 <_dtoa_r+0xe0c>
   24d20:	880b883a 	mov	r5,r17
   24d24:	a00d883a 	mov	r6,r20
   24d28:	e009883a 	mov	r4,fp
   24d2c:	002772c0 	call	2772c <__lshift>
   24d30:	1023883a 	mov	r17,r2
   24d34:	9801241e 	bne	r19,zero,251c8 <_dtoa_r+0x12a0>
   24d38:	8829883a 	mov	r20,r17
   24d3c:	d9000617 	ldw	r4,24(sp)
   24d40:	dcc00717 	ldw	r19,28(sp)
   24d44:	9480004c 	andi	r18,r18,1
   24d48:	20bfffc4 	addi	r2,r4,-1
   24d4c:	9885883a 	add	r2,r19,r2
   24d50:	d8800415 	stw	r2,16(sp)
   24d54:	dc800615 	stw	r18,24(sp)
   24d58:	a80b883a 	mov	r5,r21
   24d5c:	8009883a 	mov	r4,r16
   24d60:	0023d280 	call	23d28 <quorem>
   24d64:	880b883a 	mov	r5,r17
   24d68:	8009883a 	mov	r4,r16
   24d6c:	102f883a 	mov	r23,r2
   24d70:	00278740 	call	27874 <__mcmp>
   24d74:	a80b883a 	mov	r5,r21
   24d78:	a00d883a 	mov	r6,r20
   24d7c:	e009883a 	mov	r4,fp
   24d80:	102d883a 	mov	r22,r2
   24d84:	00278d40 	call	278d4 <__mdiff>
   24d88:	1007883a 	mov	r3,r2
   24d8c:	10800317 	ldw	r2,12(r2)
   24d90:	bc800c04 	addi	r18,r23,48
   24d94:	180b883a 	mov	r5,r3
   24d98:	10004e1e 	bne	r2,zero,24ed4 <_dtoa_r+0xfac>
   24d9c:	8009883a 	mov	r4,r16
   24da0:	d8c01615 	stw	r3,88(sp)
   24da4:	00278740 	call	27874 <__mcmp>
   24da8:	d8c01617 	ldw	r3,88(sp)
   24dac:	e009883a 	mov	r4,fp
   24db0:	d8801615 	stw	r2,88(sp)
   24db4:	180b883a 	mov	r5,r3
   24db8:	00270540 	call	27054 <_Bfree>
   24dbc:	d8801617 	ldw	r2,88(sp)
   24dc0:	1000041e 	bne	r2,zero,24dd4 <_dtoa_r+0xeac>
   24dc4:	d9800317 	ldw	r6,12(sp)
   24dc8:	3000021e 	bne	r6,zero,24dd4 <_dtoa_r+0xeac>
   24dcc:	d8c00617 	ldw	r3,24(sp)
   24dd0:	18003726 	beq	r3,zero,24eb0 <_dtoa_r+0xf88>
   24dd4:	b0002016 	blt	r22,zero,24e58 <_dtoa_r+0xf30>
   24dd8:	b000041e 	bne	r22,zero,24dec <_dtoa_r+0xec4>
   24ddc:	d9000317 	ldw	r4,12(sp)
   24de0:	2000021e 	bne	r4,zero,24dec <_dtoa_r+0xec4>
   24de4:	d8c00617 	ldw	r3,24(sp)
   24de8:	18001b26 	beq	r3,zero,24e58 <_dtoa_r+0xf30>
   24dec:	00810716 	blt	zero,r2,2520c <_dtoa_r+0x12e4>
   24df0:	d8c00417 	ldw	r3,16(sp)
   24df4:	9d800044 	addi	r22,r19,1
   24df8:	9c800005 	stb	r18,0(r19)
   24dfc:	b02f883a 	mov	r23,r22
   24e00:	98c10626 	beq	r19,r3,2521c <_dtoa_r+0x12f4>
   24e04:	800b883a 	mov	r5,r16
   24e08:	000f883a 	mov	r7,zero
   24e0c:	01800284 	movi	r6,10
   24e10:	e009883a 	mov	r4,fp
   24e14:	002707c0 	call	2707c <__multadd>
   24e18:	1021883a 	mov	r16,r2
   24e1c:	000f883a 	mov	r7,zero
   24e20:	01800284 	movi	r6,10
   24e24:	880b883a 	mov	r5,r17
   24e28:	e009883a 	mov	r4,fp
   24e2c:	8d002526 	beq	r17,r20,24ec4 <_dtoa_r+0xf9c>
   24e30:	002707c0 	call	2707c <__multadd>
   24e34:	a00b883a 	mov	r5,r20
   24e38:	000f883a 	mov	r7,zero
   24e3c:	01800284 	movi	r6,10
   24e40:	e009883a 	mov	r4,fp
   24e44:	1023883a 	mov	r17,r2
   24e48:	002707c0 	call	2707c <__multadd>
   24e4c:	1029883a 	mov	r20,r2
   24e50:	b027883a 	mov	r19,r22
   24e54:	003fc006 	br	24d58 <__alt_data_end+0xfffe4d58>
   24e58:	9011883a 	mov	r8,r18
   24e5c:	00800e0e 	bge	zero,r2,24e98 <_dtoa_r+0xf70>
   24e60:	800b883a 	mov	r5,r16
   24e64:	01800044 	movi	r6,1
   24e68:	e009883a 	mov	r4,fp
   24e6c:	da001715 	stw	r8,92(sp)
   24e70:	002772c0 	call	2772c <__lshift>
   24e74:	a80b883a 	mov	r5,r21
   24e78:	1009883a 	mov	r4,r2
   24e7c:	1021883a 	mov	r16,r2
   24e80:	00278740 	call	27874 <__mcmp>
   24e84:	da001717 	ldw	r8,92(sp)
   24e88:	0081960e 	bge	zero,r2,254e4 <_dtoa_r+0x15bc>
   24e8c:	00800e44 	movi	r2,57
   24e90:	40817026 	beq	r8,r2,25454 <_dtoa_r+0x152c>
   24e94:	ba000c44 	addi	r8,r23,49
   24e98:	8825883a 	mov	r18,r17
   24e9c:	9dc00044 	addi	r23,r19,1
   24ea0:	9a000005 	stb	r8,0(r19)
   24ea4:	a023883a 	mov	r17,r20
   24ea8:	dc000915 	stw	r16,36(sp)
   24eac:	003f2406 	br	24b40 <__alt_data_end+0xfffe4b40>
   24eb0:	00800e44 	movi	r2,57
   24eb4:	9011883a 	mov	r8,r18
   24eb8:	90816626 	beq	r18,r2,25454 <_dtoa_r+0x152c>
   24ebc:	05bff516 	blt	zero,r22,24e94 <__alt_data_end+0xfffe4e94>
   24ec0:	003ff506 	br	24e98 <__alt_data_end+0xfffe4e98>
   24ec4:	002707c0 	call	2707c <__multadd>
   24ec8:	1023883a 	mov	r17,r2
   24ecc:	1029883a 	mov	r20,r2
   24ed0:	003fdf06 	br	24e50 <__alt_data_end+0xfffe4e50>
   24ed4:	e009883a 	mov	r4,fp
   24ed8:	00270540 	call	27054 <_Bfree>
   24edc:	00800044 	movi	r2,1
   24ee0:	003fbc06 	br	24dd4 <__alt_data_end+0xfffe4dd4>
   24ee4:	a80b883a 	mov	r5,r21
   24ee8:	8009883a 	mov	r4,r16
   24eec:	00278740 	call	27874 <__mcmp>
   24ef0:	103edb0e 	bge	r2,zero,24a60 <__alt_data_end+0xfffe4a60>
   24ef4:	800b883a 	mov	r5,r16
   24ef8:	000f883a 	mov	r7,zero
   24efc:	01800284 	movi	r6,10
   24f00:	e009883a 	mov	r4,fp
   24f04:	002707c0 	call	2707c <__multadd>
   24f08:	1021883a 	mov	r16,r2
   24f0c:	d8800517 	ldw	r2,20(sp)
   24f10:	d8c00b17 	ldw	r3,44(sp)
   24f14:	10bfffc4 	addi	r2,r2,-1
   24f18:	d8800515 	stw	r2,20(sp)
   24f1c:	183f761e 	bne	r3,zero,24cf8 <__alt_data_end+0xfffe4cf8>
   24f20:	d9000c17 	ldw	r4,48(sp)
   24f24:	0101730e 	bge	zero,r4,254f4 <_dtoa_r+0x15cc>
   24f28:	d9000615 	stw	r4,24(sp)
   24f2c:	003ed006 	br	24a70 <__alt_data_end+0xfffe4a70>
   24f30:	00800084 	movi	r2,2
   24f34:	3081861e 	bne	r6,r2,25550 <_dtoa_r+0x1628>
   24f38:	d8000b15 	stw	zero,44(sp)
   24f3c:	003f3c06 	br	24c30 <__alt_data_end+0xfffe4c30>
   24f40:	dc000917 	ldw	r16,36(sp)
   24f44:	003e9206 	br	24990 <__alt_data_end+0xfffe4990>
   24f48:	d9c00317 	ldw	r7,12(sp)
   24f4c:	00800084 	movi	r2,2
   24f50:	11fec50e 	bge	r2,r7,24a68 <__alt_data_end+0xfffe4a68>
   24f54:	d9000617 	ldw	r4,24(sp)
   24f58:	20013c1e 	bne	r4,zero,2544c <_dtoa_r+0x1524>
   24f5c:	a80b883a 	mov	r5,r21
   24f60:	000f883a 	mov	r7,zero
   24f64:	01800144 	movi	r6,5
   24f68:	e009883a 	mov	r4,fp
   24f6c:	002707c0 	call	2707c <__multadd>
   24f70:	100b883a 	mov	r5,r2
   24f74:	8009883a 	mov	r4,r16
   24f78:	102b883a 	mov	r21,r2
   24f7c:	00278740 	call	27874 <__mcmp>
   24f80:	dc000915 	stw	r16,36(sp)
   24f84:	00bf410e 	bge	zero,r2,24c8c <__alt_data_end+0xfffe4c8c>
   24f88:	d9c00717 	ldw	r7,28(sp)
   24f8c:	00800c44 	movi	r2,49
   24f90:	38800005 	stb	r2,0(r7)
   24f94:	d8800517 	ldw	r2,20(sp)
   24f98:	3dc00044 	addi	r23,r7,1
   24f9c:	10800044 	addi	r2,r2,1
   24fa0:	d8800515 	stw	r2,20(sp)
   24fa4:	003f3d06 	br	24c9c <__alt_data_end+0xfffe4c9c>
   24fa8:	d9800517 	ldw	r6,20(sp)
   24fac:	d9c00717 	ldw	r7,28(sp)
   24fb0:	00800c44 	movi	r2,49
   24fb4:	31800044 	addi	r6,r6,1
   24fb8:	d9800515 	stw	r6,20(sp)
   24fbc:	38800005 	stb	r2,0(r7)
   24fc0:	003edf06 	br	24b40 <__alt_data_end+0xfffe4b40>
   24fc4:	d8000b15 	stw	zero,44(sp)
   24fc8:	003c9f06 	br	24248 <__alt_data_end+0xfffe4248>
   24fcc:	903e7e1e 	bne	r18,zero,249c8 <__alt_data_end+0xfffe49c8>
   24fd0:	00800434 	movhi	r2,16
   24fd4:	10bfffc4 	addi	r2,r2,-1
   24fd8:	9884703a 	and	r2,r19,r2
   24fdc:	1000ea1e 	bne	r2,zero,25388 <_dtoa_r+0x1460>
   24fe0:	9cdffc2c 	andhi	r19,r19,32752
   24fe4:	9800e826 	beq	r19,zero,25388 <_dtoa_r+0x1460>
   24fe8:	d9c00817 	ldw	r7,32(sp)
   24fec:	b5800044 	addi	r22,r22,1
   24ff0:	04c00044 	movi	r19,1
   24ff4:	39c00044 	addi	r7,r7,1
   24ff8:	d9c00815 	stw	r7,32(sp)
   24ffc:	d8800d17 	ldw	r2,52(sp)
   25000:	103e721e 	bne	r2,zero,249cc <__alt_data_end+0xfffe49cc>
   25004:	00800044 	movi	r2,1
   25008:	003e7906 	br	249f0 <__alt_data_end+0xfffe49f0>
   2500c:	8009883a 	mov	r4,r16
   25010:	002cbd80 	call	2cbd8 <__floatsidf>
   25014:	d9800f17 	ldw	r6,60(sp)
   25018:	d9c01017 	ldw	r7,64(sp)
   2501c:	1009883a 	mov	r4,r2
   25020:	180b883a 	mov	r5,r3
   25024:	00206f80 	call	206f8 <__muldf3>
   25028:	000d883a 	mov	r6,zero
   2502c:	01d00734 	movhi	r7,16412
   25030:	1009883a 	mov	r4,r2
   25034:	180b883a 	mov	r5,r3
   25038:	002b8c80 	call	2b8c8 <__adddf3>
   2503c:	047f3034 	movhi	r17,64704
   25040:	1021883a 	mov	r16,r2
   25044:	1c63883a 	add	r17,r3,r17
   25048:	d9000f17 	ldw	r4,60(sp)
   2504c:	d9401017 	ldw	r5,64(sp)
   25050:	000d883a 	mov	r6,zero
   25054:	01d00534 	movhi	r7,16404
   25058:	0020e100 	call	20e10 <__subdf3>
   2505c:	800d883a 	mov	r6,r16
   25060:	880f883a 	mov	r7,r17
   25064:	1009883a 	mov	r4,r2
   25068:	180b883a 	mov	r5,r3
   2506c:	102b883a 	mov	r21,r2
   25070:	1829883a 	mov	r20,r3
   25074:	002061c0 	call	2061c <__gedf2>
   25078:	00806c16 	blt	zero,r2,2522c <_dtoa_r+0x1304>
   2507c:	89e0003c 	xorhi	r7,r17,32768
   25080:	800d883a 	mov	r6,r16
   25084:	a809883a 	mov	r4,r21
   25088:	a00b883a 	mov	r5,r20
   2508c:	002cae40 	call	2cae4 <__ledf2>
   25090:	103d7e0e 	bge	r2,zero,2468c <__alt_data_end+0xfffe468c>
   25094:	002b883a 	mov	r21,zero
   25098:	0023883a 	mov	r17,zero
   2509c:	003efb06 	br	24c8c <__alt_data_end+0xfffe4c8c>
   250a0:	d8800717 	ldw	r2,28(sp)
   250a4:	003bd006 	br	23fe8 <__alt_data_end+0xfffe3fe8>
   250a8:	d9000a17 	ldw	r4,40(sp)
   250ac:	d9800d17 	ldw	r6,52(sp)
   250b0:	dd400a15 	stw	r21,40(sp)
   250b4:	a905c83a 	sub	r2,r21,r4
   250b8:	308d883a 	add	r6,r6,r2
   250bc:	d9800d15 	stw	r6,52(sp)
   250c0:	002b883a 	mov	r21,zero
   250c4:	003e0606 	br	248e0 <__alt_data_end+0xfffe48e0>
   250c8:	9023883a 	mov	r17,r18
   250cc:	9829883a 	mov	r20,r19
   250d0:	04000084 	movi	r16,2
   250d4:	003c9206 	br	24320 <__alt_data_end+0xfffe4320>
   250d8:	04000044 	movi	r16,1
   250dc:	dc000c15 	stw	r16,48(sp)
   250e0:	dc000615 	stw	r16,24(sp)
   250e4:	dc002215 	stw	r16,136(sp)
   250e8:	e0001115 	stw	zero,68(fp)
   250ec:	000b883a 	mov	r5,zero
   250f0:	003c6906 	br	24298 <__alt_data_end+0xfffe4298>
   250f4:	3021883a 	mov	r16,r6
   250f8:	003ffb06 	br	250e8 <__alt_data_end+0xfffe50e8>
   250fc:	1000021e 	bne	r2,zero,25108 <_dtoa_r+0x11e0>
   25100:	4200004c 	andi	r8,r8,1
   25104:	403e7d1e 	bne	r8,zero,24afc <__alt_data_end+0xfffe4afc>
   25108:	01000c04 	movi	r4,48
   2510c:	00000106 	br	25114 <_dtoa_r+0x11ec>
   25110:	102f883a 	mov	r23,r2
   25114:	b8bfffc4 	addi	r2,r23,-1
   25118:	10c00007 	ldb	r3,0(r2)
   2511c:	193ffc26 	beq	r3,r4,25110 <__alt_data_end+0xfffe5110>
   25120:	003e8706 	br	24b40 <__alt_data_end+0xfffe4b40>
   25124:	d8800517 	ldw	r2,20(sp)
   25128:	00a3c83a 	sub	r17,zero,r2
   2512c:	8800a426 	beq	r17,zero,253c0 <_dtoa_r+0x1498>
   25130:	888003cc 	andi	r2,r17,15
   25134:	100490fa 	slli	r2,r2,3
   25138:	00c000f4 	movhi	r3,3
   2513c:	18fd4e04 	addi	r3,r3,-2760
   25140:	1885883a 	add	r2,r3,r2
   25144:	11800017 	ldw	r6,0(r2)
   25148:	11c00117 	ldw	r7,4(r2)
   2514c:	9009883a 	mov	r4,r18
   25150:	980b883a 	mov	r5,r19
   25154:	8823d13a 	srai	r17,r17,4
   25158:	00206f80 	call	206f8 <__muldf3>
   2515c:	d8800f15 	stw	r2,60(sp)
   25160:	d8c01015 	stw	r3,64(sp)
   25164:	8800e826 	beq	r17,zero,25508 <_dtoa_r+0x15e0>
   25168:	050000f4 	movhi	r20,3
   2516c:	a53d4404 	addi	r20,r20,-2800
   25170:	04000084 	movi	r16,2
   25174:	8980004c 	andi	r6,r17,1
   25178:	1009883a 	mov	r4,r2
   2517c:	8823d07a 	srai	r17,r17,1
   25180:	180b883a 	mov	r5,r3
   25184:	30000426 	beq	r6,zero,25198 <_dtoa_r+0x1270>
   25188:	a1800017 	ldw	r6,0(r20)
   2518c:	a1c00117 	ldw	r7,4(r20)
   25190:	84000044 	addi	r16,r16,1
   25194:	00206f80 	call	206f8 <__muldf3>
   25198:	a5000204 	addi	r20,r20,8
   2519c:	883ff51e 	bne	r17,zero,25174 <__alt_data_end+0xfffe5174>
   251a0:	d8800f15 	stw	r2,60(sp)
   251a4:	d8c01015 	stw	r3,64(sp)
   251a8:	003c7606 	br	24384 <__alt_data_end+0xfffe4384>
   251ac:	00c00c04 	movi	r3,48
   251b0:	10c00005 	stb	r3,0(r2)
   251b4:	d8c00517 	ldw	r3,20(sp)
   251b8:	bd3fffc3 	ldbu	r20,-1(r23)
   251bc:	18c00044 	addi	r3,r3,1
   251c0:	d8c00515 	stw	r3,20(sp)
   251c4:	003db906 	br	248ac <__alt_data_end+0xfffe48ac>
   251c8:	89400117 	ldw	r5,4(r17)
   251cc:	e009883a 	mov	r4,fp
   251d0:	0026fac0 	call	26fac <_Balloc>
   251d4:	89800417 	ldw	r6,16(r17)
   251d8:	89400304 	addi	r5,r17,12
   251dc:	11000304 	addi	r4,r2,12
   251e0:	31800084 	addi	r6,r6,2
   251e4:	318d883a 	add	r6,r6,r6
   251e8:	318d883a 	add	r6,r6,r6
   251ec:	1027883a 	mov	r19,r2
   251f0:	0026d3c0 	call	26d3c <memcpy>
   251f4:	01800044 	movi	r6,1
   251f8:	980b883a 	mov	r5,r19
   251fc:	e009883a 	mov	r4,fp
   25200:	002772c0 	call	2772c <__lshift>
   25204:	1029883a 	mov	r20,r2
   25208:	003ecc06 	br	24d3c <__alt_data_end+0xfffe4d3c>
   2520c:	00800e44 	movi	r2,57
   25210:	90809026 	beq	r18,r2,25454 <_dtoa_r+0x152c>
   25214:	92000044 	addi	r8,r18,1
   25218:	003f1f06 	br	24e98 <__alt_data_end+0xfffe4e98>
   2521c:	9011883a 	mov	r8,r18
   25220:	8825883a 	mov	r18,r17
   25224:	a023883a 	mov	r17,r20
   25228:	003e2906 	br	24ad0 <__alt_data_end+0xfffe4ad0>
   2522c:	002b883a 	mov	r21,zero
   25230:	0023883a 	mov	r17,zero
   25234:	003f5406 	br	24f88 <__alt_data_end+0xfffe4f88>
   25238:	61bfffc4 	addi	r6,r12,-1
   2523c:	300490fa 	slli	r2,r6,3
   25240:	00c000f4 	movhi	r3,3
   25244:	18fd4e04 	addi	r3,r3,-2760
   25248:	1885883a 	add	r2,r3,r2
   2524c:	11000017 	ldw	r4,0(r2)
   25250:	11400117 	ldw	r5,4(r2)
   25254:	d8800717 	ldw	r2,28(sp)
   25258:	880f883a 	mov	r7,r17
   2525c:	d9801215 	stw	r6,72(sp)
   25260:	800d883a 	mov	r6,r16
   25264:	db001615 	stw	r12,88(sp)
   25268:	15c00044 	addi	r23,r2,1
   2526c:	00206f80 	call	206f8 <__muldf3>
   25270:	d9401017 	ldw	r5,64(sp)
   25274:	d9000f17 	ldw	r4,60(sp)
   25278:	d8c01515 	stw	r3,84(sp)
   2527c:	d8801415 	stw	r2,80(sp)
   25280:	002170c0 	call	2170c <__fixdfsi>
   25284:	1009883a 	mov	r4,r2
   25288:	1021883a 	mov	r16,r2
   2528c:	002cbd80 	call	2cbd8 <__floatsidf>
   25290:	d9000f17 	ldw	r4,60(sp)
   25294:	d9401017 	ldw	r5,64(sp)
   25298:	100d883a 	mov	r6,r2
   2529c:	180f883a 	mov	r7,r3
   252a0:	0020e100 	call	20e10 <__subdf3>
   252a4:	1829883a 	mov	r20,r3
   252a8:	d8c00717 	ldw	r3,28(sp)
   252ac:	84000c04 	addi	r16,r16,48
   252b0:	1023883a 	mov	r17,r2
   252b4:	1c000005 	stb	r16,0(r3)
   252b8:	db001617 	ldw	r12,88(sp)
   252bc:	00800044 	movi	r2,1
   252c0:	60802226 	beq	r12,r2,2534c <_dtoa_r+0x1424>
   252c4:	d9c00717 	ldw	r7,28(sp)
   252c8:	8805883a 	mov	r2,r17
   252cc:	b82b883a 	mov	r21,r23
   252d0:	3b19883a 	add	r12,r7,r12
   252d4:	6023883a 	mov	r17,r12
   252d8:	a007883a 	mov	r3,r20
   252dc:	dc800f15 	stw	r18,60(sp)
   252e0:	000d883a 	mov	r6,zero
   252e4:	01d00934 	movhi	r7,16420
   252e8:	1009883a 	mov	r4,r2
   252ec:	180b883a 	mov	r5,r3
   252f0:	00206f80 	call	206f8 <__muldf3>
   252f4:	180b883a 	mov	r5,r3
   252f8:	1009883a 	mov	r4,r2
   252fc:	1829883a 	mov	r20,r3
   25300:	1025883a 	mov	r18,r2
   25304:	002170c0 	call	2170c <__fixdfsi>
   25308:	1009883a 	mov	r4,r2
   2530c:	1021883a 	mov	r16,r2
   25310:	002cbd80 	call	2cbd8 <__floatsidf>
   25314:	100d883a 	mov	r6,r2
   25318:	180f883a 	mov	r7,r3
   2531c:	9009883a 	mov	r4,r18
   25320:	a00b883a 	mov	r5,r20
   25324:	84000c04 	addi	r16,r16,48
   25328:	0020e100 	call	20e10 <__subdf3>
   2532c:	ad400044 	addi	r21,r21,1
   25330:	ac3fffc5 	stb	r16,-1(r21)
   25334:	ac7fea1e 	bne	r21,r17,252e0 <__alt_data_end+0xfffe52e0>
   25338:	1023883a 	mov	r17,r2
   2533c:	d8801217 	ldw	r2,72(sp)
   25340:	dc800f17 	ldw	r18,60(sp)
   25344:	1829883a 	mov	r20,r3
   25348:	b8af883a 	add	r23,r23,r2
   2534c:	d9001417 	ldw	r4,80(sp)
   25350:	d9401517 	ldw	r5,84(sp)
   25354:	000d883a 	mov	r6,zero
   25358:	01cff834 	movhi	r7,16352
   2535c:	002b8c80 	call	2b8c8 <__adddf3>
   25360:	880d883a 	mov	r6,r17
   25364:	a00f883a 	mov	r7,r20
   25368:	1009883a 	mov	r4,r2
   2536c:	180b883a 	mov	r5,r3
   25370:	002cae40 	call	2cae4 <__ledf2>
   25374:	10003e0e 	bge	r2,zero,25470 <_dtoa_r+0x1548>
   25378:	d9001317 	ldw	r4,76(sp)
   2537c:	bd3fffc3 	ldbu	r20,-1(r23)
   25380:	d9000515 	stw	r4,20(sp)
   25384:	003d3b06 	br	24874 <__alt_data_end+0xfffe4874>
   25388:	0027883a 	mov	r19,zero
   2538c:	003f1b06 	br	24ffc <__alt_data_end+0xfffe4ffc>
   25390:	d8800817 	ldw	r2,32(sp)
   25394:	11e9c83a 	sub	r20,r2,r7
   25398:	0005883a 	mov	r2,zero
   2539c:	003d5406 	br	248f0 <__alt_data_end+0xfffe48f0>
   253a0:	00800044 	movi	r2,1
   253a4:	003dc706 	br	24ac4 <__alt_data_end+0xfffe4ac4>
   253a8:	d8c00217 	ldw	r3,8(sp)
   253ac:	00800d84 	movi	r2,54
   253b0:	dd400a17 	ldw	r21,40(sp)
   253b4:	10c5c83a 	sub	r2,r2,r3
   253b8:	dd000817 	ldw	r20,32(sp)
   253bc:	003d4c06 	br	248f0 <__alt_data_end+0xfffe48f0>
   253c0:	dc800f15 	stw	r18,60(sp)
   253c4:	dcc01015 	stw	r19,64(sp)
   253c8:	04000084 	movi	r16,2
   253cc:	003bed06 	br	24384 <__alt_data_end+0xfffe4384>
   253d0:	d9000617 	ldw	r4,24(sp)
   253d4:	203f0d26 	beq	r4,zero,2500c <__alt_data_end+0xfffe500c>
   253d8:	d9800c17 	ldw	r6,48(sp)
   253dc:	01bcab0e 	bge	zero,r6,2468c <__alt_data_end+0xfffe468c>
   253e0:	d9401017 	ldw	r5,64(sp)
   253e4:	d9000f17 	ldw	r4,60(sp)
   253e8:	000d883a 	mov	r6,zero
   253ec:	01d00934 	movhi	r7,16420
   253f0:	00206f80 	call	206f8 <__muldf3>
   253f4:	81000044 	addi	r4,r16,1
   253f8:	d8800f15 	stw	r2,60(sp)
   253fc:	d8c01015 	stw	r3,64(sp)
   25400:	002cbd80 	call	2cbd8 <__floatsidf>
   25404:	d9800f17 	ldw	r6,60(sp)
   25408:	d9c01017 	ldw	r7,64(sp)
   2540c:	1009883a 	mov	r4,r2
   25410:	180b883a 	mov	r5,r3
   25414:	00206f80 	call	206f8 <__muldf3>
   25418:	01d00734 	movhi	r7,16412
   2541c:	000d883a 	mov	r6,zero
   25420:	1009883a 	mov	r4,r2
   25424:	180b883a 	mov	r5,r3
   25428:	002b8c80 	call	2b8c8 <__adddf3>
   2542c:	d9c00517 	ldw	r7,20(sp)
   25430:	047f3034 	movhi	r17,64704
   25434:	1021883a 	mov	r16,r2
   25438:	39ffffc4 	addi	r7,r7,-1
   2543c:	d9c01315 	stw	r7,76(sp)
   25440:	1c63883a 	add	r17,r3,r17
   25444:	db000c17 	ldw	r12,48(sp)
   25448:	003bea06 	br	243f4 <__alt_data_end+0xfffe43f4>
   2544c:	dc000915 	stw	r16,36(sp)
   25450:	003e0e06 	br	24c8c <__alt_data_end+0xfffe4c8c>
   25454:	01000e44 	movi	r4,57
   25458:	8825883a 	mov	r18,r17
   2545c:	9dc00044 	addi	r23,r19,1
   25460:	99000005 	stb	r4,0(r19)
   25464:	a023883a 	mov	r17,r20
   25468:	dc000915 	stw	r16,36(sp)
   2546c:	003da406 	br	24b00 <__alt_data_end+0xfffe4b00>
   25470:	d9801417 	ldw	r6,80(sp)
   25474:	d9c01517 	ldw	r7,84(sp)
   25478:	0009883a 	mov	r4,zero
   2547c:	014ff834 	movhi	r5,16352
   25480:	0020e100 	call	20e10 <__subdf3>
   25484:	880d883a 	mov	r6,r17
   25488:	a00f883a 	mov	r7,r20
   2548c:	1009883a 	mov	r4,r2
   25490:	180b883a 	mov	r5,r3
   25494:	002061c0 	call	2061c <__gedf2>
   25498:	00bc7c0e 	bge	zero,r2,2468c <__alt_data_end+0xfffe468c>
   2549c:	01000c04 	movi	r4,48
   254a0:	00000106 	br	254a8 <_dtoa_r+0x1580>
   254a4:	102f883a 	mov	r23,r2
   254a8:	b8bfffc4 	addi	r2,r23,-1
   254ac:	10c00007 	ldb	r3,0(r2)
   254b0:	193ffc26 	beq	r3,r4,254a4 <__alt_data_end+0xfffe54a4>
   254b4:	d9801317 	ldw	r6,76(sp)
   254b8:	d9800515 	stw	r6,20(sp)
   254bc:	003c4406 	br	245d0 <__alt_data_end+0xfffe45d0>
   254c0:	d9801317 	ldw	r6,76(sp)
   254c4:	d9800515 	stw	r6,20(sp)
   254c8:	003cea06 	br	24874 <__alt_data_end+0xfffe4874>
   254cc:	dd800f17 	ldw	r22,60(sp)
   254d0:	dcc01017 	ldw	r19,64(sp)
   254d4:	dc801217 	ldw	r18,72(sp)
   254d8:	003c6c06 	br	2468c <__alt_data_end+0xfffe468c>
   254dc:	903e031e 	bne	r18,zero,24cec <__alt_data_end+0xfffe4cec>
   254e0:	003ebb06 	br	24fd0 <__alt_data_end+0xfffe4fd0>
   254e4:	103e6c1e 	bne	r2,zero,24e98 <__alt_data_end+0xfffe4e98>
   254e8:	4080004c 	andi	r2,r8,1
   254ec:	103e6a26 	beq	r2,zero,24e98 <__alt_data_end+0xfffe4e98>
   254f0:	003e6606 	br	24e8c <__alt_data_end+0xfffe4e8c>
   254f4:	d8c00317 	ldw	r3,12(sp)
   254f8:	00800084 	movi	r2,2
   254fc:	10c02916 	blt	r2,r3,255a4 <_dtoa_r+0x167c>
   25500:	d9000c17 	ldw	r4,48(sp)
   25504:	003e8806 	br	24f28 <__alt_data_end+0xfffe4f28>
   25508:	04000084 	movi	r16,2
   2550c:	003b9d06 	br	24384 <__alt_data_end+0xfffe4384>
   25510:	d9001317 	ldw	r4,76(sp)
   25514:	d9000515 	stw	r4,20(sp)
   25518:	003cd606 	br	24874 <__alt_data_end+0xfffe4874>
   2551c:	d8801317 	ldw	r2,76(sp)
   25520:	d8800515 	stw	r2,20(sp)
   25524:	003c2a06 	br	245d0 <__alt_data_end+0xfffe45d0>
   25528:	d9800317 	ldw	r6,12(sp)
   2552c:	00800084 	movi	r2,2
   25530:	11801516 	blt	r2,r6,25588 <_dtoa_r+0x1660>
   25534:	d9c00c17 	ldw	r7,48(sp)
   25538:	d9c00615 	stw	r7,24(sp)
   2553c:	003df706 	br	24d1c <__alt_data_end+0xfffe4d1c>
   25540:	193d3926 	beq	r3,r4,24a28 <__alt_data_end+0xfffe4a28>
   25544:	00c00f04 	movi	r3,60
   25548:	1885c83a 	sub	r2,r3,r2
   2554c:	003ddf06 	br	24ccc <__alt_data_end+0xfffe4ccc>
   25550:	e009883a 	mov	r4,fp
   25554:	e0001115 	stw	zero,68(fp)
   25558:	000b883a 	mov	r5,zero
   2555c:	0026fac0 	call	26fac <_Balloc>
   25560:	d8800715 	stw	r2,28(sp)
   25564:	d8c00717 	ldw	r3,28(sp)
   25568:	00bfffc4 	movi	r2,-1
   2556c:	01000044 	movi	r4,1
   25570:	d8800c15 	stw	r2,48(sp)
   25574:	e0c01015 	stw	r3,64(fp)
   25578:	d9000b15 	stw	r4,44(sp)
   2557c:	d8800615 	stw	r2,24(sp)
   25580:	d8002215 	stw	zero,136(sp)
   25584:	003c4106 	br	2468c <__alt_data_end+0xfffe468c>
   25588:	d8c00c17 	ldw	r3,48(sp)
   2558c:	d8c00615 	stw	r3,24(sp)
   25590:	003e7006 	br	24f54 <__alt_data_end+0xfffe4f54>
   25594:	04400044 	movi	r17,1
   25598:	003b2006 	br	2421c <__alt_data_end+0xfffe421c>
   2559c:	000b883a 	mov	r5,zero
   255a0:	003b3d06 	br	24298 <__alt_data_end+0xfffe4298>
   255a4:	d8800c17 	ldw	r2,48(sp)
   255a8:	d8800615 	stw	r2,24(sp)
   255ac:	003e6906 	br	24f54 <__alt_data_end+0xfffe4f54>

000255b0 <__sflush_r>:
   255b0:	2880030b 	ldhu	r2,12(r5)
   255b4:	defffb04 	addi	sp,sp,-20
   255b8:	dcc00315 	stw	r19,12(sp)
   255bc:	dc400115 	stw	r17,4(sp)
   255c0:	dfc00415 	stw	ra,16(sp)
   255c4:	dc800215 	stw	r18,8(sp)
   255c8:	dc000015 	stw	r16,0(sp)
   255cc:	10c0020c 	andi	r3,r2,8
   255d0:	2823883a 	mov	r17,r5
   255d4:	2027883a 	mov	r19,r4
   255d8:	1800311e 	bne	r3,zero,256a0 <__sflush_r+0xf0>
   255dc:	28c00117 	ldw	r3,4(r5)
   255e0:	10820014 	ori	r2,r2,2048
   255e4:	2880030d 	sth	r2,12(r5)
   255e8:	00c04b0e 	bge	zero,r3,25718 <__sflush_r+0x168>
   255ec:	8a000a17 	ldw	r8,40(r17)
   255f0:	40002326 	beq	r8,zero,25680 <__sflush_r+0xd0>
   255f4:	9c000017 	ldw	r16,0(r19)
   255f8:	10c4000c 	andi	r3,r2,4096
   255fc:	98000015 	stw	zero,0(r19)
   25600:	18004826 	beq	r3,zero,25724 <__sflush_r+0x174>
   25604:	89801417 	ldw	r6,80(r17)
   25608:	10c0010c 	andi	r3,r2,4
   2560c:	18000626 	beq	r3,zero,25628 <__sflush_r+0x78>
   25610:	88c00117 	ldw	r3,4(r17)
   25614:	88800c17 	ldw	r2,48(r17)
   25618:	30cdc83a 	sub	r6,r6,r3
   2561c:	10000226 	beq	r2,zero,25628 <__sflush_r+0x78>
   25620:	88800f17 	ldw	r2,60(r17)
   25624:	308dc83a 	sub	r6,r6,r2
   25628:	89400717 	ldw	r5,28(r17)
   2562c:	000f883a 	mov	r7,zero
   25630:	9809883a 	mov	r4,r19
   25634:	403ee83a 	callr	r8
   25638:	00ffffc4 	movi	r3,-1
   2563c:	10c04426 	beq	r2,r3,25750 <__sflush_r+0x1a0>
   25640:	88c0030b 	ldhu	r3,12(r17)
   25644:	89000417 	ldw	r4,16(r17)
   25648:	88000115 	stw	zero,4(r17)
   2564c:	197dffcc 	andi	r5,r3,63487
   25650:	8940030d 	sth	r5,12(r17)
   25654:	89000015 	stw	r4,0(r17)
   25658:	18c4000c 	andi	r3,r3,4096
   2565c:	18002c1e 	bne	r3,zero,25710 <__sflush_r+0x160>
   25660:	89400c17 	ldw	r5,48(r17)
   25664:	9c000015 	stw	r16,0(r19)
   25668:	28000526 	beq	r5,zero,25680 <__sflush_r+0xd0>
   2566c:	88801004 	addi	r2,r17,64
   25670:	28800226 	beq	r5,r2,2567c <__sflush_r+0xcc>
   25674:	9809883a 	mov	r4,r19
   25678:	0025d1c0 	call	25d1c <_free_r>
   2567c:	88000c15 	stw	zero,48(r17)
   25680:	0005883a 	mov	r2,zero
   25684:	dfc00417 	ldw	ra,16(sp)
   25688:	dcc00317 	ldw	r19,12(sp)
   2568c:	dc800217 	ldw	r18,8(sp)
   25690:	dc400117 	ldw	r17,4(sp)
   25694:	dc000017 	ldw	r16,0(sp)
   25698:	dec00504 	addi	sp,sp,20
   2569c:	f800283a 	ret
   256a0:	2c800417 	ldw	r18,16(r5)
   256a4:	903ff626 	beq	r18,zero,25680 <__alt_data_end+0xfffe5680>
   256a8:	2c000017 	ldw	r16,0(r5)
   256ac:	108000cc 	andi	r2,r2,3
   256b0:	2c800015 	stw	r18,0(r5)
   256b4:	84a1c83a 	sub	r16,r16,r18
   256b8:	1000131e 	bne	r2,zero,25708 <__sflush_r+0x158>
   256bc:	28800517 	ldw	r2,20(r5)
   256c0:	88800215 	stw	r2,8(r17)
   256c4:	04000316 	blt	zero,r16,256d4 <__sflush_r+0x124>
   256c8:	003fed06 	br	25680 <__alt_data_end+0xfffe5680>
   256cc:	90a5883a 	add	r18,r18,r2
   256d0:	043feb0e 	bge	zero,r16,25680 <__alt_data_end+0xfffe5680>
   256d4:	88800917 	ldw	r2,36(r17)
   256d8:	89400717 	ldw	r5,28(r17)
   256dc:	800f883a 	mov	r7,r16
   256e0:	900d883a 	mov	r6,r18
   256e4:	9809883a 	mov	r4,r19
   256e8:	103ee83a 	callr	r2
   256ec:	80a1c83a 	sub	r16,r16,r2
   256f0:	00bff616 	blt	zero,r2,256cc <__alt_data_end+0xfffe56cc>
   256f4:	88c0030b 	ldhu	r3,12(r17)
   256f8:	00bfffc4 	movi	r2,-1
   256fc:	18c01014 	ori	r3,r3,64
   25700:	88c0030d 	sth	r3,12(r17)
   25704:	003fdf06 	br	25684 <__alt_data_end+0xfffe5684>
   25708:	0005883a 	mov	r2,zero
   2570c:	003fec06 	br	256c0 <__alt_data_end+0xfffe56c0>
   25710:	88801415 	stw	r2,80(r17)
   25714:	003fd206 	br	25660 <__alt_data_end+0xfffe5660>
   25718:	28c00f17 	ldw	r3,60(r5)
   2571c:	00ffb316 	blt	zero,r3,255ec <__alt_data_end+0xfffe55ec>
   25720:	003fd706 	br	25680 <__alt_data_end+0xfffe5680>
   25724:	89400717 	ldw	r5,28(r17)
   25728:	000d883a 	mov	r6,zero
   2572c:	01c00044 	movi	r7,1
   25730:	9809883a 	mov	r4,r19
   25734:	403ee83a 	callr	r8
   25738:	100d883a 	mov	r6,r2
   2573c:	00bfffc4 	movi	r2,-1
   25740:	30801426 	beq	r6,r2,25794 <__sflush_r+0x1e4>
   25744:	8880030b 	ldhu	r2,12(r17)
   25748:	8a000a17 	ldw	r8,40(r17)
   2574c:	003fae06 	br	25608 <__alt_data_end+0xfffe5608>
   25750:	98c00017 	ldw	r3,0(r19)
   25754:	183fba26 	beq	r3,zero,25640 <__alt_data_end+0xfffe5640>
   25758:	01000744 	movi	r4,29
   2575c:	19000626 	beq	r3,r4,25778 <__sflush_r+0x1c8>
   25760:	01000584 	movi	r4,22
   25764:	19000426 	beq	r3,r4,25778 <__sflush_r+0x1c8>
   25768:	88c0030b 	ldhu	r3,12(r17)
   2576c:	18c01014 	ori	r3,r3,64
   25770:	88c0030d 	sth	r3,12(r17)
   25774:	003fc306 	br	25684 <__alt_data_end+0xfffe5684>
   25778:	8880030b 	ldhu	r2,12(r17)
   2577c:	88c00417 	ldw	r3,16(r17)
   25780:	88000115 	stw	zero,4(r17)
   25784:	10bdffcc 	andi	r2,r2,63487
   25788:	8880030d 	sth	r2,12(r17)
   2578c:	88c00015 	stw	r3,0(r17)
   25790:	003fb306 	br	25660 <__alt_data_end+0xfffe5660>
   25794:	98800017 	ldw	r2,0(r19)
   25798:	103fea26 	beq	r2,zero,25744 <__alt_data_end+0xfffe5744>
   2579c:	00c00744 	movi	r3,29
   257a0:	10c00226 	beq	r2,r3,257ac <__sflush_r+0x1fc>
   257a4:	00c00584 	movi	r3,22
   257a8:	10c0031e 	bne	r2,r3,257b8 <__sflush_r+0x208>
   257ac:	9c000015 	stw	r16,0(r19)
   257b0:	0005883a 	mov	r2,zero
   257b4:	003fb306 	br	25684 <__alt_data_end+0xfffe5684>
   257b8:	88c0030b 	ldhu	r3,12(r17)
   257bc:	3005883a 	mov	r2,r6
   257c0:	18c01014 	ori	r3,r3,64
   257c4:	88c0030d 	sth	r3,12(r17)
   257c8:	003fae06 	br	25684 <__alt_data_end+0xfffe5684>

000257cc <_fflush_r>:
   257cc:	defffd04 	addi	sp,sp,-12
   257d0:	dc000115 	stw	r16,4(sp)
   257d4:	dfc00215 	stw	ra,8(sp)
   257d8:	2021883a 	mov	r16,r4
   257dc:	20000226 	beq	r4,zero,257e8 <_fflush_r+0x1c>
   257e0:	20800e17 	ldw	r2,56(r4)
   257e4:	10000c26 	beq	r2,zero,25818 <_fflush_r+0x4c>
   257e8:	2880030f 	ldh	r2,12(r5)
   257ec:	1000051e 	bne	r2,zero,25804 <_fflush_r+0x38>
   257f0:	0005883a 	mov	r2,zero
   257f4:	dfc00217 	ldw	ra,8(sp)
   257f8:	dc000117 	ldw	r16,4(sp)
   257fc:	dec00304 	addi	sp,sp,12
   25800:	f800283a 	ret
   25804:	8009883a 	mov	r4,r16
   25808:	dfc00217 	ldw	ra,8(sp)
   2580c:	dc000117 	ldw	r16,4(sp)
   25810:	dec00304 	addi	sp,sp,12
   25814:	00255b01 	jmpi	255b0 <__sflush_r>
   25818:	d9400015 	stw	r5,0(sp)
   2581c:	0025ba80 	call	25ba8 <__sinit>
   25820:	d9400017 	ldw	r5,0(sp)
   25824:	003ff006 	br	257e8 <__alt_data_end+0xfffe57e8>

00025828 <fflush>:
   25828:	20000526 	beq	r4,zero,25840 <fflush+0x18>
   2582c:	008000f4 	movhi	r2,3
   25830:	10844104 	addi	r2,r2,4356
   25834:	200b883a 	mov	r5,r4
   25838:	11000017 	ldw	r4,0(r2)
   2583c:	00257cc1 	jmpi	257cc <_fflush_r>
   25840:	008000f4 	movhi	r2,3
   25844:	10844004 	addi	r2,r2,4352
   25848:	11000017 	ldw	r4,0(r2)
   2584c:	014000b4 	movhi	r5,2
   25850:	2955f304 	addi	r5,r5,22476
   25854:	00260f01 	jmpi	260f0 <_fwalk_reent>

00025858 <__fp_unlock>:
   25858:	0005883a 	mov	r2,zero
   2585c:	f800283a 	ret

00025860 <_cleanup_r>:
   25860:	014000f4 	movhi	r5,3
   25864:	2966b804 	addi	r5,r5,-25888
   25868:	00260f01 	jmpi	260f0 <_fwalk_reent>

0002586c <__sinit.part.1>:
   2586c:	defff704 	addi	sp,sp,-36
   25870:	00c000b4 	movhi	r3,2
   25874:	dfc00815 	stw	ra,32(sp)
   25878:	ddc00715 	stw	r23,28(sp)
   2587c:	dd800615 	stw	r22,24(sp)
   25880:	dd400515 	stw	r21,20(sp)
   25884:	dd000415 	stw	r20,16(sp)
   25888:	dcc00315 	stw	r19,12(sp)
   2588c:	dc800215 	stw	r18,8(sp)
   25890:	dc400115 	stw	r17,4(sp)
   25894:	dc000015 	stw	r16,0(sp)
   25898:	18d61804 	addi	r3,r3,22624
   2589c:	24000117 	ldw	r16,4(r4)
   258a0:	20c00f15 	stw	r3,60(r4)
   258a4:	2080bb04 	addi	r2,r4,748
   258a8:	00c000c4 	movi	r3,3
   258ac:	20c0b915 	stw	r3,740(r4)
   258b0:	2080ba15 	stw	r2,744(r4)
   258b4:	2000b815 	stw	zero,736(r4)
   258b8:	05c00204 	movi	r23,8
   258bc:	00800104 	movi	r2,4
   258c0:	2025883a 	mov	r18,r4
   258c4:	b80d883a 	mov	r6,r23
   258c8:	81001704 	addi	r4,r16,92
   258cc:	000b883a 	mov	r5,zero
   258d0:	80000015 	stw	zero,0(r16)
   258d4:	80000115 	stw	zero,4(r16)
   258d8:	80000215 	stw	zero,8(r16)
   258dc:	8080030d 	sth	r2,12(r16)
   258e0:	80001915 	stw	zero,100(r16)
   258e4:	8000038d 	sth	zero,14(r16)
   258e8:	80000415 	stw	zero,16(r16)
   258ec:	80000515 	stw	zero,20(r16)
   258f0:	80000615 	stw	zero,24(r16)
   258f4:	0026e840 	call	26e84 <memset>
   258f8:	058000f4 	movhi	r22,3
   258fc:	94400217 	ldw	r17,8(r18)
   25900:	054000f4 	movhi	r21,3
   25904:	050000f4 	movhi	r20,3
   25908:	04c000f4 	movhi	r19,3
   2590c:	b5a01c04 	addi	r22,r22,-32656
   25910:	ad603304 	addi	r21,r21,-32564
   25914:	a5205204 	addi	r20,r20,-32440
   25918:	9ce06904 	addi	r19,r19,-32348
   2591c:	85800815 	stw	r22,32(r16)
   25920:	85400915 	stw	r21,36(r16)
   25924:	85000a15 	stw	r20,40(r16)
   25928:	84c00b15 	stw	r19,44(r16)
   2592c:	84000715 	stw	r16,28(r16)
   25930:	00800284 	movi	r2,10
   25934:	8880030d 	sth	r2,12(r17)
   25938:	00800044 	movi	r2,1
   2593c:	b80d883a 	mov	r6,r23
   25940:	89001704 	addi	r4,r17,92
   25944:	000b883a 	mov	r5,zero
   25948:	88000015 	stw	zero,0(r17)
   2594c:	88000115 	stw	zero,4(r17)
   25950:	88000215 	stw	zero,8(r17)
   25954:	88001915 	stw	zero,100(r17)
   25958:	8880038d 	sth	r2,14(r17)
   2595c:	88000415 	stw	zero,16(r17)
   25960:	88000515 	stw	zero,20(r17)
   25964:	88000615 	stw	zero,24(r17)
   25968:	0026e840 	call	26e84 <memset>
   2596c:	94000317 	ldw	r16,12(r18)
   25970:	00800484 	movi	r2,18
   25974:	8c400715 	stw	r17,28(r17)
   25978:	8d800815 	stw	r22,32(r17)
   2597c:	8d400915 	stw	r21,36(r17)
   25980:	8d000a15 	stw	r20,40(r17)
   25984:	8cc00b15 	stw	r19,44(r17)
   25988:	8080030d 	sth	r2,12(r16)
   2598c:	00800084 	movi	r2,2
   25990:	80000015 	stw	zero,0(r16)
   25994:	80000115 	stw	zero,4(r16)
   25998:	80000215 	stw	zero,8(r16)
   2599c:	80001915 	stw	zero,100(r16)
   259a0:	8080038d 	sth	r2,14(r16)
   259a4:	80000415 	stw	zero,16(r16)
   259a8:	80000515 	stw	zero,20(r16)
   259ac:	80000615 	stw	zero,24(r16)
   259b0:	b80d883a 	mov	r6,r23
   259b4:	000b883a 	mov	r5,zero
   259b8:	81001704 	addi	r4,r16,92
   259bc:	0026e840 	call	26e84 <memset>
   259c0:	00800044 	movi	r2,1
   259c4:	84000715 	stw	r16,28(r16)
   259c8:	85800815 	stw	r22,32(r16)
   259cc:	85400915 	stw	r21,36(r16)
   259d0:	85000a15 	stw	r20,40(r16)
   259d4:	84c00b15 	stw	r19,44(r16)
   259d8:	90800e15 	stw	r2,56(r18)
   259dc:	dfc00817 	ldw	ra,32(sp)
   259e0:	ddc00717 	ldw	r23,28(sp)
   259e4:	dd800617 	ldw	r22,24(sp)
   259e8:	dd400517 	ldw	r21,20(sp)
   259ec:	dd000417 	ldw	r20,16(sp)
   259f0:	dcc00317 	ldw	r19,12(sp)
   259f4:	dc800217 	ldw	r18,8(sp)
   259f8:	dc400117 	ldw	r17,4(sp)
   259fc:	dc000017 	ldw	r16,0(sp)
   25a00:	dec00904 	addi	sp,sp,36
   25a04:	f800283a 	ret

00025a08 <__fp_lock>:
   25a08:	0005883a 	mov	r2,zero
   25a0c:	f800283a 	ret

00025a10 <__sfmoreglue>:
   25a10:	defffc04 	addi	sp,sp,-16
   25a14:	dc400115 	stw	r17,4(sp)
   25a18:	2c7fffc4 	addi	r17,r5,-1
   25a1c:	8c401a24 	muli	r17,r17,104
   25a20:	dc800215 	stw	r18,8(sp)
   25a24:	2825883a 	mov	r18,r5
   25a28:	89401d04 	addi	r5,r17,116
   25a2c:	dc000015 	stw	r16,0(sp)
   25a30:	dfc00315 	stw	ra,12(sp)
   25a34:	002644c0 	call	2644c <_malloc_r>
   25a38:	1021883a 	mov	r16,r2
   25a3c:	10000726 	beq	r2,zero,25a5c <__sfmoreglue+0x4c>
   25a40:	11000304 	addi	r4,r2,12
   25a44:	10000015 	stw	zero,0(r2)
   25a48:	14800115 	stw	r18,4(r2)
   25a4c:	11000215 	stw	r4,8(r2)
   25a50:	89801a04 	addi	r6,r17,104
   25a54:	000b883a 	mov	r5,zero
   25a58:	0026e840 	call	26e84 <memset>
   25a5c:	8005883a 	mov	r2,r16
   25a60:	dfc00317 	ldw	ra,12(sp)
   25a64:	dc800217 	ldw	r18,8(sp)
   25a68:	dc400117 	ldw	r17,4(sp)
   25a6c:	dc000017 	ldw	r16,0(sp)
   25a70:	dec00404 	addi	sp,sp,16
   25a74:	f800283a 	ret

00025a78 <__sfp>:
   25a78:	defffb04 	addi	sp,sp,-20
   25a7c:	dc000015 	stw	r16,0(sp)
   25a80:	040000f4 	movhi	r16,3
   25a84:	84044004 	addi	r16,r16,4352
   25a88:	dcc00315 	stw	r19,12(sp)
   25a8c:	2027883a 	mov	r19,r4
   25a90:	81000017 	ldw	r4,0(r16)
   25a94:	dfc00415 	stw	ra,16(sp)
   25a98:	dc800215 	stw	r18,8(sp)
   25a9c:	20800e17 	ldw	r2,56(r4)
   25aa0:	dc400115 	stw	r17,4(sp)
   25aa4:	1000021e 	bne	r2,zero,25ab0 <__sfp+0x38>
   25aa8:	002586c0 	call	2586c <__sinit.part.1>
   25aac:	81000017 	ldw	r4,0(r16)
   25ab0:	2480b804 	addi	r18,r4,736
   25ab4:	047fffc4 	movi	r17,-1
   25ab8:	91000117 	ldw	r4,4(r18)
   25abc:	94000217 	ldw	r16,8(r18)
   25ac0:	213fffc4 	addi	r4,r4,-1
   25ac4:	20000a16 	blt	r4,zero,25af0 <__sfp+0x78>
   25ac8:	8080030f 	ldh	r2,12(r16)
   25acc:	10000c26 	beq	r2,zero,25b00 <__sfp+0x88>
   25ad0:	80c01d04 	addi	r3,r16,116
   25ad4:	00000206 	br	25ae0 <__sfp+0x68>
   25ad8:	18bfe60f 	ldh	r2,-104(r3)
   25adc:	10000826 	beq	r2,zero,25b00 <__sfp+0x88>
   25ae0:	213fffc4 	addi	r4,r4,-1
   25ae4:	1c3ffd04 	addi	r16,r3,-12
   25ae8:	18c01a04 	addi	r3,r3,104
   25aec:	247ffa1e 	bne	r4,r17,25ad8 <__alt_data_end+0xfffe5ad8>
   25af0:	90800017 	ldw	r2,0(r18)
   25af4:	10001d26 	beq	r2,zero,25b6c <__sfp+0xf4>
   25af8:	1025883a 	mov	r18,r2
   25afc:	003fee06 	br	25ab8 <__alt_data_end+0xfffe5ab8>
   25b00:	00bfffc4 	movi	r2,-1
   25b04:	8080038d 	sth	r2,14(r16)
   25b08:	00800044 	movi	r2,1
   25b0c:	8080030d 	sth	r2,12(r16)
   25b10:	80001915 	stw	zero,100(r16)
   25b14:	80000015 	stw	zero,0(r16)
   25b18:	80000215 	stw	zero,8(r16)
   25b1c:	80000115 	stw	zero,4(r16)
   25b20:	80000415 	stw	zero,16(r16)
   25b24:	80000515 	stw	zero,20(r16)
   25b28:	80000615 	stw	zero,24(r16)
   25b2c:	01800204 	movi	r6,8
   25b30:	000b883a 	mov	r5,zero
   25b34:	81001704 	addi	r4,r16,92
   25b38:	0026e840 	call	26e84 <memset>
   25b3c:	8005883a 	mov	r2,r16
   25b40:	80000c15 	stw	zero,48(r16)
   25b44:	80000d15 	stw	zero,52(r16)
   25b48:	80001115 	stw	zero,68(r16)
   25b4c:	80001215 	stw	zero,72(r16)
   25b50:	dfc00417 	ldw	ra,16(sp)
   25b54:	dcc00317 	ldw	r19,12(sp)
   25b58:	dc800217 	ldw	r18,8(sp)
   25b5c:	dc400117 	ldw	r17,4(sp)
   25b60:	dc000017 	ldw	r16,0(sp)
   25b64:	dec00504 	addi	sp,sp,20
   25b68:	f800283a 	ret
   25b6c:	01400104 	movi	r5,4
   25b70:	9809883a 	mov	r4,r19
   25b74:	0025a100 	call	25a10 <__sfmoreglue>
   25b78:	90800015 	stw	r2,0(r18)
   25b7c:	103fde1e 	bne	r2,zero,25af8 <__alt_data_end+0xfffe5af8>
   25b80:	00800304 	movi	r2,12
   25b84:	98800015 	stw	r2,0(r19)
   25b88:	0005883a 	mov	r2,zero
   25b8c:	003ff006 	br	25b50 <__alt_data_end+0xfffe5b50>

00025b90 <_cleanup>:
   25b90:	008000f4 	movhi	r2,3
   25b94:	10844004 	addi	r2,r2,4352
   25b98:	11000017 	ldw	r4,0(r2)
   25b9c:	014000f4 	movhi	r5,3
   25ba0:	2966b804 	addi	r5,r5,-25888
   25ba4:	00260f01 	jmpi	260f0 <_fwalk_reent>

00025ba8 <__sinit>:
   25ba8:	20800e17 	ldw	r2,56(r4)
   25bac:	10000126 	beq	r2,zero,25bb4 <__sinit+0xc>
   25bb0:	f800283a 	ret
   25bb4:	002586c1 	jmpi	2586c <__sinit.part.1>

00025bb8 <__sfp_lock_acquire>:
   25bb8:	f800283a 	ret

00025bbc <__sfp_lock_release>:
   25bbc:	f800283a 	ret

00025bc0 <__sinit_lock_acquire>:
   25bc0:	f800283a 	ret

00025bc4 <__sinit_lock_release>:
   25bc4:	f800283a 	ret

00025bc8 <__fp_lock_all>:
   25bc8:	008000f4 	movhi	r2,3
   25bcc:	10844104 	addi	r2,r2,4356
   25bd0:	11000017 	ldw	r4,0(r2)
   25bd4:	014000b4 	movhi	r5,2
   25bd8:	29568204 	addi	r5,r5,23048
   25bdc:	002602c1 	jmpi	2602c <_fwalk>

00025be0 <__fp_unlock_all>:
   25be0:	008000f4 	movhi	r2,3
   25be4:	10844104 	addi	r2,r2,4356
   25be8:	11000017 	ldw	r4,0(r2)
   25bec:	014000b4 	movhi	r5,2
   25bf0:	29561604 	addi	r5,r5,22616
   25bf4:	002602c1 	jmpi	2602c <_fwalk>

00025bf8 <_malloc_trim_r>:
   25bf8:	defffb04 	addi	sp,sp,-20
   25bfc:	dcc00315 	stw	r19,12(sp)
   25c00:	04c000f4 	movhi	r19,3
   25c04:	dc800215 	stw	r18,8(sp)
   25c08:	dc400115 	stw	r17,4(sp)
   25c0c:	dc000015 	stw	r16,0(sp)
   25c10:	dfc00415 	stw	ra,16(sp)
   25c14:	2821883a 	mov	r16,r5
   25c18:	9cfebc04 	addi	r19,r19,-1296
   25c1c:	2025883a 	mov	r18,r4
   25c20:	002d2300 	call	2d230 <__malloc_lock>
   25c24:	98800217 	ldw	r2,8(r19)
   25c28:	14400117 	ldw	r17,4(r2)
   25c2c:	00bfff04 	movi	r2,-4
   25c30:	88a2703a 	and	r17,r17,r2
   25c34:	8c21c83a 	sub	r16,r17,r16
   25c38:	8403fbc4 	addi	r16,r16,4079
   25c3c:	8020d33a 	srli	r16,r16,12
   25c40:	0083ffc4 	movi	r2,4095
   25c44:	843fffc4 	addi	r16,r16,-1
   25c48:	8020933a 	slli	r16,r16,12
   25c4c:	1400060e 	bge	r2,r16,25c68 <_malloc_trim_r+0x70>
   25c50:	000b883a 	mov	r5,zero
   25c54:	9009883a 	mov	r4,r18
   25c58:	002801c0 	call	2801c <_sbrk_r>
   25c5c:	98c00217 	ldw	r3,8(r19)
   25c60:	1c47883a 	add	r3,r3,r17
   25c64:	10c00a26 	beq	r2,r3,25c90 <_malloc_trim_r+0x98>
   25c68:	9009883a 	mov	r4,r18
   25c6c:	002d2540 	call	2d254 <__malloc_unlock>
   25c70:	0005883a 	mov	r2,zero
   25c74:	dfc00417 	ldw	ra,16(sp)
   25c78:	dcc00317 	ldw	r19,12(sp)
   25c7c:	dc800217 	ldw	r18,8(sp)
   25c80:	dc400117 	ldw	r17,4(sp)
   25c84:	dc000017 	ldw	r16,0(sp)
   25c88:	dec00504 	addi	sp,sp,20
   25c8c:	f800283a 	ret
   25c90:	040bc83a 	sub	r5,zero,r16
   25c94:	9009883a 	mov	r4,r18
   25c98:	002801c0 	call	2801c <_sbrk_r>
   25c9c:	00ffffc4 	movi	r3,-1
   25ca0:	10c00d26 	beq	r2,r3,25cd8 <_malloc_trim_r+0xe0>
   25ca4:	00c000f4 	movhi	r3,3
   25ca8:	18cb1904 	addi	r3,r3,11364
   25cac:	18800017 	ldw	r2,0(r3)
   25cb0:	99000217 	ldw	r4,8(r19)
   25cb4:	8c23c83a 	sub	r17,r17,r16
   25cb8:	8c400054 	ori	r17,r17,1
   25cbc:	1421c83a 	sub	r16,r2,r16
   25cc0:	24400115 	stw	r17,4(r4)
   25cc4:	9009883a 	mov	r4,r18
   25cc8:	1c000015 	stw	r16,0(r3)
   25ccc:	002d2540 	call	2d254 <__malloc_unlock>
   25cd0:	00800044 	movi	r2,1
   25cd4:	003fe706 	br	25c74 <__alt_data_end+0xfffe5c74>
   25cd8:	000b883a 	mov	r5,zero
   25cdc:	9009883a 	mov	r4,r18
   25ce0:	002801c0 	call	2801c <_sbrk_r>
   25ce4:	99000217 	ldw	r4,8(r19)
   25ce8:	014003c4 	movi	r5,15
   25cec:	1107c83a 	sub	r3,r2,r4
   25cf0:	28ffdd0e 	bge	r5,r3,25c68 <__alt_data_end+0xfffe5c68>
   25cf4:	014000f4 	movhi	r5,3
   25cf8:	29444304 	addi	r5,r5,4364
   25cfc:	29400017 	ldw	r5,0(r5)
   25d00:	18c00054 	ori	r3,r3,1
   25d04:	20c00115 	stw	r3,4(r4)
   25d08:	00c000f4 	movhi	r3,3
   25d0c:	1145c83a 	sub	r2,r2,r5
   25d10:	18cb1904 	addi	r3,r3,11364
   25d14:	18800015 	stw	r2,0(r3)
   25d18:	003fd306 	br	25c68 <__alt_data_end+0xfffe5c68>

00025d1c <_free_r>:
   25d1c:	28004126 	beq	r5,zero,25e24 <_free_r+0x108>
   25d20:	defffd04 	addi	sp,sp,-12
   25d24:	dc400115 	stw	r17,4(sp)
   25d28:	dc000015 	stw	r16,0(sp)
   25d2c:	2023883a 	mov	r17,r4
   25d30:	2821883a 	mov	r16,r5
   25d34:	dfc00215 	stw	ra,8(sp)
   25d38:	002d2300 	call	2d230 <__malloc_lock>
   25d3c:	81ffff17 	ldw	r7,-4(r16)
   25d40:	00bfff84 	movi	r2,-2
   25d44:	010000f4 	movhi	r4,3
   25d48:	81bffe04 	addi	r6,r16,-8
   25d4c:	3884703a 	and	r2,r7,r2
   25d50:	213ebc04 	addi	r4,r4,-1296
   25d54:	308b883a 	add	r5,r6,r2
   25d58:	2a400117 	ldw	r9,4(r5)
   25d5c:	22000217 	ldw	r8,8(r4)
   25d60:	00ffff04 	movi	r3,-4
   25d64:	48c6703a 	and	r3,r9,r3
   25d68:	2a005726 	beq	r5,r8,25ec8 <_free_r+0x1ac>
   25d6c:	28c00115 	stw	r3,4(r5)
   25d70:	39c0004c 	andi	r7,r7,1
   25d74:	3800091e 	bne	r7,zero,25d9c <_free_r+0x80>
   25d78:	823ffe17 	ldw	r8,-8(r16)
   25d7c:	22400204 	addi	r9,r4,8
   25d80:	320dc83a 	sub	r6,r6,r8
   25d84:	31c00217 	ldw	r7,8(r6)
   25d88:	1205883a 	add	r2,r2,r8
   25d8c:	3a406526 	beq	r7,r9,25f24 <_free_r+0x208>
   25d90:	32000317 	ldw	r8,12(r6)
   25d94:	3a000315 	stw	r8,12(r7)
   25d98:	41c00215 	stw	r7,8(r8)
   25d9c:	28cf883a 	add	r7,r5,r3
   25da0:	39c00117 	ldw	r7,4(r7)
   25da4:	39c0004c 	andi	r7,r7,1
   25da8:	38003a26 	beq	r7,zero,25e94 <_free_r+0x178>
   25dac:	10c00054 	ori	r3,r2,1
   25db0:	30c00115 	stw	r3,4(r6)
   25db4:	3087883a 	add	r3,r6,r2
   25db8:	18800015 	stw	r2,0(r3)
   25dbc:	00c07fc4 	movi	r3,511
   25dc0:	18801936 	bltu	r3,r2,25e28 <_free_r+0x10c>
   25dc4:	1004d0fa 	srli	r2,r2,3
   25dc8:	01c00044 	movi	r7,1
   25dcc:	21400117 	ldw	r5,4(r4)
   25dd0:	10c00044 	addi	r3,r2,1
   25dd4:	18c7883a 	add	r3,r3,r3
   25dd8:	1005d0ba 	srai	r2,r2,2
   25ddc:	18c7883a 	add	r3,r3,r3
   25de0:	18c7883a 	add	r3,r3,r3
   25de4:	1907883a 	add	r3,r3,r4
   25de8:	3884983a 	sll	r2,r7,r2
   25dec:	19c00017 	ldw	r7,0(r3)
   25df0:	1a3ffe04 	addi	r8,r3,-8
   25df4:	1144b03a 	or	r2,r2,r5
   25df8:	32000315 	stw	r8,12(r6)
   25dfc:	31c00215 	stw	r7,8(r6)
   25e00:	20800115 	stw	r2,4(r4)
   25e04:	19800015 	stw	r6,0(r3)
   25e08:	39800315 	stw	r6,12(r7)
   25e0c:	8809883a 	mov	r4,r17
   25e10:	dfc00217 	ldw	ra,8(sp)
   25e14:	dc400117 	ldw	r17,4(sp)
   25e18:	dc000017 	ldw	r16,0(sp)
   25e1c:	dec00304 	addi	sp,sp,12
   25e20:	002d2541 	jmpi	2d254 <__malloc_unlock>
   25e24:	f800283a 	ret
   25e28:	100ad27a 	srli	r5,r2,9
   25e2c:	00c00104 	movi	r3,4
   25e30:	19404a36 	bltu	r3,r5,25f5c <_free_r+0x240>
   25e34:	100ad1ba 	srli	r5,r2,6
   25e38:	28c00e44 	addi	r3,r5,57
   25e3c:	18c7883a 	add	r3,r3,r3
   25e40:	29400e04 	addi	r5,r5,56
   25e44:	18c7883a 	add	r3,r3,r3
   25e48:	18c7883a 	add	r3,r3,r3
   25e4c:	1909883a 	add	r4,r3,r4
   25e50:	20c00017 	ldw	r3,0(r4)
   25e54:	01c000f4 	movhi	r7,3
   25e58:	213ffe04 	addi	r4,r4,-8
   25e5c:	39febc04 	addi	r7,r7,-1296
   25e60:	20c04426 	beq	r4,r3,25f74 <_free_r+0x258>
   25e64:	01ffff04 	movi	r7,-4
   25e68:	19400117 	ldw	r5,4(r3)
   25e6c:	29ca703a 	and	r5,r5,r7
   25e70:	1140022e 	bgeu	r2,r5,25e7c <_free_r+0x160>
   25e74:	18c00217 	ldw	r3,8(r3)
   25e78:	20fffb1e 	bne	r4,r3,25e68 <__alt_data_end+0xfffe5e68>
   25e7c:	19000317 	ldw	r4,12(r3)
   25e80:	31000315 	stw	r4,12(r6)
   25e84:	30c00215 	stw	r3,8(r6)
   25e88:	21800215 	stw	r6,8(r4)
   25e8c:	19800315 	stw	r6,12(r3)
   25e90:	003fde06 	br	25e0c <__alt_data_end+0xfffe5e0c>
   25e94:	29c00217 	ldw	r7,8(r5)
   25e98:	10c5883a 	add	r2,r2,r3
   25e9c:	00c000f4 	movhi	r3,3
   25ea0:	18febe04 	addi	r3,r3,-1288
   25ea4:	38c03b26 	beq	r7,r3,25f94 <_free_r+0x278>
   25ea8:	2a000317 	ldw	r8,12(r5)
   25eac:	11400054 	ori	r5,r2,1
   25eb0:	3087883a 	add	r3,r6,r2
   25eb4:	3a000315 	stw	r8,12(r7)
   25eb8:	41c00215 	stw	r7,8(r8)
   25ebc:	31400115 	stw	r5,4(r6)
   25ec0:	18800015 	stw	r2,0(r3)
   25ec4:	003fbd06 	br	25dbc <__alt_data_end+0xfffe5dbc>
   25ec8:	39c0004c 	andi	r7,r7,1
   25ecc:	10c5883a 	add	r2,r2,r3
   25ed0:	3800071e 	bne	r7,zero,25ef0 <_free_r+0x1d4>
   25ed4:	81fffe17 	ldw	r7,-8(r16)
   25ed8:	31cdc83a 	sub	r6,r6,r7
   25edc:	30c00317 	ldw	r3,12(r6)
   25ee0:	31400217 	ldw	r5,8(r6)
   25ee4:	11c5883a 	add	r2,r2,r7
   25ee8:	28c00315 	stw	r3,12(r5)
   25eec:	19400215 	stw	r5,8(r3)
   25ef0:	10c00054 	ori	r3,r2,1
   25ef4:	30c00115 	stw	r3,4(r6)
   25ef8:	00c000f4 	movhi	r3,3
   25efc:	18c44404 	addi	r3,r3,4368
   25f00:	18c00017 	ldw	r3,0(r3)
   25f04:	21800215 	stw	r6,8(r4)
   25f08:	10ffc036 	bltu	r2,r3,25e0c <__alt_data_end+0xfffe5e0c>
   25f0c:	008000f4 	movhi	r2,3
   25f10:	108b1004 	addi	r2,r2,11328
   25f14:	11400017 	ldw	r5,0(r2)
   25f18:	8809883a 	mov	r4,r17
   25f1c:	0025bf80 	call	25bf8 <_malloc_trim_r>
   25f20:	003fba06 	br	25e0c <__alt_data_end+0xfffe5e0c>
   25f24:	28c9883a 	add	r4,r5,r3
   25f28:	21000117 	ldw	r4,4(r4)
   25f2c:	2100004c 	andi	r4,r4,1
   25f30:	2000391e 	bne	r4,zero,26018 <_free_r+0x2fc>
   25f34:	29c00217 	ldw	r7,8(r5)
   25f38:	29000317 	ldw	r4,12(r5)
   25f3c:	1885883a 	add	r2,r3,r2
   25f40:	10c00054 	ori	r3,r2,1
   25f44:	39000315 	stw	r4,12(r7)
   25f48:	21c00215 	stw	r7,8(r4)
   25f4c:	30c00115 	stw	r3,4(r6)
   25f50:	308d883a 	add	r6,r6,r2
   25f54:	30800015 	stw	r2,0(r6)
   25f58:	003fac06 	br	25e0c <__alt_data_end+0xfffe5e0c>
   25f5c:	00c00504 	movi	r3,20
   25f60:	19401536 	bltu	r3,r5,25fb8 <_free_r+0x29c>
   25f64:	28c01704 	addi	r3,r5,92
   25f68:	18c7883a 	add	r3,r3,r3
   25f6c:	294016c4 	addi	r5,r5,91
   25f70:	003fb406 	br	25e44 <__alt_data_end+0xfffe5e44>
   25f74:	280bd0ba 	srai	r5,r5,2
   25f78:	00c00044 	movi	r3,1
   25f7c:	38800117 	ldw	r2,4(r7)
   25f80:	194a983a 	sll	r5,r3,r5
   25f84:	2007883a 	mov	r3,r4
   25f88:	2884b03a 	or	r2,r5,r2
   25f8c:	38800115 	stw	r2,4(r7)
   25f90:	003fbb06 	br	25e80 <__alt_data_end+0xfffe5e80>
   25f94:	21800515 	stw	r6,20(r4)
   25f98:	21800415 	stw	r6,16(r4)
   25f9c:	10c00054 	ori	r3,r2,1
   25fa0:	31c00315 	stw	r7,12(r6)
   25fa4:	31c00215 	stw	r7,8(r6)
   25fa8:	30c00115 	stw	r3,4(r6)
   25fac:	308d883a 	add	r6,r6,r2
   25fb0:	30800015 	stw	r2,0(r6)
   25fb4:	003f9506 	br	25e0c <__alt_data_end+0xfffe5e0c>
   25fb8:	00c01504 	movi	r3,84
   25fbc:	19400536 	bltu	r3,r5,25fd4 <_free_r+0x2b8>
   25fc0:	100ad33a 	srli	r5,r2,12
   25fc4:	28c01bc4 	addi	r3,r5,111
   25fc8:	18c7883a 	add	r3,r3,r3
   25fcc:	29401b84 	addi	r5,r5,110
   25fd0:	003f9c06 	br	25e44 <__alt_data_end+0xfffe5e44>
   25fd4:	00c05504 	movi	r3,340
   25fd8:	19400536 	bltu	r3,r5,25ff0 <_free_r+0x2d4>
   25fdc:	100ad3fa 	srli	r5,r2,15
   25fe0:	28c01e04 	addi	r3,r5,120
   25fe4:	18c7883a 	add	r3,r3,r3
   25fe8:	29401dc4 	addi	r5,r5,119
   25fec:	003f9506 	br	25e44 <__alt_data_end+0xfffe5e44>
   25ff0:	00c15504 	movi	r3,1364
   25ff4:	19400536 	bltu	r3,r5,2600c <_free_r+0x2f0>
   25ff8:	100ad4ba 	srli	r5,r2,18
   25ffc:	28c01f44 	addi	r3,r5,125
   26000:	18c7883a 	add	r3,r3,r3
   26004:	29401f04 	addi	r5,r5,124
   26008:	003f8e06 	br	25e44 <__alt_data_end+0xfffe5e44>
   2600c:	00c03f84 	movi	r3,254
   26010:	01401f84 	movi	r5,126
   26014:	003f8b06 	br	25e44 <__alt_data_end+0xfffe5e44>
   26018:	10c00054 	ori	r3,r2,1
   2601c:	30c00115 	stw	r3,4(r6)
   26020:	308d883a 	add	r6,r6,r2
   26024:	30800015 	stw	r2,0(r6)
   26028:	003f7806 	br	25e0c <__alt_data_end+0xfffe5e0c>

0002602c <_fwalk>:
   2602c:	defff704 	addi	sp,sp,-36
   26030:	dd000415 	stw	r20,16(sp)
   26034:	dfc00815 	stw	ra,32(sp)
   26038:	ddc00715 	stw	r23,28(sp)
   2603c:	dd800615 	stw	r22,24(sp)
   26040:	dd400515 	stw	r21,20(sp)
   26044:	dcc00315 	stw	r19,12(sp)
   26048:	dc800215 	stw	r18,8(sp)
   2604c:	dc400115 	stw	r17,4(sp)
   26050:	dc000015 	stw	r16,0(sp)
   26054:	2500b804 	addi	r20,r4,736
   26058:	a0002326 	beq	r20,zero,260e8 <_fwalk+0xbc>
   2605c:	282b883a 	mov	r21,r5
   26060:	002f883a 	mov	r23,zero
   26064:	05800044 	movi	r22,1
   26068:	04ffffc4 	movi	r19,-1
   2606c:	a4400117 	ldw	r17,4(r20)
   26070:	a4800217 	ldw	r18,8(r20)
   26074:	8c7fffc4 	addi	r17,r17,-1
   26078:	88000d16 	blt	r17,zero,260b0 <_fwalk+0x84>
   2607c:	94000304 	addi	r16,r18,12
   26080:	94800384 	addi	r18,r18,14
   26084:	8080000b 	ldhu	r2,0(r16)
   26088:	8c7fffc4 	addi	r17,r17,-1
   2608c:	813ffd04 	addi	r4,r16,-12
   26090:	b080042e 	bgeu	r22,r2,260a4 <_fwalk+0x78>
   26094:	9080000f 	ldh	r2,0(r18)
   26098:	14c00226 	beq	r2,r19,260a4 <_fwalk+0x78>
   2609c:	a83ee83a 	callr	r21
   260a0:	b8aeb03a 	or	r23,r23,r2
   260a4:	84001a04 	addi	r16,r16,104
   260a8:	94801a04 	addi	r18,r18,104
   260ac:	8cfff51e 	bne	r17,r19,26084 <__alt_data_end+0xfffe6084>
   260b0:	a5000017 	ldw	r20,0(r20)
   260b4:	a03fed1e 	bne	r20,zero,2606c <__alt_data_end+0xfffe606c>
   260b8:	b805883a 	mov	r2,r23
   260bc:	dfc00817 	ldw	ra,32(sp)
   260c0:	ddc00717 	ldw	r23,28(sp)
   260c4:	dd800617 	ldw	r22,24(sp)
   260c8:	dd400517 	ldw	r21,20(sp)
   260cc:	dd000417 	ldw	r20,16(sp)
   260d0:	dcc00317 	ldw	r19,12(sp)
   260d4:	dc800217 	ldw	r18,8(sp)
   260d8:	dc400117 	ldw	r17,4(sp)
   260dc:	dc000017 	ldw	r16,0(sp)
   260e0:	dec00904 	addi	sp,sp,36
   260e4:	f800283a 	ret
   260e8:	002f883a 	mov	r23,zero
   260ec:	003ff206 	br	260b8 <__alt_data_end+0xfffe60b8>

000260f0 <_fwalk_reent>:
   260f0:	defff704 	addi	sp,sp,-36
   260f4:	dd000415 	stw	r20,16(sp)
   260f8:	dfc00815 	stw	ra,32(sp)
   260fc:	ddc00715 	stw	r23,28(sp)
   26100:	dd800615 	stw	r22,24(sp)
   26104:	dd400515 	stw	r21,20(sp)
   26108:	dcc00315 	stw	r19,12(sp)
   2610c:	dc800215 	stw	r18,8(sp)
   26110:	dc400115 	stw	r17,4(sp)
   26114:	dc000015 	stw	r16,0(sp)
   26118:	2500b804 	addi	r20,r4,736
   2611c:	a0002326 	beq	r20,zero,261ac <_fwalk_reent+0xbc>
   26120:	282b883a 	mov	r21,r5
   26124:	2027883a 	mov	r19,r4
   26128:	002f883a 	mov	r23,zero
   2612c:	05800044 	movi	r22,1
   26130:	04bfffc4 	movi	r18,-1
   26134:	a4400117 	ldw	r17,4(r20)
   26138:	a4000217 	ldw	r16,8(r20)
   2613c:	8c7fffc4 	addi	r17,r17,-1
   26140:	88000c16 	blt	r17,zero,26174 <_fwalk_reent+0x84>
   26144:	84000304 	addi	r16,r16,12
   26148:	8080000b 	ldhu	r2,0(r16)
   2614c:	8c7fffc4 	addi	r17,r17,-1
   26150:	817ffd04 	addi	r5,r16,-12
   26154:	b080052e 	bgeu	r22,r2,2616c <_fwalk_reent+0x7c>
   26158:	8080008f 	ldh	r2,2(r16)
   2615c:	9809883a 	mov	r4,r19
   26160:	14800226 	beq	r2,r18,2616c <_fwalk_reent+0x7c>
   26164:	a83ee83a 	callr	r21
   26168:	b8aeb03a 	or	r23,r23,r2
   2616c:	84001a04 	addi	r16,r16,104
   26170:	8cbff51e 	bne	r17,r18,26148 <__alt_data_end+0xfffe6148>
   26174:	a5000017 	ldw	r20,0(r20)
   26178:	a03fee1e 	bne	r20,zero,26134 <__alt_data_end+0xfffe6134>
   2617c:	b805883a 	mov	r2,r23
   26180:	dfc00817 	ldw	ra,32(sp)
   26184:	ddc00717 	ldw	r23,28(sp)
   26188:	dd800617 	ldw	r22,24(sp)
   2618c:	dd400517 	ldw	r21,20(sp)
   26190:	dd000417 	ldw	r20,16(sp)
   26194:	dcc00317 	ldw	r19,12(sp)
   26198:	dc800217 	ldw	r18,8(sp)
   2619c:	dc400117 	ldw	r17,4(sp)
   261a0:	dc000017 	ldw	r16,0(sp)
   261a4:	dec00904 	addi	sp,sp,36
   261a8:	f800283a 	ret
   261ac:	002f883a 	mov	r23,zero
   261b0:	003ff206 	br	2617c <__alt_data_end+0xfffe617c>

000261b4 <_setlocale_r>:
   261b4:	30001b26 	beq	r6,zero,26224 <_setlocale_r+0x70>
   261b8:	014000f4 	movhi	r5,3
   261bc:	defffe04 	addi	sp,sp,-8
   261c0:	297d3404 	addi	r5,r5,-2864
   261c4:	3009883a 	mov	r4,r6
   261c8:	dc000015 	stw	r16,0(sp)
   261cc:	dfc00115 	stw	ra,4(sp)
   261d0:	3021883a 	mov	r16,r6
   261d4:	00281ac0 	call	281ac <strcmp>
   261d8:	1000061e 	bne	r2,zero,261f4 <_setlocale_r+0x40>
   261dc:	008000f4 	movhi	r2,3
   261e0:	10bd3304 	addi	r2,r2,-2868
   261e4:	dfc00117 	ldw	ra,4(sp)
   261e8:	dc000017 	ldw	r16,0(sp)
   261ec:	dec00204 	addi	sp,sp,8
   261f0:	f800283a 	ret
   261f4:	014000f4 	movhi	r5,3
   261f8:	297d3304 	addi	r5,r5,-2868
   261fc:	8009883a 	mov	r4,r16
   26200:	00281ac0 	call	281ac <strcmp>
   26204:	103ff526 	beq	r2,zero,261dc <__alt_data_end+0xfffe61dc>
   26208:	014000f4 	movhi	r5,3
   2620c:	297d1e04 	addi	r5,r5,-2952
   26210:	8009883a 	mov	r4,r16
   26214:	00281ac0 	call	281ac <strcmp>
   26218:	103ff026 	beq	r2,zero,261dc <__alt_data_end+0xfffe61dc>
   2621c:	0005883a 	mov	r2,zero
   26220:	003ff006 	br	261e4 <__alt_data_end+0xfffe61e4>
   26224:	008000f4 	movhi	r2,3
   26228:	10bd3304 	addi	r2,r2,-2868
   2622c:	f800283a 	ret

00026230 <__locale_charset>:
   26230:	008000f4 	movhi	r2,3
   26234:	10bea604 	addi	r2,r2,-1384
   26238:	f800283a 	ret

0002623c <__locale_mb_cur_max>:
   2623c:	008000f4 	movhi	r2,3
   26240:	10844204 	addi	r2,r2,4360
   26244:	10800017 	ldw	r2,0(r2)
   26248:	f800283a 	ret

0002624c <__locale_msgcharset>:
   2624c:	008000f4 	movhi	r2,3
   26250:	10be9e04 	addi	r2,r2,-1416
   26254:	f800283a 	ret

00026258 <__locale_cjk_lang>:
   26258:	0005883a 	mov	r2,zero
   2625c:	f800283a 	ret

00026260 <_localeconv_r>:
   26260:	008000f4 	movhi	r2,3
   26264:	10beae04 	addi	r2,r2,-1352
   26268:	f800283a 	ret

0002626c <setlocale>:
   2626c:	008000f4 	movhi	r2,3
   26270:	10844104 	addi	r2,r2,4356
   26274:	280d883a 	mov	r6,r5
   26278:	200b883a 	mov	r5,r4
   2627c:	11000017 	ldw	r4,0(r2)
   26280:	00261b41 	jmpi	261b4 <_setlocale_r>

00026284 <localeconv>:
   26284:	008000f4 	movhi	r2,3
   26288:	10beae04 	addi	r2,r2,-1352
   2628c:	f800283a 	ret

00026290 <__smakebuf_r>:
   26290:	2880030b 	ldhu	r2,12(r5)
   26294:	10c0008c 	andi	r3,r2,2
   26298:	1800411e 	bne	r3,zero,263a0 <__smakebuf_r+0x110>
   2629c:	deffec04 	addi	sp,sp,-80
   262a0:	dc000f15 	stw	r16,60(sp)
   262a4:	2821883a 	mov	r16,r5
   262a8:	2940038f 	ldh	r5,14(r5)
   262ac:	dc401015 	stw	r17,64(sp)
   262b0:	dfc01315 	stw	ra,76(sp)
   262b4:	dcc01215 	stw	r19,72(sp)
   262b8:	dc801115 	stw	r18,68(sp)
   262bc:	2023883a 	mov	r17,r4
   262c0:	28001c16 	blt	r5,zero,26334 <__smakebuf_r+0xa4>
   262c4:	d80d883a 	mov	r6,sp
   262c8:	0029dec0 	call	29dec <_fstat_r>
   262cc:	10001816 	blt	r2,zero,26330 <__smakebuf_r+0xa0>
   262d0:	d8800117 	ldw	r2,4(sp)
   262d4:	00e00014 	movui	r3,32768
   262d8:	10bc000c 	andi	r2,r2,61440
   262dc:	14c80020 	cmpeqi	r19,r2,8192
   262e0:	10c03726 	beq	r2,r3,263c0 <__smakebuf_r+0x130>
   262e4:	80c0030b 	ldhu	r3,12(r16)
   262e8:	18c20014 	ori	r3,r3,2048
   262ec:	80c0030d 	sth	r3,12(r16)
   262f0:	00c80004 	movi	r3,8192
   262f4:	10c0521e 	bne	r2,r3,26440 <__smakebuf_r+0x1b0>
   262f8:	8140038f 	ldh	r5,14(r16)
   262fc:	8809883a 	mov	r4,r17
   26300:	002a3040 	call	2a304 <_isatty_r>
   26304:	10004c26 	beq	r2,zero,26438 <__smakebuf_r+0x1a8>
   26308:	8080030b 	ldhu	r2,12(r16)
   2630c:	80c010c4 	addi	r3,r16,67
   26310:	80c00015 	stw	r3,0(r16)
   26314:	10800054 	ori	r2,r2,1
   26318:	8080030d 	sth	r2,12(r16)
   2631c:	00800044 	movi	r2,1
   26320:	80c00415 	stw	r3,16(r16)
   26324:	80800515 	stw	r2,20(r16)
   26328:	04810004 	movi	r18,1024
   2632c:	00000706 	br	2634c <__smakebuf_r+0xbc>
   26330:	8080030b 	ldhu	r2,12(r16)
   26334:	10c0200c 	andi	r3,r2,128
   26338:	18001f1e 	bne	r3,zero,263b8 <__smakebuf_r+0x128>
   2633c:	04810004 	movi	r18,1024
   26340:	10820014 	ori	r2,r2,2048
   26344:	8080030d 	sth	r2,12(r16)
   26348:	0027883a 	mov	r19,zero
   2634c:	900b883a 	mov	r5,r18
   26350:	8809883a 	mov	r4,r17
   26354:	002644c0 	call	2644c <_malloc_r>
   26358:	10002c26 	beq	r2,zero,2640c <__smakebuf_r+0x17c>
   2635c:	80c0030b 	ldhu	r3,12(r16)
   26360:	010000b4 	movhi	r4,2
   26364:	21161804 	addi	r4,r4,22624
   26368:	89000f15 	stw	r4,60(r17)
   2636c:	18c02014 	ori	r3,r3,128
   26370:	80c0030d 	sth	r3,12(r16)
   26374:	80800015 	stw	r2,0(r16)
   26378:	80800415 	stw	r2,16(r16)
   2637c:	84800515 	stw	r18,20(r16)
   26380:	98001a1e 	bne	r19,zero,263ec <__smakebuf_r+0x15c>
   26384:	dfc01317 	ldw	ra,76(sp)
   26388:	dcc01217 	ldw	r19,72(sp)
   2638c:	dc801117 	ldw	r18,68(sp)
   26390:	dc401017 	ldw	r17,64(sp)
   26394:	dc000f17 	ldw	r16,60(sp)
   26398:	dec01404 	addi	sp,sp,80
   2639c:	f800283a 	ret
   263a0:	288010c4 	addi	r2,r5,67
   263a4:	28800015 	stw	r2,0(r5)
   263a8:	28800415 	stw	r2,16(r5)
   263ac:	00800044 	movi	r2,1
   263b0:	28800515 	stw	r2,20(r5)
   263b4:	f800283a 	ret
   263b8:	04801004 	movi	r18,64
   263bc:	003fe006 	br	26340 <__alt_data_end+0xfffe6340>
   263c0:	81000a17 	ldw	r4,40(r16)
   263c4:	00c000f4 	movhi	r3,3
   263c8:	18e05204 	addi	r3,r3,-32440
   263cc:	20ffc51e 	bne	r4,r3,262e4 <__alt_data_end+0xfffe62e4>
   263d0:	8080030b 	ldhu	r2,12(r16)
   263d4:	04810004 	movi	r18,1024
   263d8:	84801315 	stw	r18,76(r16)
   263dc:	1484b03a 	or	r2,r2,r18
   263e0:	8080030d 	sth	r2,12(r16)
   263e4:	0027883a 	mov	r19,zero
   263e8:	003fd806 	br	2634c <__alt_data_end+0xfffe634c>
   263ec:	8140038f 	ldh	r5,14(r16)
   263f0:	8809883a 	mov	r4,r17
   263f4:	002a3040 	call	2a304 <_isatty_r>
   263f8:	103fe226 	beq	r2,zero,26384 <__alt_data_end+0xfffe6384>
   263fc:	8080030b 	ldhu	r2,12(r16)
   26400:	10800054 	ori	r2,r2,1
   26404:	8080030d 	sth	r2,12(r16)
   26408:	003fde06 	br	26384 <__alt_data_end+0xfffe6384>
   2640c:	8080030b 	ldhu	r2,12(r16)
   26410:	10c0800c 	andi	r3,r2,512
   26414:	183fdb1e 	bne	r3,zero,26384 <__alt_data_end+0xfffe6384>
   26418:	10800094 	ori	r2,r2,2
   2641c:	80c010c4 	addi	r3,r16,67
   26420:	8080030d 	sth	r2,12(r16)
   26424:	00800044 	movi	r2,1
   26428:	80c00015 	stw	r3,0(r16)
   2642c:	80c00415 	stw	r3,16(r16)
   26430:	80800515 	stw	r2,20(r16)
   26434:	003fd306 	br	26384 <__alt_data_end+0xfffe6384>
   26438:	04810004 	movi	r18,1024
   2643c:	003fc306 	br	2634c <__alt_data_end+0xfffe634c>
   26440:	0027883a 	mov	r19,zero
   26444:	04810004 	movi	r18,1024
   26448:	003fc006 	br	2634c <__alt_data_end+0xfffe634c>

0002644c <_malloc_r>:
   2644c:	defff504 	addi	sp,sp,-44
   26450:	dc800315 	stw	r18,12(sp)
   26454:	dfc00a15 	stw	ra,40(sp)
   26458:	df000915 	stw	fp,36(sp)
   2645c:	ddc00815 	stw	r23,32(sp)
   26460:	dd800715 	stw	r22,28(sp)
   26464:	dd400615 	stw	r21,24(sp)
   26468:	dd000515 	stw	r20,20(sp)
   2646c:	dcc00415 	stw	r19,16(sp)
   26470:	dc400215 	stw	r17,8(sp)
   26474:	dc000115 	stw	r16,4(sp)
   26478:	288002c4 	addi	r2,r5,11
   2647c:	00c00584 	movi	r3,22
   26480:	2025883a 	mov	r18,r4
   26484:	18807f2e 	bgeu	r3,r2,26684 <_malloc_r+0x238>
   26488:	047ffe04 	movi	r17,-8
   2648c:	1462703a 	and	r17,r2,r17
   26490:	8800a316 	blt	r17,zero,26720 <_malloc_r+0x2d4>
   26494:	8940a236 	bltu	r17,r5,26720 <_malloc_r+0x2d4>
   26498:	002d2300 	call	2d230 <__malloc_lock>
   2649c:	00807dc4 	movi	r2,503
   264a0:	1441e92e 	bgeu	r2,r17,26c48 <_malloc_r+0x7fc>
   264a4:	8804d27a 	srli	r2,r17,9
   264a8:	1000a126 	beq	r2,zero,26730 <_malloc_r+0x2e4>
   264ac:	00c00104 	movi	r3,4
   264b0:	18811e36 	bltu	r3,r2,2692c <_malloc_r+0x4e0>
   264b4:	8804d1ba 	srli	r2,r17,6
   264b8:	12000e44 	addi	r8,r2,57
   264bc:	11c00e04 	addi	r7,r2,56
   264c0:	4209883a 	add	r4,r8,r8
   264c4:	04c000f4 	movhi	r19,3
   264c8:	2109883a 	add	r4,r4,r4
   264cc:	9cfebc04 	addi	r19,r19,-1296
   264d0:	2109883a 	add	r4,r4,r4
   264d4:	9909883a 	add	r4,r19,r4
   264d8:	24000117 	ldw	r16,4(r4)
   264dc:	213ffe04 	addi	r4,r4,-8
   264e0:	24009726 	beq	r4,r16,26740 <_malloc_r+0x2f4>
   264e4:	80800117 	ldw	r2,4(r16)
   264e8:	01bfff04 	movi	r6,-4
   264ec:	014003c4 	movi	r5,15
   264f0:	1184703a 	and	r2,r2,r6
   264f4:	1447c83a 	sub	r3,r2,r17
   264f8:	28c00716 	blt	r5,r3,26518 <_malloc_r+0xcc>
   264fc:	1800920e 	bge	r3,zero,26748 <_malloc_r+0x2fc>
   26500:	84000317 	ldw	r16,12(r16)
   26504:	24008e26 	beq	r4,r16,26740 <_malloc_r+0x2f4>
   26508:	80800117 	ldw	r2,4(r16)
   2650c:	1184703a 	and	r2,r2,r6
   26510:	1447c83a 	sub	r3,r2,r17
   26514:	28fff90e 	bge	r5,r3,264fc <__alt_data_end+0xfffe64fc>
   26518:	3809883a 	mov	r4,r7
   2651c:	018000f4 	movhi	r6,3
   26520:	9c000417 	ldw	r16,16(r19)
   26524:	31bebc04 	addi	r6,r6,-1296
   26528:	32000204 	addi	r8,r6,8
   2652c:	82013426 	beq	r16,r8,26a00 <_malloc_r+0x5b4>
   26530:	80c00117 	ldw	r3,4(r16)
   26534:	00bfff04 	movi	r2,-4
   26538:	188e703a 	and	r7,r3,r2
   2653c:	3c45c83a 	sub	r2,r7,r17
   26540:	00c003c4 	movi	r3,15
   26544:	18811f16 	blt	r3,r2,269c4 <_malloc_r+0x578>
   26548:	32000515 	stw	r8,20(r6)
   2654c:	32000415 	stw	r8,16(r6)
   26550:	10007f0e 	bge	r2,zero,26750 <_malloc_r+0x304>
   26554:	00807fc4 	movi	r2,511
   26558:	11c0fd36 	bltu	r2,r7,26950 <_malloc_r+0x504>
   2655c:	3806d0fa 	srli	r3,r7,3
   26560:	01c00044 	movi	r7,1
   26564:	30800117 	ldw	r2,4(r6)
   26568:	19400044 	addi	r5,r3,1
   2656c:	294b883a 	add	r5,r5,r5
   26570:	1807d0ba 	srai	r3,r3,2
   26574:	294b883a 	add	r5,r5,r5
   26578:	294b883a 	add	r5,r5,r5
   2657c:	298b883a 	add	r5,r5,r6
   26580:	38c6983a 	sll	r3,r7,r3
   26584:	29c00017 	ldw	r7,0(r5)
   26588:	2a7ffe04 	addi	r9,r5,-8
   2658c:	1886b03a 	or	r3,r3,r2
   26590:	82400315 	stw	r9,12(r16)
   26594:	81c00215 	stw	r7,8(r16)
   26598:	30c00115 	stw	r3,4(r6)
   2659c:	2c000015 	stw	r16,0(r5)
   265a0:	3c000315 	stw	r16,12(r7)
   265a4:	2005d0ba 	srai	r2,r4,2
   265a8:	01400044 	movi	r5,1
   265ac:	288a983a 	sll	r5,r5,r2
   265b0:	19406f36 	bltu	r3,r5,26770 <_malloc_r+0x324>
   265b4:	28c4703a 	and	r2,r5,r3
   265b8:	10000a1e 	bne	r2,zero,265e4 <_malloc_r+0x198>
   265bc:	00bfff04 	movi	r2,-4
   265c0:	294b883a 	add	r5,r5,r5
   265c4:	2088703a 	and	r4,r4,r2
   265c8:	28c4703a 	and	r2,r5,r3
   265cc:	21000104 	addi	r4,r4,4
   265d0:	1000041e 	bne	r2,zero,265e4 <_malloc_r+0x198>
   265d4:	294b883a 	add	r5,r5,r5
   265d8:	28c4703a 	and	r2,r5,r3
   265dc:	21000104 	addi	r4,r4,4
   265e0:	103ffc26 	beq	r2,zero,265d4 <__alt_data_end+0xfffe65d4>
   265e4:	02bfff04 	movi	r10,-4
   265e8:	024003c4 	movi	r9,15
   265ec:	21800044 	addi	r6,r4,1
   265f0:	318d883a 	add	r6,r6,r6
   265f4:	318d883a 	add	r6,r6,r6
   265f8:	318d883a 	add	r6,r6,r6
   265fc:	998d883a 	add	r6,r19,r6
   26600:	333ffe04 	addi	r12,r6,-8
   26604:	2017883a 	mov	r11,r4
   26608:	31800104 	addi	r6,r6,4
   2660c:	34000017 	ldw	r16,0(r6)
   26610:	31fffd04 	addi	r7,r6,-12
   26614:	81c0041e 	bne	r16,r7,26628 <_malloc_r+0x1dc>
   26618:	0000fb06 	br	26a08 <_malloc_r+0x5bc>
   2661c:	1801030e 	bge	r3,zero,26a2c <_malloc_r+0x5e0>
   26620:	84000317 	ldw	r16,12(r16)
   26624:	81c0f826 	beq	r16,r7,26a08 <_malloc_r+0x5bc>
   26628:	80800117 	ldw	r2,4(r16)
   2662c:	1284703a 	and	r2,r2,r10
   26630:	1447c83a 	sub	r3,r2,r17
   26634:	48fff90e 	bge	r9,r3,2661c <__alt_data_end+0xfffe661c>
   26638:	80800317 	ldw	r2,12(r16)
   2663c:	81000217 	ldw	r4,8(r16)
   26640:	89400054 	ori	r5,r17,1
   26644:	81400115 	stw	r5,4(r16)
   26648:	20800315 	stw	r2,12(r4)
   2664c:	11000215 	stw	r4,8(r2)
   26650:	8463883a 	add	r17,r16,r17
   26654:	9c400515 	stw	r17,20(r19)
   26658:	9c400415 	stw	r17,16(r19)
   2665c:	18800054 	ori	r2,r3,1
   26660:	88800115 	stw	r2,4(r17)
   26664:	8a000315 	stw	r8,12(r17)
   26668:	8a000215 	stw	r8,8(r17)
   2666c:	88e3883a 	add	r17,r17,r3
   26670:	88c00015 	stw	r3,0(r17)
   26674:	9009883a 	mov	r4,r18
   26678:	002d2540 	call	2d254 <__malloc_unlock>
   2667c:	80800204 	addi	r2,r16,8
   26680:	00001b06 	br	266f0 <_malloc_r+0x2a4>
   26684:	04400404 	movi	r17,16
   26688:	89402536 	bltu	r17,r5,26720 <_malloc_r+0x2d4>
   2668c:	002d2300 	call	2d230 <__malloc_lock>
   26690:	00800184 	movi	r2,6
   26694:	01000084 	movi	r4,2
   26698:	04c000f4 	movhi	r19,3
   2669c:	1085883a 	add	r2,r2,r2
   266a0:	9cfebc04 	addi	r19,r19,-1296
   266a4:	1085883a 	add	r2,r2,r2
   266a8:	9885883a 	add	r2,r19,r2
   266ac:	14000117 	ldw	r16,4(r2)
   266b0:	10fffe04 	addi	r3,r2,-8
   266b4:	80c0d926 	beq	r16,r3,26a1c <_malloc_r+0x5d0>
   266b8:	80c00117 	ldw	r3,4(r16)
   266bc:	81000317 	ldw	r4,12(r16)
   266c0:	00bfff04 	movi	r2,-4
   266c4:	1884703a 	and	r2,r3,r2
   266c8:	81400217 	ldw	r5,8(r16)
   266cc:	8085883a 	add	r2,r16,r2
   266d0:	10c00117 	ldw	r3,4(r2)
   266d4:	29000315 	stw	r4,12(r5)
   266d8:	21400215 	stw	r5,8(r4)
   266dc:	18c00054 	ori	r3,r3,1
   266e0:	10c00115 	stw	r3,4(r2)
   266e4:	9009883a 	mov	r4,r18
   266e8:	002d2540 	call	2d254 <__malloc_unlock>
   266ec:	80800204 	addi	r2,r16,8
   266f0:	dfc00a17 	ldw	ra,40(sp)
   266f4:	df000917 	ldw	fp,36(sp)
   266f8:	ddc00817 	ldw	r23,32(sp)
   266fc:	dd800717 	ldw	r22,28(sp)
   26700:	dd400617 	ldw	r21,24(sp)
   26704:	dd000517 	ldw	r20,20(sp)
   26708:	dcc00417 	ldw	r19,16(sp)
   2670c:	dc800317 	ldw	r18,12(sp)
   26710:	dc400217 	ldw	r17,8(sp)
   26714:	dc000117 	ldw	r16,4(sp)
   26718:	dec00b04 	addi	sp,sp,44
   2671c:	f800283a 	ret
   26720:	00800304 	movi	r2,12
   26724:	90800015 	stw	r2,0(r18)
   26728:	0005883a 	mov	r2,zero
   2672c:	003ff006 	br	266f0 <__alt_data_end+0xfffe66f0>
   26730:	01002004 	movi	r4,128
   26734:	02001004 	movi	r8,64
   26738:	01c00fc4 	movi	r7,63
   2673c:	003f6106 	br	264c4 <__alt_data_end+0xfffe64c4>
   26740:	4009883a 	mov	r4,r8
   26744:	003f7506 	br	2651c <__alt_data_end+0xfffe651c>
   26748:	81000317 	ldw	r4,12(r16)
   2674c:	003fde06 	br	266c8 <__alt_data_end+0xfffe66c8>
   26750:	81c5883a 	add	r2,r16,r7
   26754:	11400117 	ldw	r5,4(r2)
   26758:	9009883a 	mov	r4,r18
   2675c:	29400054 	ori	r5,r5,1
   26760:	11400115 	stw	r5,4(r2)
   26764:	002d2540 	call	2d254 <__malloc_unlock>
   26768:	80800204 	addi	r2,r16,8
   2676c:	003fe006 	br	266f0 <__alt_data_end+0xfffe66f0>
   26770:	9c000217 	ldw	r16,8(r19)
   26774:	00bfff04 	movi	r2,-4
   26778:	85800117 	ldw	r22,4(r16)
   2677c:	b0ac703a 	and	r22,r22,r2
   26780:	b4400336 	bltu	r22,r17,26790 <_malloc_r+0x344>
   26784:	b445c83a 	sub	r2,r22,r17
   26788:	00c003c4 	movi	r3,15
   2678c:	18805d16 	blt	r3,r2,26904 <_malloc_r+0x4b8>
   26790:	05c000f4 	movhi	r23,3
   26794:	008000f4 	movhi	r2,3
   26798:	108b1004 	addi	r2,r2,11328
   2679c:	bdc44304 	addi	r23,r23,4364
   267a0:	15400017 	ldw	r21,0(r2)
   267a4:	b8c00017 	ldw	r3,0(r23)
   267a8:	00bfffc4 	movi	r2,-1
   267ac:	858d883a 	add	r6,r16,r22
   267b0:	8d6b883a 	add	r21,r17,r21
   267b4:	1880ea26 	beq	r3,r2,26b60 <_malloc_r+0x714>
   267b8:	ad4403c4 	addi	r21,r21,4111
   267bc:	00bc0004 	movi	r2,-4096
   267c0:	a8aa703a 	and	r21,r21,r2
   267c4:	a80b883a 	mov	r5,r21
   267c8:	9009883a 	mov	r4,r18
   267cc:	d9800015 	stw	r6,0(sp)
   267d0:	002801c0 	call	2801c <_sbrk_r>
   267d4:	1029883a 	mov	r20,r2
   267d8:	00bfffc4 	movi	r2,-1
   267dc:	d9800017 	ldw	r6,0(sp)
   267e0:	a080e826 	beq	r20,r2,26b84 <_malloc_r+0x738>
   267e4:	a180a636 	bltu	r20,r6,26a80 <_malloc_r+0x634>
   267e8:	070000f4 	movhi	fp,3
   267ec:	e70b1904 	addi	fp,fp,11364
   267f0:	e0800017 	ldw	r2,0(fp)
   267f4:	a887883a 	add	r3,r21,r2
   267f8:	e0c00015 	stw	r3,0(fp)
   267fc:	3500e626 	beq	r6,r20,26b98 <_malloc_r+0x74c>
   26800:	b9000017 	ldw	r4,0(r23)
   26804:	00bfffc4 	movi	r2,-1
   26808:	2080ee26 	beq	r4,r2,26bc4 <_malloc_r+0x778>
   2680c:	a185c83a 	sub	r2,r20,r6
   26810:	10c5883a 	add	r2,r2,r3
   26814:	e0800015 	stw	r2,0(fp)
   26818:	a0c001cc 	andi	r3,r20,7
   2681c:	1800bc26 	beq	r3,zero,26b10 <_malloc_r+0x6c4>
   26820:	a0e9c83a 	sub	r20,r20,r3
   26824:	00840204 	movi	r2,4104
   26828:	a5000204 	addi	r20,r20,8
   2682c:	10c7c83a 	sub	r3,r2,r3
   26830:	a545883a 	add	r2,r20,r21
   26834:	1083ffcc 	andi	r2,r2,4095
   26838:	18abc83a 	sub	r21,r3,r2
   2683c:	a80b883a 	mov	r5,r21
   26840:	9009883a 	mov	r4,r18
   26844:	002801c0 	call	2801c <_sbrk_r>
   26848:	00ffffc4 	movi	r3,-1
   2684c:	10c0e126 	beq	r2,r3,26bd4 <_malloc_r+0x788>
   26850:	1505c83a 	sub	r2,r2,r20
   26854:	1545883a 	add	r2,r2,r21
   26858:	10800054 	ori	r2,r2,1
   2685c:	e0c00017 	ldw	r3,0(fp)
   26860:	9d000215 	stw	r20,8(r19)
   26864:	a0800115 	stw	r2,4(r20)
   26868:	a8c7883a 	add	r3,r21,r3
   2686c:	e0c00015 	stw	r3,0(fp)
   26870:	84c00e26 	beq	r16,r19,268ac <_malloc_r+0x460>
   26874:	018003c4 	movi	r6,15
   26878:	3580a72e 	bgeu	r6,r22,26b18 <_malloc_r+0x6cc>
   2687c:	81400117 	ldw	r5,4(r16)
   26880:	013ffe04 	movi	r4,-8
   26884:	b0bffd04 	addi	r2,r22,-12
   26888:	1104703a 	and	r2,r2,r4
   2688c:	2900004c 	andi	r4,r5,1
   26890:	2088b03a 	or	r4,r4,r2
   26894:	81000115 	stw	r4,4(r16)
   26898:	01400144 	movi	r5,5
   2689c:	8089883a 	add	r4,r16,r2
   268a0:	21400115 	stw	r5,4(r4)
   268a4:	21400215 	stw	r5,8(r4)
   268a8:	3080cd36 	bltu	r6,r2,26be0 <_malloc_r+0x794>
   268ac:	008000f4 	movhi	r2,3
   268b0:	108b0f04 	addi	r2,r2,11324
   268b4:	11000017 	ldw	r4,0(r2)
   268b8:	20c0012e 	bgeu	r4,r3,268c0 <_malloc_r+0x474>
   268bc:	10c00015 	stw	r3,0(r2)
   268c0:	008000f4 	movhi	r2,3
   268c4:	108b0e04 	addi	r2,r2,11320
   268c8:	11000017 	ldw	r4,0(r2)
   268cc:	9c000217 	ldw	r16,8(r19)
   268d0:	20c0012e 	bgeu	r4,r3,268d8 <_malloc_r+0x48c>
   268d4:	10c00015 	stw	r3,0(r2)
   268d8:	80c00117 	ldw	r3,4(r16)
   268dc:	00bfff04 	movi	r2,-4
   268e0:	1886703a 	and	r3,r3,r2
   268e4:	1c45c83a 	sub	r2,r3,r17
   268e8:	1c400236 	bltu	r3,r17,268f4 <_malloc_r+0x4a8>
   268ec:	00c003c4 	movi	r3,15
   268f0:	18800416 	blt	r3,r2,26904 <_malloc_r+0x4b8>
   268f4:	9009883a 	mov	r4,r18
   268f8:	002d2540 	call	2d254 <__malloc_unlock>
   268fc:	0005883a 	mov	r2,zero
   26900:	003f7b06 	br	266f0 <__alt_data_end+0xfffe66f0>
   26904:	88c00054 	ori	r3,r17,1
   26908:	80c00115 	stw	r3,4(r16)
   2690c:	8463883a 	add	r17,r16,r17
   26910:	10800054 	ori	r2,r2,1
   26914:	9c400215 	stw	r17,8(r19)
   26918:	88800115 	stw	r2,4(r17)
   2691c:	9009883a 	mov	r4,r18
   26920:	002d2540 	call	2d254 <__malloc_unlock>
   26924:	80800204 	addi	r2,r16,8
   26928:	003f7106 	br	266f0 <__alt_data_end+0xfffe66f0>
   2692c:	00c00504 	movi	r3,20
   26930:	18804a2e 	bgeu	r3,r2,26a5c <_malloc_r+0x610>
   26934:	00c01504 	movi	r3,84
   26938:	18806e36 	bltu	r3,r2,26af4 <_malloc_r+0x6a8>
   2693c:	8804d33a 	srli	r2,r17,12
   26940:	12001bc4 	addi	r8,r2,111
   26944:	11c01b84 	addi	r7,r2,110
   26948:	4209883a 	add	r4,r8,r8
   2694c:	003edd06 	br	264c4 <__alt_data_end+0xfffe64c4>
   26950:	3804d27a 	srli	r2,r7,9
   26954:	00c00104 	movi	r3,4
   26958:	1880442e 	bgeu	r3,r2,26a6c <_malloc_r+0x620>
   2695c:	00c00504 	movi	r3,20
   26960:	18808136 	bltu	r3,r2,26b68 <_malloc_r+0x71c>
   26964:	11401704 	addi	r5,r2,92
   26968:	10c016c4 	addi	r3,r2,91
   2696c:	294b883a 	add	r5,r5,r5
   26970:	294b883a 	add	r5,r5,r5
   26974:	294b883a 	add	r5,r5,r5
   26978:	994b883a 	add	r5,r19,r5
   2697c:	28800017 	ldw	r2,0(r5)
   26980:	018000f4 	movhi	r6,3
   26984:	297ffe04 	addi	r5,r5,-8
   26988:	31bebc04 	addi	r6,r6,-1296
   2698c:	28806526 	beq	r5,r2,26b24 <_malloc_r+0x6d8>
   26990:	01bfff04 	movi	r6,-4
   26994:	10c00117 	ldw	r3,4(r2)
   26998:	1986703a 	and	r3,r3,r6
   2699c:	38c0022e 	bgeu	r7,r3,269a8 <_malloc_r+0x55c>
   269a0:	10800217 	ldw	r2,8(r2)
   269a4:	28bffb1e 	bne	r5,r2,26994 <__alt_data_end+0xfffe6994>
   269a8:	11400317 	ldw	r5,12(r2)
   269ac:	98c00117 	ldw	r3,4(r19)
   269b0:	81400315 	stw	r5,12(r16)
   269b4:	80800215 	stw	r2,8(r16)
   269b8:	2c000215 	stw	r16,8(r5)
   269bc:	14000315 	stw	r16,12(r2)
   269c0:	003ef806 	br	265a4 <__alt_data_end+0xfffe65a4>
   269c4:	88c00054 	ori	r3,r17,1
   269c8:	80c00115 	stw	r3,4(r16)
   269cc:	8463883a 	add	r17,r16,r17
   269d0:	34400515 	stw	r17,20(r6)
   269d4:	34400415 	stw	r17,16(r6)
   269d8:	10c00054 	ori	r3,r2,1
   269dc:	8a000315 	stw	r8,12(r17)
   269e0:	8a000215 	stw	r8,8(r17)
   269e4:	88c00115 	stw	r3,4(r17)
   269e8:	88a3883a 	add	r17,r17,r2
   269ec:	88800015 	stw	r2,0(r17)
   269f0:	9009883a 	mov	r4,r18
   269f4:	002d2540 	call	2d254 <__malloc_unlock>
   269f8:	80800204 	addi	r2,r16,8
   269fc:	003f3c06 	br	266f0 <__alt_data_end+0xfffe66f0>
   26a00:	30c00117 	ldw	r3,4(r6)
   26a04:	003ee706 	br	265a4 <__alt_data_end+0xfffe65a4>
   26a08:	5ac00044 	addi	r11,r11,1
   26a0c:	588000cc 	andi	r2,r11,3
   26a10:	31800204 	addi	r6,r6,8
   26a14:	103efd1e 	bne	r2,zero,2660c <__alt_data_end+0xfffe660c>
   26a18:	00002406 	br	26aac <_malloc_r+0x660>
   26a1c:	14000317 	ldw	r16,12(r2)
   26a20:	143f251e 	bne	r2,r16,266b8 <__alt_data_end+0xfffe66b8>
   26a24:	21000084 	addi	r4,r4,2
   26a28:	003ebc06 	br	2651c <__alt_data_end+0xfffe651c>
   26a2c:	8085883a 	add	r2,r16,r2
   26a30:	10c00117 	ldw	r3,4(r2)
   26a34:	81000317 	ldw	r4,12(r16)
   26a38:	81400217 	ldw	r5,8(r16)
   26a3c:	18c00054 	ori	r3,r3,1
   26a40:	10c00115 	stw	r3,4(r2)
   26a44:	29000315 	stw	r4,12(r5)
   26a48:	21400215 	stw	r5,8(r4)
   26a4c:	9009883a 	mov	r4,r18
   26a50:	002d2540 	call	2d254 <__malloc_unlock>
   26a54:	80800204 	addi	r2,r16,8
   26a58:	003f2506 	br	266f0 <__alt_data_end+0xfffe66f0>
   26a5c:	12001704 	addi	r8,r2,92
   26a60:	11c016c4 	addi	r7,r2,91
   26a64:	4209883a 	add	r4,r8,r8
   26a68:	003e9606 	br	264c4 <__alt_data_end+0xfffe64c4>
   26a6c:	3804d1ba 	srli	r2,r7,6
   26a70:	11400e44 	addi	r5,r2,57
   26a74:	10c00e04 	addi	r3,r2,56
   26a78:	294b883a 	add	r5,r5,r5
   26a7c:	003fbc06 	br	26970 <__alt_data_end+0xfffe6970>
   26a80:	84ff5926 	beq	r16,r19,267e8 <__alt_data_end+0xfffe67e8>
   26a84:	008000f4 	movhi	r2,3
   26a88:	10bebc04 	addi	r2,r2,-1296
   26a8c:	14000217 	ldw	r16,8(r2)
   26a90:	00bfff04 	movi	r2,-4
   26a94:	80c00117 	ldw	r3,4(r16)
   26a98:	1886703a 	and	r3,r3,r2
   26a9c:	003f9106 	br	268e4 <__alt_data_end+0xfffe68e4>
   26aa0:	60800217 	ldw	r2,8(r12)
   26aa4:	213fffc4 	addi	r4,r4,-1
   26aa8:	1300651e 	bne	r2,r12,26c40 <_malloc_r+0x7f4>
   26aac:	208000cc 	andi	r2,r4,3
   26ab0:	633ffe04 	addi	r12,r12,-8
   26ab4:	103ffa1e 	bne	r2,zero,26aa0 <__alt_data_end+0xfffe6aa0>
   26ab8:	98800117 	ldw	r2,4(r19)
   26abc:	0146303a 	nor	r3,zero,r5
   26ac0:	1884703a 	and	r2,r3,r2
   26ac4:	98800115 	stw	r2,4(r19)
   26ac8:	294b883a 	add	r5,r5,r5
   26acc:	117f2836 	bltu	r2,r5,26770 <__alt_data_end+0xfffe6770>
   26ad0:	283f2726 	beq	r5,zero,26770 <__alt_data_end+0xfffe6770>
   26ad4:	2886703a 	and	r3,r5,r2
   26ad8:	5809883a 	mov	r4,r11
   26adc:	183ec31e 	bne	r3,zero,265ec <__alt_data_end+0xfffe65ec>
   26ae0:	294b883a 	add	r5,r5,r5
   26ae4:	2886703a 	and	r3,r5,r2
   26ae8:	21000104 	addi	r4,r4,4
   26aec:	183ffc26 	beq	r3,zero,26ae0 <__alt_data_end+0xfffe6ae0>
   26af0:	003ebe06 	br	265ec <__alt_data_end+0xfffe65ec>
   26af4:	00c05504 	movi	r3,340
   26af8:	18801236 	bltu	r3,r2,26b44 <_malloc_r+0x6f8>
   26afc:	8804d3fa 	srli	r2,r17,15
   26b00:	12001e04 	addi	r8,r2,120
   26b04:	11c01dc4 	addi	r7,r2,119
   26b08:	4209883a 	add	r4,r8,r8
   26b0c:	003e6d06 	br	264c4 <__alt_data_end+0xfffe64c4>
   26b10:	00c40004 	movi	r3,4096
   26b14:	003f4606 	br	26830 <__alt_data_end+0xfffe6830>
   26b18:	00800044 	movi	r2,1
   26b1c:	a0800115 	stw	r2,4(r20)
   26b20:	003f7406 	br	268f4 <__alt_data_end+0xfffe68f4>
   26b24:	1805d0ba 	srai	r2,r3,2
   26b28:	01c00044 	movi	r7,1
   26b2c:	30c00117 	ldw	r3,4(r6)
   26b30:	388e983a 	sll	r7,r7,r2
   26b34:	2805883a 	mov	r2,r5
   26b38:	38c6b03a 	or	r3,r7,r3
   26b3c:	30c00115 	stw	r3,4(r6)
   26b40:	003f9b06 	br	269b0 <__alt_data_end+0xfffe69b0>
   26b44:	00c15504 	movi	r3,1364
   26b48:	18801a36 	bltu	r3,r2,26bb4 <_malloc_r+0x768>
   26b4c:	8804d4ba 	srli	r2,r17,18
   26b50:	12001f44 	addi	r8,r2,125
   26b54:	11c01f04 	addi	r7,r2,124
   26b58:	4209883a 	add	r4,r8,r8
   26b5c:	003e5906 	br	264c4 <__alt_data_end+0xfffe64c4>
   26b60:	ad400404 	addi	r21,r21,16
   26b64:	003f1706 	br	267c4 <__alt_data_end+0xfffe67c4>
   26b68:	00c01504 	movi	r3,84
   26b6c:	18802336 	bltu	r3,r2,26bfc <_malloc_r+0x7b0>
   26b70:	3804d33a 	srli	r2,r7,12
   26b74:	11401bc4 	addi	r5,r2,111
   26b78:	10c01b84 	addi	r3,r2,110
   26b7c:	294b883a 	add	r5,r5,r5
   26b80:	003f7b06 	br	26970 <__alt_data_end+0xfffe6970>
   26b84:	9c000217 	ldw	r16,8(r19)
   26b88:	00bfff04 	movi	r2,-4
   26b8c:	80c00117 	ldw	r3,4(r16)
   26b90:	1886703a 	and	r3,r3,r2
   26b94:	003f5306 	br	268e4 <__alt_data_end+0xfffe68e4>
   26b98:	3083ffcc 	andi	r2,r6,4095
   26b9c:	103f181e 	bne	r2,zero,26800 <__alt_data_end+0xfffe6800>
   26ba0:	99000217 	ldw	r4,8(r19)
   26ba4:	b545883a 	add	r2,r22,r21
   26ba8:	10800054 	ori	r2,r2,1
   26bac:	20800115 	stw	r2,4(r4)
   26bb0:	003f3e06 	br	268ac <__alt_data_end+0xfffe68ac>
   26bb4:	01003f84 	movi	r4,254
   26bb8:	02001fc4 	movi	r8,127
   26bbc:	01c01f84 	movi	r7,126
   26bc0:	003e4006 	br	264c4 <__alt_data_end+0xfffe64c4>
   26bc4:	008000f4 	movhi	r2,3
   26bc8:	10844304 	addi	r2,r2,4364
   26bcc:	15000015 	stw	r20,0(r2)
   26bd0:	003f1106 	br	26818 <__alt_data_end+0xfffe6818>
   26bd4:	00800044 	movi	r2,1
   26bd8:	002b883a 	mov	r21,zero
   26bdc:	003f1f06 	br	2685c <__alt_data_end+0xfffe685c>
   26be0:	81400204 	addi	r5,r16,8
   26be4:	9009883a 	mov	r4,r18
   26be8:	0025d1c0 	call	25d1c <_free_r>
   26bec:	008000f4 	movhi	r2,3
   26bf0:	108b1904 	addi	r2,r2,11364
   26bf4:	10c00017 	ldw	r3,0(r2)
   26bf8:	003f2c06 	br	268ac <__alt_data_end+0xfffe68ac>
   26bfc:	00c05504 	movi	r3,340
   26c00:	18800536 	bltu	r3,r2,26c18 <_malloc_r+0x7cc>
   26c04:	3804d3fa 	srli	r2,r7,15
   26c08:	11401e04 	addi	r5,r2,120
   26c0c:	10c01dc4 	addi	r3,r2,119
   26c10:	294b883a 	add	r5,r5,r5
   26c14:	003f5606 	br	26970 <__alt_data_end+0xfffe6970>
   26c18:	00c15504 	movi	r3,1364
   26c1c:	18800536 	bltu	r3,r2,26c34 <_malloc_r+0x7e8>
   26c20:	3804d4ba 	srli	r2,r7,18
   26c24:	11401f44 	addi	r5,r2,125
   26c28:	10c01f04 	addi	r3,r2,124
   26c2c:	294b883a 	add	r5,r5,r5
   26c30:	003f4f06 	br	26970 <__alt_data_end+0xfffe6970>
   26c34:	01403f84 	movi	r5,254
   26c38:	00c01f84 	movi	r3,126
   26c3c:	003f4c06 	br	26970 <__alt_data_end+0xfffe6970>
   26c40:	98800117 	ldw	r2,4(r19)
   26c44:	003fa006 	br	26ac8 <__alt_data_end+0xfffe6ac8>
   26c48:	8808d0fa 	srli	r4,r17,3
   26c4c:	20800044 	addi	r2,r4,1
   26c50:	1085883a 	add	r2,r2,r2
   26c54:	003e9006 	br	26698 <__alt_data_end+0xfffe6698>

00026c58 <memchr>:
   26c58:	208000cc 	andi	r2,r4,3
   26c5c:	280f883a 	mov	r7,r5
   26c60:	10003426 	beq	r2,zero,26d34 <memchr+0xdc>
   26c64:	30bfffc4 	addi	r2,r6,-1
   26c68:	30001a26 	beq	r6,zero,26cd4 <memchr+0x7c>
   26c6c:	20c00003 	ldbu	r3,0(r4)
   26c70:	29803fcc 	andi	r6,r5,255
   26c74:	30c0051e 	bne	r6,r3,26c8c <memchr+0x34>
   26c78:	00001806 	br	26cdc <memchr+0x84>
   26c7c:	10001526 	beq	r2,zero,26cd4 <memchr+0x7c>
   26c80:	20c00003 	ldbu	r3,0(r4)
   26c84:	10bfffc4 	addi	r2,r2,-1
   26c88:	30c01426 	beq	r6,r3,26cdc <memchr+0x84>
   26c8c:	21000044 	addi	r4,r4,1
   26c90:	20c000cc 	andi	r3,r4,3
   26c94:	183ff91e 	bne	r3,zero,26c7c <__alt_data_end+0xfffe6c7c>
   26c98:	020000c4 	movi	r8,3
   26c9c:	40801136 	bltu	r8,r2,26ce4 <memchr+0x8c>
   26ca0:	10000c26 	beq	r2,zero,26cd4 <memchr+0x7c>
   26ca4:	20c00003 	ldbu	r3,0(r4)
   26ca8:	29403fcc 	andi	r5,r5,255
   26cac:	28c00b26 	beq	r5,r3,26cdc <memchr+0x84>
   26cb0:	20c00044 	addi	r3,r4,1
   26cb4:	39803fcc 	andi	r6,r7,255
   26cb8:	2089883a 	add	r4,r4,r2
   26cbc:	00000306 	br	26ccc <memchr+0x74>
   26cc0:	18c00044 	addi	r3,r3,1
   26cc4:	197fffc3 	ldbu	r5,-1(r3)
   26cc8:	31400526 	beq	r6,r5,26ce0 <memchr+0x88>
   26ccc:	1805883a 	mov	r2,r3
   26cd0:	20fffb1e 	bne	r4,r3,26cc0 <__alt_data_end+0xfffe6cc0>
   26cd4:	0005883a 	mov	r2,zero
   26cd8:	f800283a 	ret
   26cdc:	2005883a 	mov	r2,r4
   26ce0:	f800283a 	ret
   26ce4:	28c03fcc 	andi	r3,r5,255
   26ce8:	1812923a 	slli	r9,r3,8
   26cec:	02ffbff4 	movhi	r11,65279
   26cf0:	02a02074 	movhi	r10,32897
   26cf4:	48d2b03a 	or	r9,r9,r3
   26cf8:	4806943a 	slli	r3,r9,16
   26cfc:	5affbfc4 	addi	r11,r11,-257
   26d00:	52a02004 	addi	r10,r10,-32640
   26d04:	48d2b03a 	or	r9,r9,r3
   26d08:	20c00017 	ldw	r3,0(r4)
   26d0c:	48c6f03a 	xor	r3,r9,r3
   26d10:	1acd883a 	add	r6,r3,r11
   26d14:	00c6303a 	nor	r3,zero,r3
   26d18:	30c6703a 	and	r3,r6,r3
   26d1c:	1a86703a 	and	r3,r3,r10
   26d20:	183fe01e 	bne	r3,zero,26ca4 <__alt_data_end+0xfffe6ca4>
   26d24:	10bfff04 	addi	r2,r2,-4
   26d28:	21000104 	addi	r4,r4,4
   26d2c:	40bff636 	bltu	r8,r2,26d08 <__alt_data_end+0xfffe6d08>
   26d30:	003fdb06 	br	26ca0 <__alt_data_end+0xfffe6ca0>
   26d34:	3005883a 	mov	r2,r6
   26d38:	003fd706 	br	26c98 <__alt_data_end+0xfffe6c98>

00026d3c <memcpy>:
   26d3c:	defffd04 	addi	sp,sp,-12
   26d40:	dfc00215 	stw	ra,8(sp)
   26d44:	dc400115 	stw	r17,4(sp)
   26d48:	dc000015 	stw	r16,0(sp)
   26d4c:	00c003c4 	movi	r3,15
   26d50:	2005883a 	mov	r2,r4
   26d54:	1980452e 	bgeu	r3,r6,26e6c <memcpy+0x130>
   26d58:	2906b03a 	or	r3,r5,r4
   26d5c:	18c000cc 	andi	r3,r3,3
   26d60:	1800441e 	bne	r3,zero,26e74 <memcpy+0x138>
   26d64:	347ffc04 	addi	r17,r6,-16
   26d68:	8822d13a 	srli	r17,r17,4
   26d6c:	28c00104 	addi	r3,r5,4
   26d70:	23400104 	addi	r13,r4,4
   26d74:	8820913a 	slli	r16,r17,4
   26d78:	2b000204 	addi	r12,r5,8
   26d7c:	22c00204 	addi	r11,r4,8
   26d80:	84000504 	addi	r16,r16,20
   26d84:	2a800304 	addi	r10,r5,12
   26d88:	22400304 	addi	r9,r4,12
   26d8c:	2c21883a 	add	r16,r5,r16
   26d90:	2811883a 	mov	r8,r5
   26d94:	200f883a 	mov	r7,r4
   26d98:	41000017 	ldw	r4,0(r8)
   26d9c:	1fc00017 	ldw	ra,0(r3)
   26da0:	63c00017 	ldw	r15,0(r12)
   26da4:	39000015 	stw	r4,0(r7)
   26da8:	53800017 	ldw	r14,0(r10)
   26dac:	6fc00015 	stw	ra,0(r13)
   26db0:	5bc00015 	stw	r15,0(r11)
   26db4:	4b800015 	stw	r14,0(r9)
   26db8:	18c00404 	addi	r3,r3,16
   26dbc:	39c00404 	addi	r7,r7,16
   26dc0:	42000404 	addi	r8,r8,16
   26dc4:	6b400404 	addi	r13,r13,16
   26dc8:	63000404 	addi	r12,r12,16
   26dcc:	5ac00404 	addi	r11,r11,16
   26dd0:	52800404 	addi	r10,r10,16
   26dd4:	4a400404 	addi	r9,r9,16
   26dd8:	1c3fef1e 	bne	r3,r16,26d98 <__alt_data_end+0xfffe6d98>
   26ddc:	89c00044 	addi	r7,r17,1
   26de0:	380e913a 	slli	r7,r7,4
   26de4:	310003cc 	andi	r4,r6,15
   26de8:	02c000c4 	movi	r11,3
   26dec:	11c7883a 	add	r3,r2,r7
   26df0:	29cb883a 	add	r5,r5,r7
   26df4:	5900212e 	bgeu	r11,r4,26e7c <memcpy+0x140>
   26df8:	1813883a 	mov	r9,r3
   26dfc:	2811883a 	mov	r8,r5
   26e00:	200f883a 	mov	r7,r4
   26e04:	42800017 	ldw	r10,0(r8)
   26e08:	4a400104 	addi	r9,r9,4
   26e0c:	39ffff04 	addi	r7,r7,-4
   26e10:	4abfff15 	stw	r10,-4(r9)
   26e14:	42000104 	addi	r8,r8,4
   26e18:	59fffa36 	bltu	r11,r7,26e04 <__alt_data_end+0xfffe6e04>
   26e1c:	213fff04 	addi	r4,r4,-4
   26e20:	2008d0ba 	srli	r4,r4,2
   26e24:	318000cc 	andi	r6,r6,3
   26e28:	21000044 	addi	r4,r4,1
   26e2c:	2109883a 	add	r4,r4,r4
   26e30:	2109883a 	add	r4,r4,r4
   26e34:	1907883a 	add	r3,r3,r4
   26e38:	290b883a 	add	r5,r5,r4
   26e3c:	30000626 	beq	r6,zero,26e58 <memcpy+0x11c>
   26e40:	198d883a 	add	r6,r3,r6
   26e44:	29c00003 	ldbu	r7,0(r5)
   26e48:	18c00044 	addi	r3,r3,1
   26e4c:	29400044 	addi	r5,r5,1
   26e50:	19ffffc5 	stb	r7,-1(r3)
   26e54:	19bffb1e 	bne	r3,r6,26e44 <__alt_data_end+0xfffe6e44>
   26e58:	dfc00217 	ldw	ra,8(sp)
   26e5c:	dc400117 	ldw	r17,4(sp)
   26e60:	dc000017 	ldw	r16,0(sp)
   26e64:	dec00304 	addi	sp,sp,12
   26e68:	f800283a 	ret
   26e6c:	2007883a 	mov	r3,r4
   26e70:	003ff206 	br	26e3c <__alt_data_end+0xfffe6e3c>
   26e74:	2007883a 	mov	r3,r4
   26e78:	003ff106 	br	26e40 <__alt_data_end+0xfffe6e40>
   26e7c:	200d883a 	mov	r6,r4
   26e80:	003fee06 	br	26e3c <__alt_data_end+0xfffe6e3c>

00026e84 <memset>:
   26e84:	20c000cc 	andi	r3,r4,3
   26e88:	2005883a 	mov	r2,r4
   26e8c:	18004426 	beq	r3,zero,26fa0 <memset+0x11c>
   26e90:	31ffffc4 	addi	r7,r6,-1
   26e94:	30004026 	beq	r6,zero,26f98 <memset+0x114>
   26e98:	2813883a 	mov	r9,r5
   26e9c:	200d883a 	mov	r6,r4
   26ea0:	2007883a 	mov	r3,r4
   26ea4:	00000406 	br	26eb8 <memset+0x34>
   26ea8:	3a3fffc4 	addi	r8,r7,-1
   26eac:	31800044 	addi	r6,r6,1
   26eb0:	38003926 	beq	r7,zero,26f98 <memset+0x114>
   26eb4:	400f883a 	mov	r7,r8
   26eb8:	18c00044 	addi	r3,r3,1
   26ebc:	32400005 	stb	r9,0(r6)
   26ec0:	1a0000cc 	andi	r8,r3,3
   26ec4:	403ff81e 	bne	r8,zero,26ea8 <__alt_data_end+0xfffe6ea8>
   26ec8:	010000c4 	movi	r4,3
   26ecc:	21c02d2e 	bgeu	r4,r7,26f84 <memset+0x100>
   26ed0:	29003fcc 	andi	r4,r5,255
   26ed4:	200c923a 	slli	r6,r4,8
   26ed8:	3108b03a 	or	r4,r6,r4
   26edc:	200c943a 	slli	r6,r4,16
   26ee0:	218cb03a 	or	r6,r4,r6
   26ee4:	010003c4 	movi	r4,15
   26ee8:	21c0182e 	bgeu	r4,r7,26f4c <memset+0xc8>
   26eec:	3b3ffc04 	addi	r12,r7,-16
   26ef0:	6018d13a 	srli	r12,r12,4
   26ef4:	1a000104 	addi	r8,r3,4
   26ef8:	1ac00204 	addi	r11,r3,8
   26efc:	6008913a 	slli	r4,r12,4
   26f00:	1a800304 	addi	r10,r3,12
   26f04:	1813883a 	mov	r9,r3
   26f08:	21000504 	addi	r4,r4,20
   26f0c:	1909883a 	add	r4,r3,r4
   26f10:	49800015 	stw	r6,0(r9)
   26f14:	41800015 	stw	r6,0(r8)
   26f18:	59800015 	stw	r6,0(r11)
   26f1c:	51800015 	stw	r6,0(r10)
   26f20:	42000404 	addi	r8,r8,16
   26f24:	4a400404 	addi	r9,r9,16
   26f28:	5ac00404 	addi	r11,r11,16
   26f2c:	52800404 	addi	r10,r10,16
   26f30:	413ff71e 	bne	r8,r4,26f10 <__alt_data_end+0xfffe6f10>
   26f34:	63000044 	addi	r12,r12,1
   26f38:	6018913a 	slli	r12,r12,4
   26f3c:	39c003cc 	andi	r7,r7,15
   26f40:	010000c4 	movi	r4,3
   26f44:	1b07883a 	add	r3,r3,r12
   26f48:	21c00e2e 	bgeu	r4,r7,26f84 <memset+0x100>
   26f4c:	1813883a 	mov	r9,r3
   26f50:	3811883a 	mov	r8,r7
   26f54:	010000c4 	movi	r4,3
   26f58:	49800015 	stw	r6,0(r9)
   26f5c:	423fff04 	addi	r8,r8,-4
   26f60:	4a400104 	addi	r9,r9,4
   26f64:	223ffc36 	bltu	r4,r8,26f58 <__alt_data_end+0xfffe6f58>
   26f68:	393fff04 	addi	r4,r7,-4
   26f6c:	2008d0ba 	srli	r4,r4,2
   26f70:	39c000cc 	andi	r7,r7,3
   26f74:	21000044 	addi	r4,r4,1
   26f78:	2109883a 	add	r4,r4,r4
   26f7c:	2109883a 	add	r4,r4,r4
   26f80:	1907883a 	add	r3,r3,r4
   26f84:	38000526 	beq	r7,zero,26f9c <memset+0x118>
   26f88:	19cf883a 	add	r7,r3,r7
   26f8c:	19400005 	stb	r5,0(r3)
   26f90:	18c00044 	addi	r3,r3,1
   26f94:	38fffd1e 	bne	r7,r3,26f8c <__alt_data_end+0xfffe6f8c>
   26f98:	f800283a 	ret
   26f9c:	f800283a 	ret
   26fa0:	2007883a 	mov	r3,r4
   26fa4:	300f883a 	mov	r7,r6
   26fa8:	003fc706 	br	26ec8 <__alt_data_end+0xfffe6ec8>

00026fac <_Balloc>:
   26fac:	20801317 	ldw	r2,76(r4)
   26fb0:	defffc04 	addi	sp,sp,-16
   26fb4:	dc400115 	stw	r17,4(sp)
   26fb8:	dc000015 	stw	r16,0(sp)
   26fbc:	dfc00315 	stw	ra,12(sp)
   26fc0:	dc800215 	stw	r18,8(sp)
   26fc4:	2023883a 	mov	r17,r4
   26fc8:	2821883a 	mov	r16,r5
   26fcc:	10000f26 	beq	r2,zero,2700c <_Balloc+0x60>
   26fd0:	8407883a 	add	r3,r16,r16
   26fd4:	18c7883a 	add	r3,r3,r3
   26fd8:	10c7883a 	add	r3,r2,r3
   26fdc:	18800017 	ldw	r2,0(r3)
   26fe0:	10001126 	beq	r2,zero,27028 <_Balloc+0x7c>
   26fe4:	11000017 	ldw	r4,0(r2)
   26fe8:	19000015 	stw	r4,0(r3)
   26fec:	10000415 	stw	zero,16(r2)
   26ff0:	10000315 	stw	zero,12(r2)
   26ff4:	dfc00317 	ldw	ra,12(sp)
   26ff8:	dc800217 	ldw	r18,8(sp)
   26ffc:	dc400117 	ldw	r17,4(sp)
   27000:	dc000017 	ldw	r16,0(sp)
   27004:	dec00404 	addi	sp,sp,16
   27008:	f800283a 	ret
   2700c:	01800844 	movi	r6,33
   27010:	01400104 	movi	r5,4
   27014:	0029a1c0 	call	29a1c <_calloc_r>
   27018:	88801315 	stw	r2,76(r17)
   2701c:	103fec1e 	bne	r2,zero,26fd0 <__alt_data_end+0xfffe6fd0>
   27020:	0005883a 	mov	r2,zero
   27024:	003ff306 	br	26ff4 <__alt_data_end+0xfffe6ff4>
   27028:	01400044 	movi	r5,1
   2702c:	2c24983a 	sll	r18,r5,r16
   27030:	8809883a 	mov	r4,r17
   27034:	91800144 	addi	r6,r18,5
   27038:	318d883a 	add	r6,r6,r6
   2703c:	318d883a 	add	r6,r6,r6
   27040:	0029a1c0 	call	29a1c <_calloc_r>
   27044:	103ff626 	beq	r2,zero,27020 <__alt_data_end+0xfffe7020>
   27048:	14000115 	stw	r16,4(r2)
   2704c:	14800215 	stw	r18,8(r2)
   27050:	003fe606 	br	26fec <__alt_data_end+0xfffe6fec>

00027054 <_Bfree>:
   27054:	28000826 	beq	r5,zero,27078 <_Bfree+0x24>
   27058:	28c00117 	ldw	r3,4(r5)
   2705c:	20801317 	ldw	r2,76(r4)
   27060:	18c7883a 	add	r3,r3,r3
   27064:	18c7883a 	add	r3,r3,r3
   27068:	10c5883a 	add	r2,r2,r3
   2706c:	10c00017 	ldw	r3,0(r2)
   27070:	28c00015 	stw	r3,0(r5)
   27074:	11400015 	stw	r5,0(r2)
   27078:	f800283a 	ret

0002707c <__multadd>:
   2707c:	defffa04 	addi	sp,sp,-24
   27080:	dc800315 	stw	r18,12(sp)
   27084:	dc400215 	stw	r17,8(sp)
   27088:	dc000115 	stw	r16,4(sp)
   2708c:	2823883a 	mov	r17,r5
   27090:	2c000417 	ldw	r16,16(r5)
   27094:	dfc00515 	stw	ra,20(sp)
   27098:	dcc00415 	stw	r19,16(sp)
   2709c:	2025883a 	mov	r18,r4
   270a0:	29400504 	addi	r5,r5,20
   270a4:	0011883a 	mov	r8,zero
   270a8:	28c00017 	ldw	r3,0(r5)
   270ac:	29400104 	addi	r5,r5,4
   270b0:	42000044 	addi	r8,r8,1
   270b4:	18bfffcc 	andi	r2,r3,65535
   270b8:	1185383a 	mul	r2,r2,r6
   270bc:	1806d43a 	srli	r3,r3,16
   270c0:	11cf883a 	add	r7,r2,r7
   270c4:	3808d43a 	srli	r4,r7,16
   270c8:	1987383a 	mul	r3,r3,r6
   270cc:	38bfffcc 	andi	r2,r7,65535
   270d0:	1907883a 	add	r3,r3,r4
   270d4:	1808943a 	slli	r4,r3,16
   270d8:	180ed43a 	srli	r7,r3,16
   270dc:	2085883a 	add	r2,r4,r2
   270e0:	28bfff15 	stw	r2,-4(r5)
   270e4:	443ff016 	blt	r8,r16,270a8 <__alt_data_end+0xfffe70a8>
   270e8:	38000926 	beq	r7,zero,27110 <__multadd+0x94>
   270ec:	88800217 	ldw	r2,8(r17)
   270f0:	80800f0e 	bge	r16,r2,27130 <__multadd+0xb4>
   270f4:	80800144 	addi	r2,r16,5
   270f8:	1085883a 	add	r2,r2,r2
   270fc:	1085883a 	add	r2,r2,r2
   27100:	8885883a 	add	r2,r17,r2
   27104:	11c00015 	stw	r7,0(r2)
   27108:	84000044 	addi	r16,r16,1
   2710c:	8c000415 	stw	r16,16(r17)
   27110:	8805883a 	mov	r2,r17
   27114:	dfc00517 	ldw	ra,20(sp)
   27118:	dcc00417 	ldw	r19,16(sp)
   2711c:	dc800317 	ldw	r18,12(sp)
   27120:	dc400217 	ldw	r17,8(sp)
   27124:	dc000117 	ldw	r16,4(sp)
   27128:	dec00604 	addi	sp,sp,24
   2712c:	f800283a 	ret
   27130:	89400117 	ldw	r5,4(r17)
   27134:	9009883a 	mov	r4,r18
   27138:	d9c00015 	stw	r7,0(sp)
   2713c:	29400044 	addi	r5,r5,1
   27140:	0026fac0 	call	26fac <_Balloc>
   27144:	89800417 	ldw	r6,16(r17)
   27148:	89400304 	addi	r5,r17,12
   2714c:	11000304 	addi	r4,r2,12
   27150:	31800084 	addi	r6,r6,2
   27154:	318d883a 	add	r6,r6,r6
   27158:	318d883a 	add	r6,r6,r6
   2715c:	1027883a 	mov	r19,r2
   27160:	0026d3c0 	call	26d3c <memcpy>
   27164:	d9c00017 	ldw	r7,0(sp)
   27168:	88000a26 	beq	r17,zero,27194 <__multadd+0x118>
   2716c:	88c00117 	ldw	r3,4(r17)
   27170:	90801317 	ldw	r2,76(r18)
   27174:	18c7883a 	add	r3,r3,r3
   27178:	18c7883a 	add	r3,r3,r3
   2717c:	10c5883a 	add	r2,r2,r3
   27180:	10c00017 	ldw	r3,0(r2)
   27184:	88c00015 	stw	r3,0(r17)
   27188:	14400015 	stw	r17,0(r2)
   2718c:	9823883a 	mov	r17,r19
   27190:	003fd806 	br	270f4 <__alt_data_end+0xfffe70f4>
   27194:	9823883a 	mov	r17,r19
   27198:	003fd606 	br	270f4 <__alt_data_end+0xfffe70f4>

0002719c <__s2b>:
   2719c:	defff904 	addi	sp,sp,-28
   271a0:	dc400115 	stw	r17,4(sp)
   271a4:	dc000015 	stw	r16,0(sp)
   271a8:	2023883a 	mov	r17,r4
   271ac:	2821883a 	mov	r16,r5
   271b0:	39000204 	addi	r4,r7,8
   271b4:	01400244 	movi	r5,9
   271b8:	dcc00315 	stw	r19,12(sp)
   271bc:	dc800215 	stw	r18,8(sp)
   271c0:	dfc00615 	stw	ra,24(sp)
   271c4:	dd400515 	stw	r21,20(sp)
   271c8:	dd000415 	stw	r20,16(sp)
   271cc:	3825883a 	mov	r18,r7
   271d0:	3027883a 	mov	r19,r6
   271d4:	00204680 	call	20468 <__divsi3>
   271d8:	00c00044 	movi	r3,1
   271dc:	000b883a 	mov	r5,zero
   271e0:	1880030e 	bge	r3,r2,271f0 <__s2b+0x54>
   271e4:	18c7883a 	add	r3,r3,r3
   271e8:	29400044 	addi	r5,r5,1
   271ec:	18bffd16 	blt	r3,r2,271e4 <__alt_data_end+0xfffe71e4>
   271f0:	8809883a 	mov	r4,r17
   271f4:	0026fac0 	call	26fac <_Balloc>
   271f8:	d8c00717 	ldw	r3,28(sp)
   271fc:	10c00515 	stw	r3,20(r2)
   27200:	00c00044 	movi	r3,1
   27204:	10c00415 	stw	r3,16(r2)
   27208:	00c00244 	movi	r3,9
   2720c:	1cc0210e 	bge	r3,r19,27294 <__s2b+0xf8>
   27210:	80eb883a 	add	r21,r16,r3
   27214:	a829883a 	mov	r20,r21
   27218:	84e1883a 	add	r16,r16,r19
   2721c:	a1c00007 	ldb	r7,0(r20)
   27220:	01800284 	movi	r6,10
   27224:	a5000044 	addi	r20,r20,1
   27228:	100b883a 	mov	r5,r2
   2722c:	39fff404 	addi	r7,r7,-48
   27230:	8809883a 	mov	r4,r17
   27234:	002707c0 	call	2707c <__multadd>
   27238:	a43ff81e 	bne	r20,r16,2721c <__alt_data_end+0xfffe721c>
   2723c:	ace1883a 	add	r16,r21,r19
   27240:	843ffe04 	addi	r16,r16,-8
   27244:	9c800a0e 	bge	r19,r18,27270 <__s2b+0xd4>
   27248:	94e5c83a 	sub	r18,r18,r19
   2724c:	84a5883a 	add	r18,r16,r18
   27250:	81c00007 	ldb	r7,0(r16)
   27254:	01800284 	movi	r6,10
   27258:	84000044 	addi	r16,r16,1
   2725c:	100b883a 	mov	r5,r2
   27260:	39fff404 	addi	r7,r7,-48
   27264:	8809883a 	mov	r4,r17
   27268:	002707c0 	call	2707c <__multadd>
   2726c:	84bff81e 	bne	r16,r18,27250 <__alt_data_end+0xfffe7250>
   27270:	dfc00617 	ldw	ra,24(sp)
   27274:	dd400517 	ldw	r21,20(sp)
   27278:	dd000417 	ldw	r20,16(sp)
   2727c:	dcc00317 	ldw	r19,12(sp)
   27280:	dc800217 	ldw	r18,8(sp)
   27284:	dc400117 	ldw	r17,4(sp)
   27288:	dc000017 	ldw	r16,0(sp)
   2728c:	dec00704 	addi	sp,sp,28
   27290:	f800283a 	ret
   27294:	84000284 	addi	r16,r16,10
   27298:	1827883a 	mov	r19,r3
   2729c:	003fe906 	br	27244 <__alt_data_end+0xfffe7244>

000272a0 <__hi0bits>:
   272a0:	20bfffec 	andhi	r2,r4,65535
   272a4:	1000141e 	bne	r2,zero,272f8 <__hi0bits+0x58>
   272a8:	2008943a 	slli	r4,r4,16
   272ac:	00800404 	movi	r2,16
   272b0:	20ffc02c 	andhi	r3,r4,65280
   272b4:	1800021e 	bne	r3,zero,272c0 <__hi0bits+0x20>
   272b8:	2008923a 	slli	r4,r4,8
   272bc:	10800204 	addi	r2,r2,8
   272c0:	20fc002c 	andhi	r3,r4,61440
   272c4:	1800021e 	bne	r3,zero,272d0 <__hi0bits+0x30>
   272c8:	2008913a 	slli	r4,r4,4
   272cc:	10800104 	addi	r2,r2,4
   272d0:	20f0002c 	andhi	r3,r4,49152
   272d4:	1800031e 	bne	r3,zero,272e4 <__hi0bits+0x44>
   272d8:	2109883a 	add	r4,r4,r4
   272dc:	10800084 	addi	r2,r2,2
   272e0:	2109883a 	add	r4,r4,r4
   272e4:	20000316 	blt	r4,zero,272f4 <__hi0bits+0x54>
   272e8:	2110002c 	andhi	r4,r4,16384
   272ec:	2000041e 	bne	r4,zero,27300 <__hi0bits+0x60>
   272f0:	00800804 	movi	r2,32
   272f4:	f800283a 	ret
   272f8:	0005883a 	mov	r2,zero
   272fc:	003fec06 	br	272b0 <__alt_data_end+0xfffe72b0>
   27300:	10800044 	addi	r2,r2,1
   27304:	f800283a 	ret

00027308 <__lo0bits>:
   27308:	20c00017 	ldw	r3,0(r4)
   2730c:	188001cc 	andi	r2,r3,7
   27310:	10000826 	beq	r2,zero,27334 <__lo0bits+0x2c>
   27314:	1880004c 	andi	r2,r3,1
   27318:	1000211e 	bne	r2,zero,273a0 <__lo0bits+0x98>
   2731c:	1880008c 	andi	r2,r3,2
   27320:	1000211e 	bne	r2,zero,273a8 <__lo0bits+0xa0>
   27324:	1806d0ba 	srli	r3,r3,2
   27328:	00800084 	movi	r2,2
   2732c:	20c00015 	stw	r3,0(r4)
   27330:	f800283a 	ret
   27334:	18bfffcc 	andi	r2,r3,65535
   27338:	10001326 	beq	r2,zero,27388 <__lo0bits+0x80>
   2733c:	0005883a 	mov	r2,zero
   27340:	19403fcc 	andi	r5,r3,255
   27344:	2800021e 	bne	r5,zero,27350 <__lo0bits+0x48>
   27348:	1806d23a 	srli	r3,r3,8
   2734c:	10800204 	addi	r2,r2,8
   27350:	194003cc 	andi	r5,r3,15
   27354:	2800021e 	bne	r5,zero,27360 <__lo0bits+0x58>
   27358:	1806d13a 	srli	r3,r3,4
   2735c:	10800104 	addi	r2,r2,4
   27360:	194000cc 	andi	r5,r3,3
   27364:	2800021e 	bne	r5,zero,27370 <__lo0bits+0x68>
   27368:	1806d0ba 	srli	r3,r3,2
   2736c:	10800084 	addi	r2,r2,2
   27370:	1940004c 	andi	r5,r3,1
   27374:	2800081e 	bne	r5,zero,27398 <__lo0bits+0x90>
   27378:	1806d07a 	srli	r3,r3,1
   2737c:	1800051e 	bne	r3,zero,27394 <__lo0bits+0x8c>
   27380:	00800804 	movi	r2,32
   27384:	f800283a 	ret
   27388:	1806d43a 	srli	r3,r3,16
   2738c:	00800404 	movi	r2,16
   27390:	003feb06 	br	27340 <__alt_data_end+0xfffe7340>
   27394:	10800044 	addi	r2,r2,1
   27398:	20c00015 	stw	r3,0(r4)
   2739c:	f800283a 	ret
   273a0:	0005883a 	mov	r2,zero
   273a4:	f800283a 	ret
   273a8:	1806d07a 	srli	r3,r3,1
   273ac:	00800044 	movi	r2,1
   273b0:	20c00015 	stw	r3,0(r4)
   273b4:	f800283a 	ret

000273b8 <__i2b>:
   273b8:	defffd04 	addi	sp,sp,-12
   273bc:	dc000015 	stw	r16,0(sp)
   273c0:	04000044 	movi	r16,1
   273c4:	dc400115 	stw	r17,4(sp)
   273c8:	2823883a 	mov	r17,r5
   273cc:	800b883a 	mov	r5,r16
   273d0:	dfc00215 	stw	ra,8(sp)
   273d4:	0026fac0 	call	26fac <_Balloc>
   273d8:	14400515 	stw	r17,20(r2)
   273dc:	14000415 	stw	r16,16(r2)
   273e0:	dfc00217 	ldw	ra,8(sp)
   273e4:	dc400117 	ldw	r17,4(sp)
   273e8:	dc000017 	ldw	r16,0(sp)
   273ec:	dec00304 	addi	sp,sp,12
   273f0:	f800283a 	ret

000273f4 <__multiply>:
   273f4:	defffa04 	addi	sp,sp,-24
   273f8:	dcc00315 	stw	r19,12(sp)
   273fc:	dc800215 	stw	r18,8(sp)
   27400:	34c00417 	ldw	r19,16(r6)
   27404:	2c800417 	ldw	r18,16(r5)
   27408:	dd000415 	stw	r20,16(sp)
   2740c:	dc400115 	stw	r17,4(sp)
   27410:	dfc00515 	stw	ra,20(sp)
   27414:	dc000015 	stw	r16,0(sp)
   27418:	2829883a 	mov	r20,r5
   2741c:	3023883a 	mov	r17,r6
   27420:	94c0050e 	bge	r18,r19,27438 <__multiply+0x44>
   27424:	9007883a 	mov	r3,r18
   27428:	3029883a 	mov	r20,r6
   2742c:	9825883a 	mov	r18,r19
   27430:	2823883a 	mov	r17,r5
   27434:	1827883a 	mov	r19,r3
   27438:	a0800217 	ldw	r2,8(r20)
   2743c:	94e1883a 	add	r16,r18,r19
   27440:	a1400117 	ldw	r5,4(r20)
   27444:	1400010e 	bge	r2,r16,2744c <__multiply+0x58>
   27448:	29400044 	addi	r5,r5,1
   2744c:	0026fac0 	call	26fac <_Balloc>
   27450:	8415883a 	add	r10,r16,r16
   27454:	12c00504 	addi	r11,r2,20
   27458:	5295883a 	add	r10,r10,r10
   2745c:	5a95883a 	add	r10,r11,r10
   27460:	5807883a 	mov	r3,r11
   27464:	5a80032e 	bgeu	r11,r10,27474 <__multiply+0x80>
   27468:	18000015 	stw	zero,0(r3)
   2746c:	18c00104 	addi	r3,r3,4
   27470:	1abffd36 	bltu	r3,r10,27468 <__alt_data_end+0xfffe7468>
   27474:	9ce7883a 	add	r19,r19,r19
   27478:	94a5883a 	add	r18,r18,r18
   2747c:	89800504 	addi	r6,r17,20
   27480:	9ce7883a 	add	r19,r19,r19
   27484:	a3400504 	addi	r13,r20,20
   27488:	94a5883a 	add	r18,r18,r18
   2748c:	34d9883a 	add	r12,r6,r19
   27490:	6c93883a 	add	r9,r13,r18
   27494:	3300422e 	bgeu	r6,r12,275a0 <__multiply+0x1ac>
   27498:	37c00017 	ldw	ra,0(r6)
   2749c:	fbffffcc 	andi	r15,ra,65535
   274a0:	78001b26 	beq	r15,zero,27510 <__multiply+0x11c>
   274a4:	5811883a 	mov	r8,r11
   274a8:	681d883a 	mov	r14,r13
   274ac:	000f883a 	mov	r7,zero
   274b0:	71000017 	ldw	r4,0(r14)
   274b4:	40c00017 	ldw	r3,0(r8)
   274b8:	73800104 	addi	r14,r14,4
   274bc:	217fffcc 	andi	r5,r4,65535
   274c0:	2bcb383a 	mul	r5,r5,r15
   274c4:	2008d43a 	srli	r4,r4,16
   274c8:	1c7fffcc 	andi	r17,r3,65535
   274cc:	2c4b883a 	add	r5,r5,r17
   274d0:	29cb883a 	add	r5,r5,r7
   274d4:	23c9383a 	mul	r4,r4,r15
   274d8:	1806d43a 	srli	r3,r3,16
   274dc:	280ed43a 	srli	r7,r5,16
   274e0:	297fffcc 	andi	r5,r5,65535
   274e4:	20c7883a 	add	r3,r4,r3
   274e8:	19c7883a 	add	r3,r3,r7
   274ec:	1808943a 	slli	r4,r3,16
   274f0:	4023883a 	mov	r17,r8
   274f4:	180ed43a 	srli	r7,r3,16
   274f8:	214ab03a 	or	r5,r4,r5
   274fc:	41400015 	stw	r5,0(r8)
   27500:	42000104 	addi	r8,r8,4
   27504:	727fea36 	bltu	r14,r9,274b0 <__alt_data_end+0xfffe74b0>
   27508:	89c00115 	stw	r7,4(r17)
   2750c:	37c00017 	ldw	ra,0(r6)
   27510:	f83ed43a 	srli	ra,ra,16
   27514:	f8001f26 	beq	ra,zero,27594 <__multiply+0x1a0>
   27518:	58c00017 	ldw	r3,0(r11)
   2751c:	681d883a 	mov	r14,r13
   27520:	581f883a 	mov	r15,r11
   27524:	1811883a 	mov	r8,r3
   27528:	5825883a 	mov	r18,r11
   2752c:	000f883a 	mov	r7,zero
   27530:	00000106 	br	27538 <__multiply+0x144>
   27534:	8825883a 	mov	r18,r17
   27538:	7140000b 	ldhu	r5,0(r14)
   2753c:	4010d43a 	srli	r8,r8,16
   27540:	193fffcc 	andi	r4,r3,65535
   27544:	2fcb383a 	mul	r5,r5,ra
   27548:	7bc00104 	addi	r15,r15,4
   2754c:	73800104 	addi	r14,r14,4
   27550:	2a0b883a 	add	r5,r5,r8
   27554:	29cb883a 	add	r5,r5,r7
   27558:	2806943a 	slli	r3,r5,16
   2755c:	94400104 	addi	r17,r18,4
   27560:	280ad43a 	srli	r5,r5,16
   27564:	1908b03a 	or	r4,r3,r4
   27568:	793fff15 	stw	r4,-4(r15)
   2756c:	70ffff17 	ldw	r3,-4(r14)
   27570:	8a000017 	ldw	r8,0(r17)
   27574:	1806d43a 	srli	r3,r3,16
   27578:	413fffcc 	andi	r4,r8,65535
   2757c:	1fc7383a 	mul	r3,r3,ra
   27580:	1907883a 	add	r3,r3,r4
   27584:	1947883a 	add	r3,r3,r5
   27588:	180ed43a 	srli	r7,r3,16
   2758c:	727fe936 	bltu	r14,r9,27534 <__alt_data_end+0xfffe7534>
   27590:	90c00115 	stw	r3,4(r18)
   27594:	31800104 	addi	r6,r6,4
   27598:	5ac00104 	addi	r11,r11,4
   2759c:	333fbe36 	bltu	r6,r12,27498 <__alt_data_end+0xfffe7498>
   275a0:	0400090e 	bge	zero,r16,275c8 <__multiply+0x1d4>
   275a4:	50ffff17 	ldw	r3,-4(r10)
   275a8:	52bfff04 	addi	r10,r10,-4
   275ac:	18000326 	beq	r3,zero,275bc <__multiply+0x1c8>
   275b0:	00000506 	br	275c8 <__multiply+0x1d4>
   275b4:	50c00017 	ldw	r3,0(r10)
   275b8:	1800031e 	bne	r3,zero,275c8 <__multiply+0x1d4>
   275bc:	843fffc4 	addi	r16,r16,-1
   275c0:	52bfff04 	addi	r10,r10,-4
   275c4:	803ffb1e 	bne	r16,zero,275b4 <__alt_data_end+0xfffe75b4>
   275c8:	14000415 	stw	r16,16(r2)
   275cc:	dfc00517 	ldw	ra,20(sp)
   275d0:	dd000417 	ldw	r20,16(sp)
   275d4:	dcc00317 	ldw	r19,12(sp)
   275d8:	dc800217 	ldw	r18,8(sp)
   275dc:	dc400117 	ldw	r17,4(sp)
   275e0:	dc000017 	ldw	r16,0(sp)
   275e4:	dec00604 	addi	sp,sp,24
   275e8:	f800283a 	ret

000275ec <__pow5mult>:
   275ec:	defffa04 	addi	sp,sp,-24
   275f0:	dcc00315 	stw	r19,12(sp)
   275f4:	dc000015 	stw	r16,0(sp)
   275f8:	dfc00515 	stw	ra,20(sp)
   275fc:	dd000415 	stw	r20,16(sp)
   27600:	dc800215 	stw	r18,8(sp)
   27604:	dc400115 	stw	r17,4(sp)
   27608:	308000cc 	andi	r2,r6,3
   2760c:	3021883a 	mov	r16,r6
   27610:	2027883a 	mov	r19,r4
   27614:	10002f1e 	bne	r2,zero,276d4 <__pow5mult+0xe8>
   27618:	2825883a 	mov	r18,r5
   2761c:	8021d0ba 	srai	r16,r16,2
   27620:	80001a26 	beq	r16,zero,2768c <__pow5mult+0xa0>
   27624:	9c401217 	ldw	r17,72(r19)
   27628:	8800061e 	bne	r17,zero,27644 <__pow5mult+0x58>
   2762c:	00003406 	br	27700 <__pow5mult+0x114>
   27630:	8021d07a 	srai	r16,r16,1
   27634:	80001526 	beq	r16,zero,2768c <__pow5mult+0xa0>
   27638:	88800017 	ldw	r2,0(r17)
   2763c:	10001c26 	beq	r2,zero,276b0 <__pow5mult+0xc4>
   27640:	1023883a 	mov	r17,r2
   27644:	8080004c 	andi	r2,r16,1
   27648:	103ff926 	beq	r2,zero,27630 <__alt_data_end+0xfffe7630>
   2764c:	880d883a 	mov	r6,r17
   27650:	900b883a 	mov	r5,r18
   27654:	9809883a 	mov	r4,r19
   27658:	00273f40 	call	273f4 <__multiply>
   2765c:	90001b26 	beq	r18,zero,276cc <__pow5mult+0xe0>
   27660:	91000117 	ldw	r4,4(r18)
   27664:	98c01317 	ldw	r3,76(r19)
   27668:	8021d07a 	srai	r16,r16,1
   2766c:	2109883a 	add	r4,r4,r4
   27670:	2109883a 	add	r4,r4,r4
   27674:	1907883a 	add	r3,r3,r4
   27678:	19000017 	ldw	r4,0(r3)
   2767c:	91000015 	stw	r4,0(r18)
   27680:	1c800015 	stw	r18,0(r3)
   27684:	1025883a 	mov	r18,r2
   27688:	803feb1e 	bne	r16,zero,27638 <__alt_data_end+0xfffe7638>
   2768c:	9005883a 	mov	r2,r18
   27690:	dfc00517 	ldw	ra,20(sp)
   27694:	dd000417 	ldw	r20,16(sp)
   27698:	dcc00317 	ldw	r19,12(sp)
   2769c:	dc800217 	ldw	r18,8(sp)
   276a0:	dc400117 	ldw	r17,4(sp)
   276a4:	dc000017 	ldw	r16,0(sp)
   276a8:	dec00604 	addi	sp,sp,24
   276ac:	f800283a 	ret
   276b0:	880d883a 	mov	r6,r17
   276b4:	880b883a 	mov	r5,r17
   276b8:	9809883a 	mov	r4,r19
   276bc:	00273f40 	call	273f4 <__multiply>
   276c0:	88800015 	stw	r2,0(r17)
   276c4:	10000015 	stw	zero,0(r2)
   276c8:	003fdd06 	br	27640 <__alt_data_end+0xfffe7640>
   276cc:	1025883a 	mov	r18,r2
   276d0:	003fd706 	br	27630 <__alt_data_end+0xfffe7630>
   276d4:	10bfffc4 	addi	r2,r2,-1
   276d8:	1085883a 	add	r2,r2,r2
   276dc:	00c000f4 	movhi	r3,3
   276e0:	18fd3704 	addi	r3,r3,-2852
   276e4:	1085883a 	add	r2,r2,r2
   276e8:	1885883a 	add	r2,r3,r2
   276ec:	11800017 	ldw	r6,0(r2)
   276f0:	000f883a 	mov	r7,zero
   276f4:	002707c0 	call	2707c <__multadd>
   276f8:	1025883a 	mov	r18,r2
   276fc:	003fc706 	br	2761c <__alt_data_end+0xfffe761c>
   27700:	05000044 	movi	r20,1
   27704:	a00b883a 	mov	r5,r20
   27708:	9809883a 	mov	r4,r19
   2770c:	0026fac0 	call	26fac <_Balloc>
   27710:	1023883a 	mov	r17,r2
   27714:	00809c44 	movi	r2,625
   27718:	88800515 	stw	r2,20(r17)
   2771c:	8d000415 	stw	r20,16(r17)
   27720:	9c401215 	stw	r17,72(r19)
   27724:	88000015 	stw	zero,0(r17)
   27728:	003fc606 	br	27644 <__alt_data_end+0xfffe7644>

0002772c <__lshift>:
   2772c:	defff904 	addi	sp,sp,-28
   27730:	dd400515 	stw	r21,20(sp)
   27734:	dcc00315 	stw	r19,12(sp)
   27738:	302bd17a 	srai	r21,r6,5
   2773c:	2cc00417 	ldw	r19,16(r5)
   27740:	28800217 	ldw	r2,8(r5)
   27744:	dd000415 	stw	r20,16(sp)
   27748:	ace7883a 	add	r19,r21,r19
   2774c:	dc800215 	stw	r18,8(sp)
   27750:	dc400115 	stw	r17,4(sp)
   27754:	dc000015 	stw	r16,0(sp)
   27758:	dfc00615 	stw	ra,24(sp)
   2775c:	9c000044 	addi	r16,r19,1
   27760:	2823883a 	mov	r17,r5
   27764:	3029883a 	mov	r20,r6
   27768:	2025883a 	mov	r18,r4
   2776c:	29400117 	ldw	r5,4(r5)
   27770:	1400030e 	bge	r2,r16,27780 <__lshift+0x54>
   27774:	1085883a 	add	r2,r2,r2
   27778:	29400044 	addi	r5,r5,1
   2777c:	143ffd16 	blt	r2,r16,27774 <__alt_data_end+0xfffe7774>
   27780:	9009883a 	mov	r4,r18
   27784:	0026fac0 	call	26fac <_Balloc>
   27788:	10c00504 	addi	r3,r2,20
   2778c:	0540070e 	bge	zero,r21,277ac <__lshift+0x80>
   27790:	ad6b883a 	add	r21,r21,r21
   27794:	ad6b883a 	add	r21,r21,r21
   27798:	1809883a 	mov	r4,r3
   2779c:	1d47883a 	add	r3,r3,r21
   277a0:	20000015 	stw	zero,0(r4)
   277a4:	21000104 	addi	r4,r4,4
   277a8:	193ffd1e 	bne	r3,r4,277a0 <__alt_data_end+0xfffe77a0>
   277ac:	8a000417 	ldw	r8,16(r17)
   277b0:	89000504 	addi	r4,r17,20
   277b4:	a18007cc 	andi	r6,r20,31
   277b8:	4211883a 	add	r8,r8,r8
   277bc:	4211883a 	add	r8,r8,r8
   277c0:	2211883a 	add	r8,r4,r8
   277c4:	30002326 	beq	r6,zero,27854 <__lshift+0x128>
   277c8:	02400804 	movi	r9,32
   277cc:	4993c83a 	sub	r9,r9,r6
   277d0:	000b883a 	mov	r5,zero
   277d4:	21c00017 	ldw	r7,0(r4)
   277d8:	1815883a 	mov	r10,r3
   277dc:	18c00104 	addi	r3,r3,4
   277e0:	398e983a 	sll	r7,r7,r6
   277e4:	21000104 	addi	r4,r4,4
   277e8:	394ab03a 	or	r5,r7,r5
   277ec:	197fff15 	stw	r5,-4(r3)
   277f0:	217fff17 	ldw	r5,-4(r4)
   277f4:	2a4ad83a 	srl	r5,r5,r9
   277f8:	223ff636 	bltu	r4,r8,277d4 <__alt_data_end+0xfffe77d4>
   277fc:	51400115 	stw	r5,4(r10)
   27800:	28001a1e 	bne	r5,zero,2786c <__lshift+0x140>
   27804:	843fffc4 	addi	r16,r16,-1
   27808:	14000415 	stw	r16,16(r2)
   2780c:	88000826 	beq	r17,zero,27830 <__lshift+0x104>
   27810:	89000117 	ldw	r4,4(r17)
   27814:	90c01317 	ldw	r3,76(r18)
   27818:	2109883a 	add	r4,r4,r4
   2781c:	2109883a 	add	r4,r4,r4
   27820:	1907883a 	add	r3,r3,r4
   27824:	19000017 	ldw	r4,0(r3)
   27828:	89000015 	stw	r4,0(r17)
   2782c:	1c400015 	stw	r17,0(r3)
   27830:	dfc00617 	ldw	ra,24(sp)
   27834:	dd400517 	ldw	r21,20(sp)
   27838:	dd000417 	ldw	r20,16(sp)
   2783c:	dcc00317 	ldw	r19,12(sp)
   27840:	dc800217 	ldw	r18,8(sp)
   27844:	dc400117 	ldw	r17,4(sp)
   27848:	dc000017 	ldw	r16,0(sp)
   2784c:	dec00704 	addi	sp,sp,28
   27850:	f800283a 	ret
   27854:	21400017 	ldw	r5,0(r4)
   27858:	18c00104 	addi	r3,r3,4
   2785c:	21000104 	addi	r4,r4,4
   27860:	197fff15 	stw	r5,-4(r3)
   27864:	223ffb36 	bltu	r4,r8,27854 <__alt_data_end+0xfffe7854>
   27868:	003fe606 	br	27804 <__alt_data_end+0xfffe7804>
   2786c:	9c000084 	addi	r16,r19,2
   27870:	003fe406 	br	27804 <__alt_data_end+0xfffe7804>

00027874 <__mcmp>:
   27874:	20800417 	ldw	r2,16(r4)
   27878:	28c00417 	ldw	r3,16(r5)
   2787c:	10c5c83a 	sub	r2,r2,r3
   27880:	1000111e 	bne	r2,zero,278c8 <__mcmp+0x54>
   27884:	18c7883a 	add	r3,r3,r3
   27888:	18c7883a 	add	r3,r3,r3
   2788c:	21000504 	addi	r4,r4,20
   27890:	29400504 	addi	r5,r5,20
   27894:	20c5883a 	add	r2,r4,r3
   27898:	28cb883a 	add	r5,r5,r3
   2789c:	00000106 	br	278a4 <__mcmp+0x30>
   278a0:	20800a2e 	bgeu	r4,r2,278cc <__mcmp+0x58>
   278a4:	10bfff04 	addi	r2,r2,-4
   278a8:	297fff04 	addi	r5,r5,-4
   278ac:	11800017 	ldw	r6,0(r2)
   278b0:	28c00017 	ldw	r3,0(r5)
   278b4:	30fffa26 	beq	r6,r3,278a0 <__alt_data_end+0xfffe78a0>
   278b8:	30c00236 	bltu	r6,r3,278c4 <__mcmp+0x50>
   278bc:	00800044 	movi	r2,1
   278c0:	f800283a 	ret
   278c4:	00bfffc4 	movi	r2,-1
   278c8:	f800283a 	ret
   278cc:	0005883a 	mov	r2,zero
   278d0:	f800283a 	ret

000278d4 <__mdiff>:
   278d4:	28c00417 	ldw	r3,16(r5)
   278d8:	30800417 	ldw	r2,16(r6)
   278dc:	defffa04 	addi	sp,sp,-24
   278e0:	dcc00315 	stw	r19,12(sp)
   278e4:	dc800215 	stw	r18,8(sp)
   278e8:	dfc00515 	stw	ra,20(sp)
   278ec:	dd000415 	stw	r20,16(sp)
   278f0:	dc400115 	stw	r17,4(sp)
   278f4:	dc000015 	stw	r16,0(sp)
   278f8:	1887c83a 	sub	r3,r3,r2
   278fc:	2825883a 	mov	r18,r5
   27900:	3027883a 	mov	r19,r6
   27904:	1800141e 	bne	r3,zero,27958 <__mdiff+0x84>
   27908:	1085883a 	add	r2,r2,r2
   2790c:	1085883a 	add	r2,r2,r2
   27910:	2a000504 	addi	r8,r5,20
   27914:	34000504 	addi	r16,r6,20
   27918:	4087883a 	add	r3,r8,r2
   2791c:	8085883a 	add	r2,r16,r2
   27920:	00000106 	br	27928 <__mdiff+0x54>
   27924:	40c0592e 	bgeu	r8,r3,27a8c <__mdiff+0x1b8>
   27928:	18ffff04 	addi	r3,r3,-4
   2792c:	10bfff04 	addi	r2,r2,-4
   27930:	19c00017 	ldw	r7,0(r3)
   27934:	11400017 	ldw	r5,0(r2)
   27938:	397ffa26 	beq	r7,r5,27924 <__alt_data_end+0xfffe7924>
   2793c:	3940592e 	bgeu	r7,r5,27aa4 <__mdiff+0x1d0>
   27940:	9005883a 	mov	r2,r18
   27944:	4023883a 	mov	r17,r8
   27948:	9825883a 	mov	r18,r19
   2794c:	05000044 	movi	r20,1
   27950:	1027883a 	mov	r19,r2
   27954:	00000406 	br	27968 <__mdiff+0x94>
   27958:	18005616 	blt	r3,zero,27ab4 <__mdiff+0x1e0>
   2795c:	34400504 	addi	r17,r6,20
   27960:	2c000504 	addi	r16,r5,20
   27964:	0029883a 	mov	r20,zero
   27968:	91400117 	ldw	r5,4(r18)
   2796c:	0026fac0 	call	26fac <_Balloc>
   27970:	92400417 	ldw	r9,16(r18)
   27974:	9b000417 	ldw	r12,16(r19)
   27978:	12c00504 	addi	r11,r2,20
   2797c:	4a51883a 	add	r8,r9,r9
   27980:	6319883a 	add	r12,r12,r12
   27984:	4211883a 	add	r8,r8,r8
   27988:	6319883a 	add	r12,r12,r12
   2798c:	15000315 	stw	r20,12(r2)
   27990:	8211883a 	add	r8,r16,r8
   27994:	8b19883a 	add	r12,r17,r12
   27998:	0007883a 	mov	r3,zero
   2799c:	81400017 	ldw	r5,0(r16)
   279a0:	89c00017 	ldw	r7,0(r17)
   279a4:	59800104 	addi	r6,r11,4
   279a8:	293fffcc 	andi	r4,r5,65535
   279ac:	20c7883a 	add	r3,r4,r3
   279b0:	393fffcc 	andi	r4,r7,65535
   279b4:	1909c83a 	sub	r4,r3,r4
   279b8:	280ad43a 	srli	r5,r5,16
   279bc:	380ed43a 	srli	r7,r7,16
   279c0:	2007d43a 	srai	r3,r4,16
   279c4:	213fffcc 	andi	r4,r4,65535
   279c8:	29cbc83a 	sub	r5,r5,r7
   279cc:	28c7883a 	add	r3,r5,r3
   279d0:	180a943a 	slli	r5,r3,16
   279d4:	8c400104 	addi	r17,r17,4
   279d8:	84000104 	addi	r16,r16,4
   279dc:	2908b03a 	or	r4,r5,r4
   279e0:	59000015 	stw	r4,0(r11)
   279e4:	1807d43a 	srai	r3,r3,16
   279e8:	3015883a 	mov	r10,r6
   279ec:	3017883a 	mov	r11,r6
   279f0:	8b3fea36 	bltu	r17,r12,2799c <__alt_data_end+0xfffe799c>
   279f4:	8200162e 	bgeu	r16,r8,27a50 <__mdiff+0x17c>
   279f8:	8017883a 	mov	r11,r16
   279fc:	59400017 	ldw	r5,0(r11)
   27a00:	31800104 	addi	r6,r6,4
   27a04:	5ac00104 	addi	r11,r11,4
   27a08:	293fffcc 	andi	r4,r5,65535
   27a0c:	20c7883a 	add	r3,r4,r3
   27a10:	280ed43a 	srli	r7,r5,16
   27a14:	180bd43a 	srai	r5,r3,16
   27a18:	193fffcc 	andi	r4,r3,65535
   27a1c:	3947883a 	add	r3,r7,r5
   27a20:	180a943a 	slli	r5,r3,16
   27a24:	1807d43a 	srai	r3,r3,16
   27a28:	2908b03a 	or	r4,r5,r4
   27a2c:	313fff15 	stw	r4,-4(r6)
   27a30:	5a3ff236 	bltu	r11,r8,279fc <__alt_data_end+0xfffe79fc>
   27a34:	0406303a 	nor	r3,zero,r16
   27a38:	1a07883a 	add	r3,r3,r8
   27a3c:	1806d0ba 	srli	r3,r3,2
   27a40:	18c00044 	addi	r3,r3,1
   27a44:	18c7883a 	add	r3,r3,r3
   27a48:	18c7883a 	add	r3,r3,r3
   27a4c:	50d5883a 	add	r10,r10,r3
   27a50:	50ffff04 	addi	r3,r10,-4
   27a54:	2000041e 	bne	r4,zero,27a68 <__mdiff+0x194>
   27a58:	18ffff04 	addi	r3,r3,-4
   27a5c:	19000017 	ldw	r4,0(r3)
   27a60:	4a7fffc4 	addi	r9,r9,-1
   27a64:	203ffc26 	beq	r4,zero,27a58 <__alt_data_end+0xfffe7a58>
   27a68:	12400415 	stw	r9,16(r2)
   27a6c:	dfc00517 	ldw	ra,20(sp)
   27a70:	dd000417 	ldw	r20,16(sp)
   27a74:	dcc00317 	ldw	r19,12(sp)
   27a78:	dc800217 	ldw	r18,8(sp)
   27a7c:	dc400117 	ldw	r17,4(sp)
   27a80:	dc000017 	ldw	r16,0(sp)
   27a84:	dec00604 	addi	sp,sp,24
   27a88:	f800283a 	ret
   27a8c:	000b883a 	mov	r5,zero
   27a90:	0026fac0 	call	26fac <_Balloc>
   27a94:	00c00044 	movi	r3,1
   27a98:	10c00415 	stw	r3,16(r2)
   27a9c:	10000515 	stw	zero,20(r2)
   27aa0:	003ff206 	br	27a6c <__alt_data_end+0xfffe7a6c>
   27aa4:	8023883a 	mov	r17,r16
   27aa8:	0029883a 	mov	r20,zero
   27aac:	4021883a 	mov	r16,r8
   27ab0:	003fad06 	br	27968 <__alt_data_end+0xfffe7968>
   27ab4:	9005883a 	mov	r2,r18
   27ab8:	94400504 	addi	r17,r18,20
   27abc:	9c000504 	addi	r16,r19,20
   27ac0:	9825883a 	mov	r18,r19
   27ac4:	05000044 	movi	r20,1
   27ac8:	1027883a 	mov	r19,r2
   27acc:	003fa606 	br	27968 <__alt_data_end+0xfffe7968>

00027ad0 <__ulp>:
   27ad0:	295ffc2c 	andhi	r5,r5,32752
   27ad4:	00bf3034 	movhi	r2,64704
   27ad8:	2887883a 	add	r3,r5,r2
   27adc:	00c0020e 	bge	zero,r3,27ae8 <__ulp+0x18>
   27ae0:	0005883a 	mov	r2,zero
   27ae4:	f800283a 	ret
   27ae8:	00c7c83a 	sub	r3,zero,r3
   27aec:	1807d53a 	srai	r3,r3,20
   27af0:	008004c4 	movi	r2,19
   27af4:	10c00b0e 	bge	r2,r3,27b24 <__ulp+0x54>
   27af8:	18bffb04 	addi	r2,r3,-20
   27afc:	01000784 	movi	r4,30
   27b00:	0007883a 	mov	r3,zero
   27b04:	20800516 	blt	r4,r2,27b1c <__ulp+0x4c>
   27b08:	010007c4 	movi	r4,31
   27b0c:	2089c83a 	sub	r4,r4,r2
   27b10:	00800044 	movi	r2,1
   27b14:	1104983a 	sll	r2,r2,r4
   27b18:	f800283a 	ret
   27b1c:	00800044 	movi	r2,1
   27b20:	f800283a 	ret
   27b24:	01400234 	movhi	r5,8
   27b28:	28c7d83a 	sra	r3,r5,r3
   27b2c:	0005883a 	mov	r2,zero
   27b30:	f800283a 	ret

00027b34 <__b2d>:
   27b34:	defffa04 	addi	sp,sp,-24
   27b38:	dc000015 	stw	r16,0(sp)
   27b3c:	24000417 	ldw	r16,16(r4)
   27b40:	dc400115 	stw	r17,4(sp)
   27b44:	24400504 	addi	r17,r4,20
   27b48:	8421883a 	add	r16,r16,r16
   27b4c:	8421883a 	add	r16,r16,r16
   27b50:	8c21883a 	add	r16,r17,r16
   27b54:	dc800215 	stw	r18,8(sp)
   27b58:	84bfff17 	ldw	r18,-4(r16)
   27b5c:	dd000415 	stw	r20,16(sp)
   27b60:	dcc00315 	stw	r19,12(sp)
   27b64:	9009883a 	mov	r4,r18
   27b68:	2829883a 	mov	r20,r5
   27b6c:	dfc00515 	stw	ra,20(sp)
   27b70:	00272a00 	call	272a0 <__hi0bits>
   27b74:	00c00804 	movi	r3,32
   27b78:	1889c83a 	sub	r4,r3,r2
   27b7c:	a1000015 	stw	r4,0(r20)
   27b80:	01000284 	movi	r4,10
   27b84:	84ffff04 	addi	r19,r16,-4
   27b88:	20801216 	blt	r4,r2,27bd4 <__b2d+0xa0>
   27b8c:	018002c4 	movi	r6,11
   27b90:	308dc83a 	sub	r6,r6,r2
   27b94:	9186d83a 	srl	r3,r18,r6
   27b98:	18cffc34 	orhi	r3,r3,16368
   27b9c:	8cc0212e 	bgeu	r17,r19,27c24 <__b2d+0xf0>
   27ba0:	813ffe17 	ldw	r4,-8(r16)
   27ba4:	218cd83a 	srl	r6,r4,r6
   27ba8:	10800544 	addi	r2,r2,21
   27bac:	9084983a 	sll	r2,r18,r2
   27bb0:	1184b03a 	or	r2,r2,r6
   27bb4:	dfc00517 	ldw	ra,20(sp)
   27bb8:	dd000417 	ldw	r20,16(sp)
   27bbc:	dcc00317 	ldw	r19,12(sp)
   27bc0:	dc800217 	ldw	r18,8(sp)
   27bc4:	dc400117 	ldw	r17,4(sp)
   27bc8:	dc000017 	ldw	r16,0(sp)
   27bcc:	dec00604 	addi	sp,sp,24
   27bd0:	f800283a 	ret
   27bd4:	8cc00f2e 	bgeu	r17,r19,27c14 <__b2d+0xe0>
   27bd8:	117ffd44 	addi	r5,r2,-11
   27bdc:	80bffe17 	ldw	r2,-8(r16)
   27be0:	28000e26 	beq	r5,zero,27c1c <__b2d+0xe8>
   27be4:	1949c83a 	sub	r4,r3,r5
   27be8:	9164983a 	sll	r18,r18,r5
   27bec:	1106d83a 	srl	r3,r2,r4
   27bf0:	81bffe04 	addi	r6,r16,-8
   27bf4:	948ffc34 	orhi	r18,r18,16368
   27bf8:	90c6b03a 	or	r3,r18,r3
   27bfc:	89800e2e 	bgeu	r17,r6,27c38 <__b2d+0x104>
   27c00:	81bffd17 	ldw	r6,-12(r16)
   27c04:	1144983a 	sll	r2,r2,r5
   27c08:	310ad83a 	srl	r5,r6,r4
   27c0c:	2884b03a 	or	r2,r5,r2
   27c10:	003fe806 	br	27bb4 <__alt_data_end+0xfffe7bb4>
   27c14:	10bffd44 	addi	r2,r2,-11
   27c18:	1000041e 	bne	r2,zero,27c2c <__b2d+0xf8>
   27c1c:	90cffc34 	orhi	r3,r18,16368
   27c20:	003fe406 	br	27bb4 <__alt_data_end+0xfffe7bb4>
   27c24:	000d883a 	mov	r6,zero
   27c28:	003fdf06 	br	27ba8 <__alt_data_end+0xfffe7ba8>
   27c2c:	90a4983a 	sll	r18,r18,r2
   27c30:	0005883a 	mov	r2,zero
   27c34:	003ff906 	br	27c1c <__alt_data_end+0xfffe7c1c>
   27c38:	1144983a 	sll	r2,r2,r5
   27c3c:	003fdd06 	br	27bb4 <__alt_data_end+0xfffe7bb4>

00027c40 <__d2b>:
   27c40:	defff804 	addi	sp,sp,-32
   27c44:	dc000215 	stw	r16,8(sp)
   27c48:	3021883a 	mov	r16,r6
   27c4c:	dc400315 	stw	r17,12(sp)
   27c50:	8022907a 	slli	r17,r16,1
   27c54:	dd000615 	stw	r20,24(sp)
   27c58:	2829883a 	mov	r20,r5
   27c5c:	01400044 	movi	r5,1
   27c60:	dcc00515 	stw	r19,20(sp)
   27c64:	dc800415 	stw	r18,16(sp)
   27c68:	dfc00715 	stw	ra,28(sp)
   27c6c:	3825883a 	mov	r18,r7
   27c70:	8822d57a 	srli	r17,r17,21
   27c74:	0026fac0 	call	26fac <_Balloc>
   27c78:	1027883a 	mov	r19,r2
   27c7c:	00800434 	movhi	r2,16
   27c80:	10bfffc4 	addi	r2,r2,-1
   27c84:	808c703a 	and	r6,r16,r2
   27c88:	88000126 	beq	r17,zero,27c90 <__d2b+0x50>
   27c8c:	31800434 	orhi	r6,r6,16
   27c90:	d9800015 	stw	r6,0(sp)
   27c94:	a0002426 	beq	r20,zero,27d28 <__d2b+0xe8>
   27c98:	d9000104 	addi	r4,sp,4
   27c9c:	dd000115 	stw	r20,4(sp)
   27ca0:	00273080 	call	27308 <__lo0bits>
   27ca4:	d8c00017 	ldw	r3,0(sp)
   27ca8:	10002f1e 	bne	r2,zero,27d68 <__d2b+0x128>
   27cac:	d9000117 	ldw	r4,4(sp)
   27cb0:	99000515 	stw	r4,20(r19)
   27cb4:	1821003a 	cmpeq	r16,r3,zero
   27cb8:	01000084 	movi	r4,2
   27cbc:	2421c83a 	sub	r16,r4,r16
   27cc0:	98c00615 	stw	r3,24(r19)
   27cc4:	9c000415 	stw	r16,16(r19)
   27cc8:	88001f1e 	bne	r17,zero,27d48 <__d2b+0x108>
   27ccc:	10bef384 	addi	r2,r2,-1074
   27cd0:	90800015 	stw	r2,0(r18)
   27cd4:	00900034 	movhi	r2,16384
   27cd8:	10bfffc4 	addi	r2,r2,-1
   27cdc:	8085883a 	add	r2,r16,r2
   27ce0:	1085883a 	add	r2,r2,r2
   27ce4:	1085883a 	add	r2,r2,r2
   27ce8:	9885883a 	add	r2,r19,r2
   27cec:	11000517 	ldw	r4,20(r2)
   27cf0:	8020917a 	slli	r16,r16,5
   27cf4:	00272a00 	call	272a0 <__hi0bits>
   27cf8:	d8c00817 	ldw	r3,32(sp)
   27cfc:	8085c83a 	sub	r2,r16,r2
   27d00:	18800015 	stw	r2,0(r3)
   27d04:	9805883a 	mov	r2,r19
   27d08:	dfc00717 	ldw	ra,28(sp)
   27d0c:	dd000617 	ldw	r20,24(sp)
   27d10:	dcc00517 	ldw	r19,20(sp)
   27d14:	dc800417 	ldw	r18,16(sp)
   27d18:	dc400317 	ldw	r17,12(sp)
   27d1c:	dc000217 	ldw	r16,8(sp)
   27d20:	dec00804 	addi	sp,sp,32
   27d24:	f800283a 	ret
   27d28:	d809883a 	mov	r4,sp
   27d2c:	00273080 	call	27308 <__lo0bits>
   27d30:	d8c00017 	ldw	r3,0(sp)
   27d34:	04000044 	movi	r16,1
   27d38:	9c000415 	stw	r16,16(r19)
   27d3c:	98c00515 	stw	r3,20(r19)
   27d40:	10800804 	addi	r2,r2,32
   27d44:	883fe126 	beq	r17,zero,27ccc <__alt_data_end+0xfffe7ccc>
   27d48:	00c00d44 	movi	r3,53
   27d4c:	8c7ef344 	addi	r17,r17,-1075
   27d50:	88a3883a 	add	r17,r17,r2
   27d54:	1885c83a 	sub	r2,r3,r2
   27d58:	d8c00817 	ldw	r3,32(sp)
   27d5c:	94400015 	stw	r17,0(r18)
   27d60:	18800015 	stw	r2,0(r3)
   27d64:	003fe706 	br	27d04 <__alt_data_end+0xfffe7d04>
   27d68:	01000804 	movi	r4,32
   27d6c:	2089c83a 	sub	r4,r4,r2
   27d70:	1908983a 	sll	r4,r3,r4
   27d74:	d9400117 	ldw	r5,4(sp)
   27d78:	1886d83a 	srl	r3,r3,r2
   27d7c:	2148b03a 	or	r4,r4,r5
   27d80:	99000515 	stw	r4,20(r19)
   27d84:	d8c00015 	stw	r3,0(sp)
   27d88:	003fca06 	br	27cb4 <__alt_data_end+0xfffe7cb4>

00027d8c <__ratio>:
   27d8c:	defff904 	addi	sp,sp,-28
   27d90:	dc400315 	stw	r17,12(sp)
   27d94:	2823883a 	mov	r17,r5
   27d98:	d9400104 	addi	r5,sp,4
   27d9c:	dfc00615 	stw	ra,24(sp)
   27da0:	dcc00515 	stw	r19,20(sp)
   27da4:	dc800415 	stw	r18,16(sp)
   27da8:	2027883a 	mov	r19,r4
   27dac:	dc000215 	stw	r16,8(sp)
   27db0:	0027b340 	call	27b34 <__b2d>
   27db4:	d80b883a 	mov	r5,sp
   27db8:	8809883a 	mov	r4,r17
   27dbc:	1025883a 	mov	r18,r2
   27dc0:	1821883a 	mov	r16,r3
   27dc4:	0027b340 	call	27b34 <__b2d>
   27dc8:	8a000417 	ldw	r8,16(r17)
   27dcc:	99000417 	ldw	r4,16(r19)
   27dd0:	d9400117 	ldw	r5,4(sp)
   27dd4:	2209c83a 	sub	r4,r4,r8
   27dd8:	2010917a 	slli	r8,r4,5
   27ddc:	d9000017 	ldw	r4,0(sp)
   27de0:	2909c83a 	sub	r4,r5,r4
   27de4:	4109883a 	add	r4,r8,r4
   27de8:	01000e0e 	bge	zero,r4,27e24 <__ratio+0x98>
   27dec:	2008953a 	slli	r4,r4,20
   27df0:	2421883a 	add	r16,r4,r16
   27df4:	100d883a 	mov	r6,r2
   27df8:	180f883a 	mov	r7,r3
   27dfc:	9009883a 	mov	r4,r18
   27e00:	800b883a 	mov	r5,r16
   27e04:	002c1740 	call	2c174 <__divdf3>
   27e08:	dfc00617 	ldw	ra,24(sp)
   27e0c:	dcc00517 	ldw	r19,20(sp)
   27e10:	dc800417 	ldw	r18,16(sp)
   27e14:	dc400317 	ldw	r17,12(sp)
   27e18:	dc000217 	ldw	r16,8(sp)
   27e1c:	dec00704 	addi	sp,sp,28
   27e20:	f800283a 	ret
   27e24:	2008953a 	slli	r4,r4,20
   27e28:	1907c83a 	sub	r3,r3,r4
   27e2c:	003ff106 	br	27df4 <__alt_data_end+0xfffe7df4>

00027e30 <_mprec_log10>:
   27e30:	defffe04 	addi	sp,sp,-8
   27e34:	dc000015 	stw	r16,0(sp)
   27e38:	dfc00115 	stw	ra,4(sp)
   27e3c:	008005c4 	movi	r2,23
   27e40:	2021883a 	mov	r16,r4
   27e44:	11000d0e 	bge	r2,r4,27e7c <_mprec_log10+0x4c>
   27e48:	0005883a 	mov	r2,zero
   27e4c:	00cffc34 	movhi	r3,16368
   27e50:	843fffc4 	addi	r16,r16,-1
   27e54:	000d883a 	mov	r6,zero
   27e58:	01d00934 	movhi	r7,16420
   27e5c:	1009883a 	mov	r4,r2
   27e60:	180b883a 	mov	r5,r3
   27e64:	00206f80 	call	206f8 <__muldf3>
   27e68:	803ff91e 	bne	r16,zero,27e50 <__alt_data_end+0xfffe7e50>
   27e6c:	dfc00117 	ldw	ra,4(sp)
   27e70:	dc000017 	ldw	r16,0(sp)
   27e74:	dec00204 	addi	sp,sp,8
   27e78:	f800283a 	ret
   27e7c:	202090fa 	slli	r16,r4,3
   27e80:	008000f4 	movhi	r2,3
   27e84:	10bd4e04 	addi	r2,r2,-2760
   27e88:	1421883a 	add	r16,r2,r16
   27e8c:	80800017 	ldw	r2,0(r16)
   27e90:	80c00117 	ldw	r3,4(r16)
   27e94:	dfc00117 	ldw	ra,4(sp)
   27e98:	dc000017 	ldw	r16,0(sp)
   27e9c:	dec00204 	addi	sp,sp,8
   27ea0:	f800283a 	ret

00027ea4 <__copybits>:
   27ea4:	297fffc4 	addi	r5,r5,-1
   27ea8:	280fd17a 	srai	r7,r5,5
   27eac:	30c00417 	ldw	r3,16(r6)
   27eb0:	30800504 	addi	r2,r6,20
   27eb4:	39c00044 	addi	r7,r7,1
   27eb8:	18c7883a 	add	r3,r3,r3
   27ebc:	39cf883a 	add	r7,r7,r7
   27ec0:	18c7883a 	add	r3,r3,r3
   27ec4:	39cf883a 	add	r7,r7,r7
   27ec8:	10c7883a 	add	r3,r2,r3
   27ecc:	21cf883a 	add	r7,r4,r7
   27ed0:	10c00d2e 	bgeu	r2,r3,27f08 <__copybits+0x64>
   27ed4:	200b883a 	mov	r5,r4
   27ed8:	12000017 	ldw	r8,0(r2)
   27edc:	29400104 	addi	r5,r5,4
   27ee0:	10800104 	addi	r2,r2,4
   27ee4:	2a3fff15 	stw	r8,-4(r5)
   27ee8:	10fffb36 	bltu	r2,r3,27ed8 <__alt_data_end+0xfffe7ed8>
   27eec:	1985c83a 	sub	r2,r3,r6
   27ef0:	10bffac4 	addi	r2,r2,-21
   27ef4:	1004d0ba 	srli	r2,r2,2
   27ef8:	10800044 	addi	r2,r2,1
   27efc:	1085883a 	add	r2,r2,r2
   27f00:	1085883a 	add	r2,r2,r2
   27f04:	2089883a 	add	r4,r4,r2
   27f08:	21c0032e 	bgeu	r4,r7,27f18 <__copybits+0x74>
   27f0c:	20000015 	stw	zero,0(r4)
   27f10:	21000104 	addi	r4,r4,4
   27f14:	21fffd36 	bltu	r4,r7,27f0c <__alt_data_end+0xfffe7f0c>
   27f18:	f800283a 	ret

00027f1c <__any_on>:
   27f1c:	20c00417 	ldw	r3,16(r4)
   27f20:	2805d17a 	srai	r2,r5,5
   27f24:	21000504 	addi	r4,r4,20
   27f28:	18800d0e 	bge	r3,r2,27f60 <__any_on+0x44>
   27f2c:	18c7883a 	add	r3,r3,r3
   27f30:	18c7883a 	add	r3,r3,r3
   27f34:	20c7883a 	add	r3,r4,r3
   27f38:	20c0192e 	bgeu	r4,r3,27fa0 <__any_on+0x84>
   27f3c:	18bfff17 	ldw	r2,-4(r3)
   27f40:	18ffff04 	addi	r3,r3,-4
   27f44:	1000041e 	bne	r2,zero,27f58 <__any_on+0x3c>
   27f48:	20c0142e 	bgeu	r4,r3,27f9c <__any_on+0x80>
   27f4c:	18ffff04 	addi	r3,r3,-4
   27f50:	19400017 	ldw	r5,0(r3)
   27f54:	283ffc26 	beq	r5,zero,27f48 <__alt_data_end+0xfffe7f48>
   27f58:	00800044 	movi	r2,1
   27f5c:	f800283a 	ret
   27f60:	10c00a0e 	bge	r2,r3,27f8c <__any_on+0x70>
   27f64:	1085883a 	add	r2,r2,r2
   27f68:	1085883a 	add	r2,r2,r2
   27f6c:	294007cc 	andi	r5,r5,31
   27f70:	2087883a 	add	r3,r4,r2
   27f74:	283ff026 	beq	r5,zero,27f38 <__alt_data_end+0xfffe7f38>
   27f78:	19800017 	ldw	r6,0(r3)
   27f7c:	3144d83a 	srl	r2,r6,r5
   27f80:	114a983a 	sll	r5,r2,r5
   27f84:	317ff41e 	bne	r6,r5,27f58 <__alt_data_end+0xfffe7f58>
   27f88:	003feb06 	br	27f38 <__alt_data_end+0xfffe7f38>
   27f8c:	1085883a 	add	r2,r2,r2
   27f90:	1085883a 	add	r2,r2,r2
   27f94:	2087883a 	add	r3,r4,r2
   27f98:	003fe706 	br	27f38 <__alt_data_end+0xfffe7f38>
   27f9c:	f800283a 	ret
   27fa0:	0005883a 	mov	r2,zero
   27fa4:	f800283a 	ret

00027fa8 <__fpclassifyd>:
   27fa8:	00a00034 	movhi	r2,32768
   27fac:	10bfffc4 	addi	r2,r2,-1
   27fb0:	2884703a 	and	r2,r5,r2
   27fb4:	10000726 	beq	r2,zero,27fd4 <__fpclassifyd+0x2c>
   27fb8:	00fffc34 	movhi	r3,65520
   27fbc:	019ff834 	movhi	r6,32736
   27fc0:	28c7883a 	add	r3,r5,r3
   27fc4:	31bfffc4 	addi	r6,r6,-1
   27fc8:	30c00536 	bltu	r6,r3,27fe0 <__fpclassifyd+0x38>
   27fcc:	00800104 	movi	r2,4
   27fd0:	f800283a 	ret
   27fd4:	2000021e 	bne	r4,zero,27fe0 <__fpclassifyd+0x38>
   27fd8:	00800084 	movi	r2,2
   27fdc:	f800283a 	ret
   27fe0:	00dffc34 	movhi	r3,32752
   27fe4:	019ff834 	movhi	r6,32736
   27fe8:	28cb883a 	add	r5,r5,r3
   27fec:	31bfffc4 	addi	r6,r6,-1
   27ff0:	317ff62e 	bgeu	r6,r5,27fcc <__alt_data_end+0xfffe7fcc>
   27ff4:	01400434 	movhi	r5,16
   27ff8:	297fffc4 	addi	r5,r5,-1
   27ffc:	28800236 	bltu	r5,r2,28008 <__fpclassifyd+0x60>
   28000:	008000c4 	movi	r2,3
   28004:	f800283a 	ret
   28008:	10c00226 	beq	r2,r3,28014 <__fpclassifyd+0x6c>
   2800c:	0005883a 	mov	r2,zero
   28010:	f800283a 	ret
   28014:	2005003a 	cmpeq	r2,r4,zero
   28018:	f800283a 	ret

0002801c <_sbrk_r>:
   2801c:	defffd04 	addi	sp,sp,-12
   28020:	dc000015 	stw	r16,0(sp)
   28024:	040000f4 	movhi	r16,3
   28028:	dc400115 	stw	r17,4(sp)
   2802c:	840b1104 	addi	r16,r16,11332
   28030:	2023883a 	mov	r17,r4
   28034:	2809883a 	mov	r4,r5
   28038:	dfc00215 	stw	ra,8(sp)
   2803c:	80000015 	stw	zero,0(r16)
   28040:	002d4140 	call	2d414 <sbrk>
   28044:	00ffffc4 	movi	r3,-1
   28048:	10c00526 	beq	r2,r3,28060 <_sbrk_r+0x44>
   2804c:	dfc00217 	ldw	ra,8(sp)
   28050:	dc400117 	ldw	r17,4(sp)
   28054:	dc000017 	ldw	r16,0(sp)
   28058:	dec00304 	addi	sp,sp,12
   2805c:	f800283a 	ret
   28060:	80c00017 	ldw	r3,0(r16)
   28064:	183ff926 	beq	r3,zero,2804c <__alt_data_end+0xfffe804c>
   28068:	88c00015 	stw	r3,0(r17)
   2806c:	003ff706 	br	2804c <__alt_data_end+0xfffe804c>

00028070 <__sread>:
   28070:	defffe04 	addi	sp,sp,-8
   28074:	dc000015 	stw	r16,0(sp)
   28078:	2821883a 	mov	r16,r5
   2807c:	2940038f 	ldh	r5,14(r5)
   28080:	dfc00115 	stw	ra,4(sp)
   28084:	002a5140 	call	2a514 <_read_r>
   28088:	10000716 	blt	r2,zero,280a8 <__sread+0x38>
   2808c:	80c01417 	ldw	r3,80(r16)
   28090:	1887883a 	add	r3,r3,r2
   28094:	80c01415 	stw	r3,80(r16)
   28098:	dfc00117 	ldw	ra,4(sp)
   2809c:	dc000017 	ldw	r16,0(sp)
   280a0:	dec00204 	addi	sp,sp,8
   280a4:	f800283a 	ret
   280a8:	80c0030b 	ldhu	r3,12(r16)
   280ac:	18fbffcc 	andi	r3,r3,61439
   280b0:	80c0030d 	sth	r3,12(r16)
   280b4:	dfc00117 	ldw	ra,4(sp)
   280b8:	dc000017 	ldw	r16,0(sp)
   280bc:	dec00204 	addi	sp,sp,8
   280c0:	f800283a 	ret

000280c4 <__seofread>:
   280c4:	0005883a 	mov	r2,zero
   280c8:	f800283a 	ret

000280cc <__swrite>:
   280cc:	2880030b 	ldhu	r2,12(r5)
   280d0:	defffb04 	addi	sp,sp,-20
   280d4:	dcc00315 	stw	r19,12(sp)
   280d8:	dc800215 	stw	r18,8(sp)
   280dc:	dc400115 	stw	r17,4(sp)
   280e0:	dc000015 	stw	r16,0(sp)
   280e4:	dfc00415 	stw	ra,16(sp)
   280e8:	10c0400c 	andi	r3,r2,256
   280ec:	2821883a 	mov	r16,r5
   280f0:	2023883a 	mov	r17,r4
   280f4:	3025883a 	mov	r18,r6
   280f8:	3827883a 	mov	r19,r7
   280fc:	18000526 	beq	r3,zero,28114 <__swrite+0x48>
   28100:	2940038f 	ldh	r5,14(r5)
   28104:	01c00084 	movi	r7,2
   28108:	000d883a 	mov	r6,zero
   2810c:	002a3580 	call	2a358 <_lseek_r>
   28110:	8080030b 	ldhu	r2,12(r16)
   28114:	8140038f 	ldh	r5,14(r16)
   28118:	10bbffcc 	andi	r2,r2,61439
   2811c:	980f883a 	mov	r7,r19
   28120:	900d883a 	mov	r6,r18
   28124:	8809883a 	mov	r4,r17
   28128:	8080030d 	sth	r2,12(r16)
   2812c:	dfc00417 	ldw	ra,16(sp)
   28130:	dcc00317 	ldw	r19,12(sp)
   28134:	dc800217 	ldw	r18,8(sp)
   28138:	dc400117 	ldw	r17,4(sp)
   2813c:	dc000017 	ldw	r16,0(sp)
   28140:	dec00504 	addi	sp,sp,20
   28144:	00299681 	jmpi	29968 <_write_r>

00028148 <__sseek>:
   28148:	defffe04 	addi	sp,sp,-8
   2814c:	dc000015 	stw	r16,0(sp)
   28150:	2821883a 	mov	r16,r5
   28154:	2940038f 	ldh	r5,14(r5)
   28158:	dfc00115 	stw	ra,4(sp)
   2815c:	002a3580 	call	2a358 <_lseek_r>
   28160:	00ffffc4 	movi	r3,-1
   28164:	10c00826 	beq	r2,r3,28188 <__sseek+0x40>
   28168:	80c0030b 	ldhu	r3,12(r16)
   2816c:	80801415 	stw	r2,80(r16)
   28170:	18c40014 	ori	r3,r3,4096
   28174:	80c0030d 	sth	r3,12(r16)
   28178:	dfc00117 	ldw	ra,4(sp)
   2817c:	dc000017 	ldw	r16,0(sp)
   28180:	dec00204 	addi	sp,sp,8
   28184:	f800283a 	ret
   28188:	80c0030b 	ldhu	r3,12(r16)
   2818c:	18fbffcc 	andi	r3,r3,61439
   28190:	80c0030d 	sth	r3,12(r16)
   28194:	dfc00117 	ldw	ra,4(sp)
   28198:	dc000017 	ldw	r16,0(sp)
   2819c:	dec00204 	addi	sp,sp,8
   281a0:	f800283a 	ret

000281a4 <__sclose>:
   281a4:	2940038f 	ldh	r5,14(r5)
   281a8:	00299c81 	jmpi	299c8 <_close_r>

000281ac <strcmp>:
   281ac:	2144b03a 	or	r2,r4,r5
   281b0:	108000cc 	andi	r2,r2,3
   281b4:	1000171e 	bne	r2,zero,28214 <strcmp+0x68>
   281b8:	20800017 	ldw	r2,0(r4)
   281bc:	28c00017 	ldw	r3,0(r5)
   281c0:	10c0141e 	bne	r2,r3,28214 <strcmp+0x68>
   281c4:	027fbff4 	movhi	r9,65279
   281c8:	4a7fbfc4 	addi	r9,r9,-257
   281cc:	0086303a 	nor	r3,zero,r2
   281d0:	02202074 	movhi	r8,32897
   281d4:	1245883a 	add	r2,r2,r9
   281d8:	42202004 	addi	r8,r8,-32640
   281dc:	10c4703a 	and	r2,r2,r3
   281e0:	1204703a 	and	r2,r2,r8
   281e4:	10000226 	beq	r2,zero,281f0 <strcmp+0x44>
   281e8:	00002306 	br	28278 <strcmp+0xcc>
   281ec:	1000221e 	bne	r2,zero,28278 <strcmp+0xcc>
   281f0:	21000104 	addi	r4,r4,4
   281f4:	20c00017 	ldw	r3,0(r4)
   281f8:	29400104 	addi	r5,r5,4
   281fc:	29800017 	ldw	r6,0(r5)
   28200:	1a4f883a 	add	r7,r3,r9
   28204:	00c4303a 	nor	r2,zero,r3
   28208:	3884703a 	and	r2,r7,r2
   2820c:	1204703a 	and	r2,r2,r8
   28210:	19bff626 	beq	r3,r6,281ec <__alt_data_end+0xfffe81ec>
   28214:	20800003 	ldbu	r2,0(r4)
   28218:	10c03fcc 	andi	r3,r2,255
   2821c:	18c0201c 	xori	r3,r3,128
   28220:	18ffe004 	addi	r3,r3,-128
   28224:	18000c26 	beq	r3,zero,28258 <strcmp+0xac>
   28228:	29800007 	ldb	r6,0(r5)
   2822c:	19800326 	beq	r3,r6,2823c <strcmp+0x90>
   28230:	00001306 	br	28280 <strcmp+0xd4>
   28234:	29800007 	ldb	r6,0(r5)
   28238:	11800b1e 	bne	r2,r6,28268 <strcmp+0xbc>
   2823c:	21000044 	addi	r4,r4,1
   28240:	20c00003 	ldbu	r3,0(r4)
   28244:	29400044 	addi	r5,r5,1
   28248:	18803fcc 	andi	r2,r3,255
   2824c:	1080201c 	xori	r2,r2,128
   28250:	10bfe004 	addi	r2,r2,-128
   28254:	103ff71e 	bne	r2,zero,28234 <__alt_data_end+0xfffe8234>
   28258:	0007883a 	mov	r3,zero
   2825c:	28800003 	ldbu	r2,0(r5)
   28260:	1885c83a 	sub	r2,r3,r2
   28264:	f800283a 	ret
   28268:	28800003 	ldbu	r2,0(r5)
   2826c:	18c03fcc 	andi	r3,r3,255
   28270:	1885c83a 	sub	r2,r3,r2
   28274:	f800283a 	ret
   28278:	0005883a 	mov	r2,zero
   2827c:	f800283a 	ret
   28280:	10c03fcc 	andi	r3,r2,255
   28284:	003ff506 	br	2825c <__alt_data_end+0xfffe825c>

00028288 <strlen>:
   28288:	208000cc 	andi	r2,r4,3
   2828c:	10002026 	beq	r2,zero,28310 <strlen+0x88>
   28290:	20800007 	ldb	r2,0(r4)
   28294:	10002026 	beq	r2,zero,28318 <strlen+0x90>
   28298:	2005883a 	mov	r2,r4
   2829c:	00000206 	br	282a8 <strlen+0x20>
   282a0:	10c00007 	ldb	r3,0(r2)
   282a4:	18001826 	beq	r3,zero,28308 <strlen+0x80>
   282a8:	10800044 	addi	r2,r2,1
   282ac:	10c000cc 	andi	r3,r2,3
   282b0:	183ffb1e 	bne	r3,zero,282a0 <__alt_data_end+0xfffe82a0>
   282b4:	10c00017 	ldw	r3,0(r2)
   282b8:	01ffbff4 	movhi	r7,65279
   282bc:	39ffbfc4 	addi	r7,r7,-257
   282c0:	00ca303a 	nor	r5,zero,r3
   282c4:	01a02074 	movhi	r6,32897
   282c8:	19c7883a 	add	r3,r3,r7
   282cc:	31a02004 	addi	r6,r6,-32640
   282d0:	1946703a 	and	r3,r3,r5
   282d4:	1986703a 	and	r3,r3,r6
   282d8:	1800091e 	bne	r3,zero,28300 <strlen+0x78>
   282dc:	10800104 	addi	r2,r2,4
   282e0:	10c00017 	ldw	r3,0(r2)
   282e4:	19cb883a 	add	r5,r3,r7
   282e8:	00c6303a 	nor	r3,zero,r3
   282ec:	28c6703a 	and	r3,r5,r3
   282f0:	1986703a 	and	r3,r3,r6
   282f4:	183ff926 	beq	r3,zero,282dc <__alt_data_end+0xfffe82dc>
   282f8:	00000106 	br	28300 <strlen+0x78>
   282fc:	10800044 	addi	r2,r2,1
   28300:	10c00007 	ldb	r3,0(r2)
   28304:	183ffd1e 	bne	r3,zero,282fc <__alt_data_end+0xfffe82fc>
   28308:	1105c83a 	sub	r2,r2,r4
   2830c:	f800283a 	ret
   28310:	2005883a 	mov	r2,r4
   28314:	003fe706 	br	282b4 <__alt_data_end+0xfffe82b4>
   28318:	0005883a 	mov	r2,zero
   2831c:	f800283a 	ret

00028320 <__sprint_r.part.0>:
   28320:	28801917 	ldw	r2,100(r5)
   28324:	defff604 	addi	sp,sp,-40
   28328:	dd400515 	stw	r21,20(sp)
   2832c:	dfc00915 	stw	ra,36(sp)
   28330:	df000815 	stw	fp,32(sp)
   28334:	ddc00715 	stw	r23,28(sp)
   28338:	dd800615 	stw	r22,24(sp)
   2833c:	dd000415 	stw	r20,16(sp)
   28340:	dcc00315 	stw	r19,12(sp)
   28344:	dc800215 	stw	r18,8(sp)
   28348:	dc400115 	stw	r17,4(sp)
   2834c:	dc000015 	stw	r16,0(sp)
   28350:	1088000c 	andi	r2,r2,8192
   28354:	302b883a 	mov	r21,r6
   28358:	10002e26 	beq	r2,zero,28414 <__sprint_r.part.0+0xf4>
   2835c:	30800217 	ldw	r2,8(r6)
   28360:	35800017 	ldw	r22,0(r6)
   28364:	10002926 	beq	r2,zero,2840c <__sprint_r.part.0+0xec>
   28368:	2827883a 	mov	r19,r5
   2836c:	2029883a 	mov	r20,r4
   28370:	b5c00104 	addi	r23,r22,4
   28374:	04bfffc4 	movi	r18,-1
   28378:	bc400017 	ldw	r17,0(r23)
   2837c:	b4000017 	ldw	r16,0(r22)
   28380:	0039883a 	mov	fp,zero
   28384:	8822d0ba 	srli	r17,r17,2
   28388:	8800031e 	bne	r17,zero,28398 <__sprint_r.part.0+0x78>
   2838c:	00001806 	br	283f0 <__sprint_r.part.0+0xd0>
   28390:	84000104 	addi	r16,r16,4
   28394:	8f001526 	beq	r17,fp,283ec <__sprint_r.part.0+0xcc>
   28398:	81400017 	ldw	r5,0(r16)
   2839c:	980d883a 	mov	r6,r19
   283a0:	a009883a 	mov	r4,r20
   283a4:	0029d480 	call	29d48 <_fputwc_r>
   283a8:	e7000044 	addi	fp,fp,1
   283ac:	14bff81e 	bne	r2,r18,28390 <__alt_data_end+0xfffe8390>
   283b0:	9005883a 	mov	r2,r18
   283b4:	a8000215 	stw	zero,8(r21)
   283b8:	a8000115 	stw	zero,4(r21)
   283bc:	dfc00917 	ldw	ra,36(sp)
   283c0:	df000817 	ldw	fp,32(sp)
   283c4:	ddc00717 	ldw	r23,28(sp)
   283c8:	dd800617 	ldw	r22,24(sp)
   283cc:	dd400517 	ldw	r21,20(sp)
   283d0:	dd000417 	ldw	r20,16(sp)
   283d4:	dcc00317 	ldw	r19,12(sp)
   283d8:	dc800217 	ldw	r18,8(sp)
   283dc:	dc400117 	ldw	r17,4(sp)
   283e0:	dc000017 	ldw	r16,0(sp)
   283e4:	dec00a04 	addi	sp,sp,40
   283e8:	f800283a 	ret
   283ec:	a8800217 	ldw	r2,8(r21)
   283f0:	8c63883a 	add	r17,r17,r17
   283f4:	8c63883a 	add	r17,r17,r17
   283f8:	1445c83a 	sub	r2,r2,r17
   283fc:	a8800215 	stw	r2,8(r21)
   28400:	b5800204 	addi	r22,r22,8
   28404:	bdc00204 	addi	r23,r23,8
   28408:	103fdb1e 	bne	r2,zero,28378 <__alt_data_end+0xfffe8378>
   2840c:	0005883a 	mov	r2,zero
   28410:	003fe806 	br	283b4 <__alt_data_end+0xfffe83b4>
   28414:	0029e480 	call	29e48 <__sfvwrite_r>
   28418:	003fe606 	br	283b4 <__alt_data_end+0xfffe83b4>

0002841c <__sprint_r>:
   2841c:	30c00217 	ldw	r3,8(r6)
   28420:	18000126 	beq	r3,zero,28428 <__sprint_r+0xc>
   28424:	00283201 	jmpi	28320 <__sprint_r.part.0>
   28428:	30000115 	stw	zero,4(r6)
   2842c:	0005883a 	mov	r2,zero
   28430:	f800283a 	ret

00028434 <___vfiprintf_internal_r>:
   28434:	deffc904 	addi	sp,sp,-220
   28438:	df003515 	stw	fp,212(sp)
   2843c:	dd003115 	stw	r20,196(sp)
   28440:	dfc03615 	stw	ra,216(sp)
   28444:	ddc03415 	stw	r23,208(sp)
   28448:	dd803315 	stw	r22,204(sp)
   2844c:	dd403215 	stw	r21,200(sp)
   28450:	dcc03015 	stw	r19,192(sp)
   28454:	dc802f15 	stw	r18,188(sp)
   28458:	dc402e15 	stw	r17,184(sp)
   2845c:	dc002d15 	stw	r16,180(sp)
   28460:	d9002015 	stw	r4,128(sp)
   28464:	d9c02215 	stw	r7,136(sp)
   28468:	2829883a 	mov	r20,r5
   2846c:	3039883a 	mov	fp,r6
   28470:	20000226 	beq	r4,zero,2847c <___vfiprintf_internal_r+0x48>
   28474:	20800e17 	ldw	r2,56(r4)
   28478:	1000cf26 	beq	r2,zero,287b8 <___vfiprintf_internal_r+0x384>
   2847c:	a080030b 	ldhu	r2,12(r20)
   28480:	10c8000c 	andi	r3,r2,8192
   28484:	1800061e 	bne	r3,zero,284a0 <___vfiprintf_internal_r+0x6c>
   28488:	a1001917 	ldw	r4,100(r20)
   2848c:	00f7ffc4 	movi	r3,-8193
   28490:	10880014 	ori	r2,r2,8192
   28494:	20c6703a 	and	r3,r4,r3
   28498:	a080030d 	sth	r2,12(r20)
   2849c:	a0c01915 	stw	r3,100(r20)
   284a0:	10c0020c 	andi	r3,r2,8
   284a4:	1800a926 	beq	r3,zero,2874c <___vfiprintf_internal_r+0x318>
   284a8:	a0c00417 	ldw	r3,16(r20)
   284ac:	1800a726 	beq	r3,zero,2874c <___vfiprintf_internal_r+0x318>
   284b0:	1080068c 	andi	r2,r2,26
   284b4:	00c00284 	movi	r3,10
   284b8:	10c0ac26 	beq	r2,r3,2876c <___vfiprintf_internal_r+0x338>
   284bc:	da801a04 	addi	r10,sp,104
   284c0:	da801e15 	stw	r10,120(sp)
   284c4:	d8801e17 	ldw	r2,120(sp)
   284c8:	da8019c4 	addi	r10,sp,103
   284cc:	058000f4 	movhi	r22,3
   284d0:	05c000f4 	movhi	r23,3
   284d4:	da801f15 	stw	r10,124(sp)
   284d8:	1295c83a 	sub	r10,r2,r10
   284dc:	b5bd8404 	addi	r22,r22,-2544
   284e0:	bdfd8004 	addi	r23,r23,-2560
   284e4:	dec01a15 	stw	sp,104(sp)
   284e8:	d8001c15 	stw	zero,112(sp)
   284ec:	d8001b15 	stw	zero,108(sp)
   284f0:	d8002615 	stw	zero,152(sp)
   284f4:	d8002315 	stw	zero,140(sp)
   284f8:	da802715 	stw	r10,156(sp)
   284fc:	d811883a 	mov	r8,sp
   28500:	dd002115 	stw	r20,132(sp)
   28504:	e021883a 	mov	r16,fp
   28508:	80800007 	ldb	r2,0(r16)
   2850c:	1003ea26 	beq	r2,zero,294b8 <___vfiprintf_internal_r+0x1084>
   28510:	00c00944 	movi	r3,37
   28514:	8025883a 	mov	r18,r16
   28518:	10c0021e 	bne	r2,r3,28524 <___vfiprintf_internal_r+0xf0>
   2851c:	00001606 	br	28578 <___vfiprintf_internal_r+0x144>
   28520:	10c00326 	beq	r2,r3,28530 <___vfiprintf_internal_r+0xfc>
   28524:	94800044 	addi	r18,r18,1
   28528:	90800007 	ldb	r2,0(r18)
   2852c:	103ffc1e 	bne	r2,zero,28520 <__alt_data_end+0xfffe8520>
   28530:	9423c83a 	sub	r17,r18,r16
   28534:	88001026 	beq	r17,zero,28578 <___vfiprintf_internal_r+0x144>
   28538:	d8c01c17 	ldw	r3,112(sp)
   2853c:	d8801b17 	ldw	r2,108(sp)
   28540:	44000015 	stw	r16,0(r8)
   28544:	88c7883a 	add	r3,r17,r3
   28548:	10800044 	addi	r2,r2,1
   2854c:	44400115 	stw	r17,4(r8)
   28550:	d8c01c15 	stw	r3,112(sp)
   28554:	d8801b15 	stw	r2,108(sp)
   28558:	010001c4 	movi	r4,7
   2855c:	2080760e 	bge	r4,r2,28738 <___vfiprintf_internal_r+0x304>
   28560:	1803821e 	bne	r3,zero,2936c <___vfiprintf_internal_r+0xf38>
   28564:	da802317 	ldw	r10,140(sp)
   28568:	d8001b15 	stw	zero,108(sp)
   2856c:	d811883a 	mov	r8,sp
   28570:	5455883a 	add	r10,r10,r17
   28574:	da802315 	stw	r10,140(sp)
   28578:	90800007 	ldb	r2,0(r18)
   2857c:	10044626 	beq	r2,zero,29698 <___vfiprintf_internal_r+0x1264>
   28580:	90c00047 	ldb	r3,1(r18)
   28584:	94000044 	addi	r16,r18,1
   28588:	d8001d85 	stb	zero,118(sp)
   2858c:	0009883a 	mov	r4,zero
   28590:	000f883a 	mov	r7,zero
   28594:	027fffc4 	movi	r9,-1
   28598:	0023883a 	mov	r17,zero
   2859c:	0029883a 	mov	r20,zero
   285a0:	01401604 	movi	r5,88
   285a4:	01800244 	movi	r6,9
   285a8:	03400a84 	movi	r13,42
   285ac:	03001b04 	movi	r12,108
   285b0:	84000044 	addi	r16,r16,1
   285b4:	18bff804 	addi	r2,r3,-32
   285b8:	28827336 	bltu	r5,r2,28f88 <___vfiprintf_internal_r+0xb54>
   285bc:	100490ba 	slli	r2,r2,2
   285c0:	028000f4 	movhi	r10,3
   285c4:	52a17504 	addi	r10,r10,-31276
   285c8:	1285883a 	add	r2,r2,r10
   285cc:	10800017 	ldw	r2,0(r2)
   285d0:	1000683a 	jmp	r2
   285d4:	00028cbc 	xorhi	zero,zero,2610
   285d8:	00028f88 	cmpgei	zero,zero,2622
   285dc:	00028f88 	cmpgei	zero,zero,2622
   285e0:	00028cdc 	xori	zero,zero,2611
   285e4:	00028f88 	cmpgei	zero,zero,2622
   285e8:	00028f88 	cmpgei	zero,zero,2622
   285ec:	00028f88 	cmpgei	zero,zero,2622
   285f0:	00028f88 	cmpgei	zero,zero,2622
   285f4:	00028f88 	cmpgei	zero,zero,2622
   285f8:	00028f88 	cmpgei	zero,zero,2622
   285fc:	00028ec4 	movi	zero,2619
   28600:	00028ee0 	cmpeqi	zero,zero,2619
   28604:	00028f88 	cmpgei	zero,zero,2622
   28608:	000287c8 	cmpgei	zero,zero,2591
   2860c:	00028ef0 	cmpltui	zero,zero,2619
   28610:	00028f88 	cmpgei	zero,zero,2622
   28614:	00028ce8 	cmpgeui	zero,zero,2611
   28618:	00028cf4 	movhi	zero,2611
   2861c:	00028cf4 	movhi	zero,2611
   28620:	00028cf4 	movhi	zero,2611
   28624:	00028cf4 	movhi	zero,2611
   28628:	00028cf4 	movhi	zero,2611
   2862c:	00028cf4 	movhi	zero,2611
   28630:	00028cf4 	movhi	zero,2611
   28634:	00028cf4 	movhi	zero,2611
   28638:	00028cf4 	movhi	zero,2611
   2863c:	00028f88 	cmpgei	zero,zero,2622
   28640:	00028f88 	cmpgei	zero,zero,2622
   28644:	00028f88 	cmpgei	zero,zero,2622
   28648:	00028f88 	cmpgei	zero,zero,2622
   2864c:	00028f88 	cmpgei	zero,zero,2622
   28650:	00028f88 	cmpgei	zero,zero,2622
   28654:	00028f88 	cmpgei	zero,zero,2622
   28658:	00028f88 	cmpgei	zero,zero,2622
   2865c:	00028f88 	cmpgei	zero,zero,2622
   28660:	00028f88 	cmpgei	zero,zero,2622
   28664:	00028d20 	cmpeqi	zero,zero,2612
   28668:	00028f88 	cmpgei	zero,zero,2622
   2866c:	00028f88 	cmpgei	zero,zero,2622
   28670:	00028f88 	cmpgei	zero,zero,2622
   28674:	00028f88 	cmpgei	zero,zero,2622
   28678:	00028f88 	cmpgei	zero,zero,2622
   2867c:	00028f88 	cmpgei	zero,zero,2622
   28680:	00028f88 	cmpgei	zero,zero,2622
   28684:	00028f88 	cmpgei	zero,zero,2622
   28688:	00028f88 	cmpgei	zero,zero,2622
   2868c:	00028f88 	cmpgei	zero,zero,2622
   28690:	00028d58 	cmpnei	zero,zero,2613
   28694:	00028f88 	cmpgei	zero,zero,2622
   28698:	00028f88 	cmpgei	zero,zero,2622
   2869c:	00028f88 	cmpgei	zero,zero,2622
   286a0:	00028f88 	cmpgei	zero,zero,2622
   286a4:	00028f88 	cmpgei	zero,zero,2622
   286a8:	00028db0 	cmpltui	zero,zero,2614
   286ac:	00028f88 	cmpgei	zero,zero,2622
   286b0:	00028f88 	cmpgei	zero,zero,2622
   286b4:	00028e20 	cmpeqi	zero,zero,2616
   286b8:	00028f88 	cmpgei	zero,zero,2622
   286bc:	00028f88 	cmpgei	zero,zero,2622
   286c0:	00028f88 	cmpgei	zero,zero,2622
   286c4:	00028f88 	cmpgei	zero,zero,2622
   286c8:	00028f88 	cmpgei	zero,zero,2622
   286cc:	00028f88 	cmpgei	zero,zero,2622
   286d0:	00028f88 	cmpgei	zero,zero,2622
   286d4:	00028f88 	cmpgei	zero,zero,2622
   286d8:	00028f88 	cmpgei	zero,zero,2622
   286dc:	00028f88 	cmpgei	zero,zero,2622
   286e0:	00028bcc 	andi	zero,zero,2607
   286e4:	00028bf8 	rdprs	zero,zero,2607
   286e8:	00028f88 	cmpgei	zero,zero,2622
   286ec:	00028f88 	cmpgei	zero,zero,2622
   286f0:	00028f88 	cmpgei	zero,zero,2622
   286f4:	00028f30 	cmpltui	zero,zero,2620
   286f8:	00028bf8 	rdprs	zero,zero,2607
   286fc:	00028f88 	cmpgei	zero,zero,2622
   28700:	00028f88 	cmpgei	zero,zero,2622
   28704:	00028a8c 	andi	zero,zero,2602
   28708:	00028f88 	cmpgei	zero,zero,2622
   2870c:	00028a9c 	xori	zero,zero,2602
   28710:	00028ad8 	cmpnei	zero,zero,2603
   28714:	000287d4 	movui	zero,2591
   28718:	00028a80 	call	28a8 <__alt_mem_onchip_memory2_0-0x1d758>
   2871c:	00028f88 	cmpgei	zero,zero,2622
   28720:	00028e5c 	xori	zero,zero,2617
   28724:	00028f88 	cmpgei	zero,zero,2622
   28728:	00028eb4 	movhi	zero,2618
   2872c:	00028f88 	cmpgei	zero,zero,2622
   28730:	00028f88 	cmpgei	zero,zero,2622
   28734:	00028b78 	rdprs	zero,zero,2605
   28738:	42000204 	addi	r8,r8,8
   2873c:	da802317 	ldw	r10,140(sp)
   28740:	5455883a 	add	r10,r10,r17
   28744:	da802315 	stw	r10,140(sp)
   28748:	003f8b06 	br	28578 <__alt_data_end+0xfffe8578>
   2874c:	d9002017 	ldw	r4,128(sp)
   28750:	a00b883a 	mov	r5,r20
   28754:	0023bd40 	call	23bd4 <__swsetup_r>
   28758:	1003b11e 	bne	r2,zero,29620 <___vfiprintf_internal_r+0x11ec>
   2875c:	a080030b 	ldhu	r2,12(r20)
   28760:	00c00284 	movi	r3,10
   28764:	1080068c 	andi	r2,r2,26
   28768:	10ff541e 	bne	r2,r3,284bc <__alt_data_end+0xfffe84bc>
   2876c:	a080038f 	ldh	r2,14(r20)
   28770:	103f5216 	blt	r2,zero,284bc <__alt_data_end+0xfffe84bc>
   28774:	d9c02217 	ldw	r7,136(sp)
   28778:	d9002017 	ldw	r4,128(sp)
   2877c:	e00d883a 	mov	r6,fp
   28780:	a00b883a 	mov	r5,r20
   28784:	00298ac0 	call	298ac <__sbprintf>
   28788:	dfc03617 	ldw	ra,216(sp)
   2878c:	df003517 	ldw	fp,212(sp)
   28790:	ddc03417 	ldw	r23,208(sp)
   28794:	dd803317 	ldw	r22,204(sp)
   28798:	dd403217 	ldw	r21,200(sp)
   2879c:	dd003117 	ldw	r20,196(sp)
   287a0:	dcc03017 	ldw	r19,192(sp)
   287a4:	dc802f17 	ldw	r18,188(sp)
   287a8:	dc402e17 	ldw	r17,184(sp)
   287ac:	dc002d17 	ldw	r16,180(sp)
   287b0:	dec03704 	addi	sp,sp,220
   287b4:	f800283a 	ret
   287b8:	0025ba80 	call	25ba8 <__sinit>
   287bc:	003f2f06 	br	2847c <__alt_data_end+0xfffe847c>
   287c0:	0463c83a 	sub	r17,zero,r17
   287c4:	d8802215 	stw	r2,136(sp)
   287c8:	a5000114 	ori	r20,r20,4
   287cc:	80c00007 	ldb	r3,0(r16)
   287d0:	003f7706 	br	285b0 <__alt_data_end+0xfffe85b0>
   287d4:	00800c04 	movi	r2,48
   287d8:	da802217 	ldw	r10,136(sp)
   287dc:	d8801d05 	stb	r2,116(sp)
   287e0:	00801e04 	movi	r2,120
   287e4:	d8801d45 	stb	r2,117(sp)
   287e8:	d8001d85 	stb	zero,118(sp)
   287ec:	50c00104 	addi	r3,r10,4
   287f0:	54800017 	ldw	r18,0(r10)
   287f4:	0027883a 	mov	r19,zero
   287f8:	a0800094 	ori	r2,r20,2
   287fc:	48030b16 	blt	r9,zero,2942c <___vfiprintf_internal_r+0xff8>
   28800:	00bfdfc4 	movi	r2,-129
   28804:	a096703a 	and	r11,r20,r2
   28808:	d8c02215 	stw	r3,136(sp)
   2880c:	5d000094 	ori	r20,r11,2
   28810:	90032b1e 	bne	r18,zero,294c0 <___vfiprintf_internal_r+0x108c>
   28814:	008000f4 	movhi	r2,3
   28818:	10bd1f04 	addi	r2,r2,-2948
   2881c:	d8802615 	stw	r2,152(sp)
   28820:	0039883a 	mov	fp,zero
   28824:	48017b1e 	bne	r9,zero,28e14 <___vfiprintf_internal_r+0x9e0>
   28828:	0013883a 	mov	r9,zero
   2882c:	0027883a 	mov	r19,zero
   28830:	dd401a04 	addi	r21,sp,104
   28834:	4825883a 	mov	r18,r9
   28838:	4cc0010e 	bge	r9,r19,28840 <___vfiprintf_internal_r+0x40c>
   2883c:	9825883a 	mov	r18,r19
   28840:	e7003fcc 	andi	fp,fp,255
   28844:	e700201c 	xori	fp,fp,128
   28848:	e73fe004 	addi	fp,fp,-128
   2884c:	e0000126 	beq	fp,zero,28854 <___vfiprintf_internal_r+0x420>
   28850:	94800044 	addi	r18,r18,1
   28854:	a380008c 	andi	r14,r20,2
   28858:	70000126 	beq	r14,zero,28860 <___vfiprintf_internal_r+0x42c>
   2885c:	94800084 	addi	r18,r18,2
   28860:	a700210c 	andi	fp,r20,132
   28864:	e001df1e 	bne	fp,zero,28fe4 <___vfiprintf_internal_r+0xbb0>
   28868:	8c87c83a 	sub	r3,r17,r18
   2886c:	00c1dd0e 	bge	zero,r3,28fe4 <___vfiprintf_internal_r+0xbb0>
   28870:	01c00404 	movi	r7,16
   28874:	d8801c17 	ldw	r2,112(sp)
   28878:	38c3ad0e 	bge	r7,r3,29730 <___vfiprintf_internal_r+0x12fc>
   2887c:	028000f4 	movhi	r10,3
   28880:	52bd8404 	addi	r10,r10,-2544
   28884:	dc002915 	stw	r16,164(sp)
   28888:	d9801b17 	ldw	r6,108(sp)
   2888c:	da802415 	stw	r10,144(sp)
   28890:	03c001c4 	movi	r15,7
   28894:	da402515 	stw	r9,148(sp)
   28898:	db802815 	stw	r14,160(sp)
   2889c:	1821883a 	mov	r16,r3
   288a0:	00000506 	br	288b8 <___vfiprintf_internal_r+0x484>
   288a4:	31400084 	addi	r5,r6,2
   288a8:	42000204 	addi	r8,r8,8
   288ac:	200d883a 	mov	r6,r4
   288b0:	843ffc04 	addi	r16,r16,-16
   288b4:	3c000d0e 	bge	r7,r16,288ec <___vfiprintf_internal_r+0x4b8>
   288b8:	10800404 	addi	r2,r2,16
   288bc:	31000044 	addi	r4,r6,1
   288c0:	45800015 	stw	r22,0(r8)
   288c4:	41c00115 	stw	r7,4(r8)
   288c8:	d8801c15 	stw	r2,112(sp)
   288cc:	d9001b15 	stw	r4,108(sp)
   288d0:	793ff40e 	bge	r15,r4,288a4 <__alt_data_end+0xfffe88a4>
   288d4:	1001b51e 	bne	r2,zero,28fac <___vfiprintf_internal_r+0xb78>
   288d8:	843ffc04 	addi	r16,r16,-16
   288dc:	000d883a 	mov	r6,zero
   288e0:	01400044 	movi	r5,1
   288e4:	d811883a 	mov	r8,sp
   288e8:	3c3ff316 	blt	r7,r16,288b8 <__alt_data_end+0xfffe88b8>
   288ec:	8007883a 	mov	r3,r16
   288f0:	da402517 	ldw	r9,148(sp)
   288f4:	db802817 	ldw	r14,160(sp)
   288f8:	dc002917 	ldw	r16,164(sp)
   288fc:	da802417 	ldw	r10,144(sp)
   28900:	1885883a 	add	r2,r3,r2
   28904:	40c00115 	stw	r3,4(r8)
   28908:	42800015 	stw	r10,0(r8)
   2890c:	d8801c15 	stw	r2,112(sp)
   28910:	d9401b15 	stw	r5,108(sp)
   28914:	00c001c4 	movi	r3,7
   28918:	19426016 	blt	r3,r5,2929c <___vfiprintf_internal_r+0xe68>
   2891c:	d8c01d87 	ldb	r3,118(sp)
   28920:	42000204 	addi	r8,r8,8
   28924:	29000044 	addi	r4,r5,1
   28928:	1801b31e 	bne	r3,zero,28ff8 <___vfiprintf_internal_r+0xbc4>
   2892c:	7001c026 	beq	r14,zero,29030 <___vfiprintf_internal_r+0xbfc>
   28930:	d8c01d04 	addi	r3,sp,116
   28934:	10800084 	addi	r2,r2,2
   28938:	40c00015 	stw	r3,0(r8)
   2893c:	00c00084 	movi	r3,2
   28940:	40c00115 	stw	r3,4(r8)
   28944:	d8801c15 	stw	r2,112(sp)
   28948:	d9001b15 	stw	r4,108(sp)
   2894c:	00c001c4 	movi	r3,7
   28950:	1902650e 	bge	r3,r4,292e8 <___vfiprintf_internal_r+0xeb4>
   28954:	10029a1e 	bne	r2,zero,293c0 <___vfiprintf_internal_r+0xf8c>
   28958:	00c02004 	movi	r3,128
   2895c:	01000044 	movi	r4,1
   28960:	000b883a 	mov	r5,zero
   28964:	d811883a 	mov	r8,sp
   28968:	e0c1b31e 	bne	fp,r3,29038 <___vfiprintf_internal_r+0xc04>
   2896c:	8cb9c83a 	sub	fp,r17,r18
   28970:	0701b10e 	bge	zero,fp,29038 <___vfiprintf_internal_r+0xc04>
   28974:	01c00404 	movi	r7,16
   28978:	3f03890e 	bge	r7,fp,297a0 <___vfiprintf_internal_r+0x136c>
   2897c:	00c000f4 	movhi	r3,3
   28980:	18fd8004 	addi	r3,r3,-2560
   28984:	d8c02415 	stw	r3,144(sp)
   28988:	8007883a 	mov	r3,r16
   2898c:	034001c4 	movi	r13,7
   28990:	e021883a 	mov	r16,fp
   28994:	da402515 	stw	r9,148(sp)
   28998:	1839883a 	mov	fp,r3
   2899c:	00000506 	br	289b4 <___vfiprintf_internal_r+0x580>
   289a0:	29800084 	addi	r6,r5,2
   289a4:	42000204 	addi	r8,r8,8
   289a8:	180b883a 	mov	r5,r3
   289ac:	843ffc04 	addi	r16,r16,-16
   289b0:	3c000d0e 	bge	r7,r16,289e8 <___vfiprintf_internal_r+0x5b4>
   289b4:	10800404 	addi	r2,r2,16
   289b8:	28c00044 	addi	r3,r5,1
   289bc:	45c00015 	stw	r23,0(r8)
   289c0:	41c00115 	stw	r7,4(r8)
   289c4:	d8801c15 	stw	r2,112(sp)
   289c8:	d8c01b15 	stw	r3,108(sp)
   289cc:	68fff40e 	bge	r13,r3,289a0 <__alt_data_end+0xfffe89a0>
   289d0:	1002241e 	bne	r2,zero,29264 <___vfiprintf_internal_r+0xe30>
   289d4:	843ffc04 	addi	r16,r16,-16
   289d8:	01800044 	movi	r6,1
   289dc:	000b883a 	mov	r5,zero
   289e0:	d811883a 	mov	r8,sp
   289e4:	3c3ff316 	blt	r7,r16,289b4 <__alt_data_end+0xfffe89b4>
   289e8:	da402517 	ldw	r9,148(sp)
   289ec:	e007883a 	mov	r3,fp
   289f0:	8039883a 	mov	fp,r16
   289f4:	1821883a 	mov	r16,r3
   289f8:	d8c02417 	ldw	r3,144(sp)
   289fc:	1705883a 	add	r2,r2,fp
   28a00:	47000115 	stw	fp,4(r8)
   28a04:	40c00015 	stw	r3,0(r8)
   28a08:	d8801c15 	stw	r2,112(sp)
   28a0c:	d9801b15 	stw	r6,108(sp)
   28a10:	00c001c4 	movi	r3,7
   28a14:	19827616 	blt	r3,r6,293f0 <___vfiprintf_internal_r+0xfbc>
   28a18:	4cf9c83a 	sub	fp,r9,r19
   28a1c:	42000204 	addi	r8,r8,8
   28a20:	31000044 	addi	r4,r6,1
   28a24:	300b883a 	mov	r5,r6
   28a28:	07018516 	blt	zero,fp,29040 <___vfiprintf_internal_r+0xc0c>
   28a2c:	9885883a 	add	r2,r19,r2
   28a30:	45400015 	stw	r21,0(r8)
   28a34:	44c00115 	stw	r19,4(r8)
   28a38:	d8801c15 	stw	r2,112(sp)
   28a3c:	d9001b15 	stw	r4,108(sp)
   28a40:	00c001c4 	movi	r3,7
   28a44:	1901dd0e 	bge	r3,r4,291bc <___vfiprintf_internal_r+0xd88>
   28a48:	1002401e 	bne	r2,zero,2934c <___vfiprintf_internal_r+0xf18>
   28a4c:	d8001b15 	stw	zero,108(sp)
   28a50:	a2c0010c 	andi	r11,r20,4
   28a54:	58000226 	beq	r11,zero,28a60 <___vfiprintf_internal_r+0x62c>
   28a58:	8ca7c83a 	sub	r19,r17,r18
   28a5c:	04c2f216 	blt	zero,r19,29628 <___vfiprintf_internal_r+0x11f4>
   28a60:	8c80010e 	bge	r17,r18,28a68 <___vfiprintf_internal_r+0x634>
   28a64:	9023883a 	mov	r17,r18
   28a68:	da802317 	ldw	r10,140(sp)
   28a6c:	5455883a 	add	r10,r10,r17
   28a70:	da802315 	stw	r10,140(sp)
   28a74:	d8001b15 	stw	zero,108(sp)
   28a78:	d811883a 	mov	r8,sp
   28a7c:	003ea206 	br	28508 <__alt_data_end+0xfffe8508>
   28a80:	a5000814 	ori	r20,r20,32
   28a84:	80c00007 	ldb	r3,0(r16)
   28a88:	003ec906 	br	285b0 <__alt_data_end+0xfffe85b0>
   28a8c:	80c00007 	ldb	r3,0(r16)
   28a90:	1b030926 	beq	r3,r12,296b8 <___vfiprintf_internal_r+0x1284>
   28a94:	a5000414 	ori	r20,r20,16
   28a98:	003ec506 	br	285b0 <__alt_data_end+0xfffe85b0>
   28a9c:	21003fcc 	andi	r4,r4,255
   28aa0:	20035e1e 	bne	r4,zero,2981c <___vfiprintf_internal_r+0x13e8>
   28aa4:	a080080c 	andi	r2,r20,32
   28aa8:	1002a526 	beq	r2,zero,29540 <___vfiprintf_internal_r+0x110c>
   28aac:	da802217 	ldw	r10,136(sp)
   28ab0:	50800017 	ldw	r2,0(r10)
   28ab4:	da802317 	ldw	r10,140(sp)
   28ab8:	5007d7fa 	srai	r3,r10,31
   28abc:	da802217 	ldw	r10,136(sp)
   28ac0:	10c00115 	stw	r3,4(r2)
   28ac4:	52800104 	addi	r10,r10,4
   28ac8:	da802215 	stw	r10,136(sp)
   28acc:	da802317 	ldw	r10,140(sp)
   28ad0:	12800015 	stw	r10,0(r2)
   28ad4:	003e8c06 	br	28508 <__alt_data_end+0xfffe8508>
   28ad8:	21003fcc 	andi	r4,r4,255
   28adc:	2003511e 	bne	r4,zero,29824 <___vfiprintf_internal_r+0x13f0>
   28ae0:	a080080c 	andi	r2,r20,32
   28ae4:	1000a126 	beq	r2,zero,28d6c <___vfiprintf_internal_r+0x938>
   28ae8:	da802217 	ldw	r10,136(sp)
   28aec:	d8001d85 	stb	zero,118(sp)
   28af0:	50800204 	addi	r2,r10,8
   28af4:	54800017 	ldw	r18,0(r10)
   28af8:	54c00117 	ldw	r19,4(r10)
   28afc:	4802b416 	blt	r9,zero,295d0 <___vfiprintf_internal_r+0x119c>
   28b00:	013fdfc4 	movi	r4,-129
   28b04:	94c6b03a 	or	r3,r18,r19
   28b08:	d8802215 	stw	r2,136(sp)
   28b0c:	a128703a 	and	r20,r20,r4
   28b10:	1800a226 	beq	r3,zero,28d9c <___vfiprintf_internal_r+0x968>
   28b14:	0039883a 	mov	fp,zero
   28b18:	dd401a04 	addi	r21,sp,104
   28b1c:	9006d0fa 	srli	r3,r18,3
   28b20:	9808977a 	slli	r4,r19,29
   28b24:	9826d0fa 	srli	r19,r19,3
   28b28:	948001cc 	andi	r18,r18,7
   28b2c:	90800c04 	addi	r2,r18,48
   28b30:	ad7fffc4 	addi	r21,r21,-1
   28b34:	20e4b03a 	or	r18,r4,r3
   28b38:	a8800005 	stb	r2,0(r21)
   28b3c:	94c6b03a 	or	r3,r18,r19
   28b40:	183ff61e 	bne	r3,zero,28b1c <__alt_data_end+0xfffe8b1c>
   28b44:	a0c0004c 	andi	r3,r20,1
   28b48:	18005926 	beq	r3,zero,28cb0 <___vfiprintf_internal_r+0x87c>
   28b4c:	10803fcc 	andi	r2,r2,255
   28b50:	1080201c 	xori	r2,r2,128
   28b54:	10bfe004 	addi	r2,r2,-128
   28b58:	00c00c04 	movi	r3,48
   28b5c:	10c05426 	beq	r2,r3,28cb0 <___vfiprintf_internal_r+0x87c>
   28b60:	da801e17 	ldw	r10,120(sp)
   28b64:	a8bfffc4 	addi	r2,r21,-1
   28b68:	a8ffffc5 	stb	r3,-1(r21)
   28b6c:	50a7c83a 	sub	r19,r10,r2
   28b70:	102b883a 	mov	r21,r2
   28b74:	003f2f06 	br	28834 <__alt_data_end+0xfffe8834>
   28b78:	21003fcc 	andi	r4,r4,255
   28b7c:	2003421e 	bne	r4,zero,29888 <___vfiprintf_internal_r+0x1454>
   28b80:	008000f4 	movhi	r2,3
   28b84:	10bd1f04 	addi	r2,r2,-2948
   28b88:	d8802615 	stw	r2,152(sp)
   28b8c:	a080080c 	andi	r2,r20,32
   28b90:	1000aa26 	beq	r2,zero,28e3c <___vfiprintf_internal_r+0xa08>
   28b94:	da802217 	ldw	r10,136(sp)
   28b98:	54800017 	ldw	r18,0(r10)
   28b9c:	54c00117 	ldw	r19,4(r10)
   28ba0:	52800204 	addi	r10,r10,8
   28ba4:	da802215 	stw	r10,136(sp)
   28ba8:	a080004c 	andi	r2,r20,1
   28bac:	1001d226 	beq	r2,zero,292f8 <___vfiprintf_internal_r+0xec4>
   28bb0:	94c4b03a 	or	r2,r18,r19
   28bb4:	1002351e 	bne	r2,zero,2948c <___vfiprintf_internal_r+0x1058>
   28bb8:	d8001d85 	stb	zero,118(sp)
   28bbc:	48022216 	blt	r9,zero,29448 <___vfiprintf_internal_r+0x1014>
   28bc0:	00bfdfc4 	movi	r2,-129
   28bc4:	a0a8703a 	and	r20,r20,r2
   28bc8:	003f1506 	br	28820 <__alt_data_end+0xfffe8820>
   28bcc:	da802217 	ldw	r10,136(sp)
   28bd0:	04800044 	movi	r18,1
   28bd4:	d8001d85 	stb	zero,118(sp)
   28bd8:	50800017 	ldw	r2,0(r10)
   28bdc:	52800104 	addi	r10,r10,4
   28be0:	da802215 	stw	r10,136(sp)
   28be4:	d8801005 	stb	r2,64(sp)
   28be8:	9027883a 	mov	r19,r18
   28bec:	dd401004 	addi	r21,sp,64
   28bf0:	0013883a 	mov	r9,zero
   28bf4:	003f1706 	br	28854 <__alt_data_end+0xfffe8854>
   28bf8:	21003fcc 	andi	r4,r4,255
   28bfc:	2003201e 	bne	r4,zero,29880 <___vfiprintf_internal_r+0x144c>
   28c00:	a080080c 	andi	r2,r20,32
   28c04:	10004b26 	beq	r2,zero,28d34 <___vfiprintf_internal_r+0x900>
   28c08:	da802217 	ldw	r10,136(sp)
   28c0c:	50800117 	ldw	r2,4(r10)
   28c10:	54800017 	ldw	r18,0(r10)
   28c14:	52800204 	addi	r10,r10,8
   28c18:	da802215 	stw	r10,136(sp)
   28c1c:	1027883a 	mov	r19,r2
   28c20:	10022c16 	blt	r2,zero,294d4 <___vfiprintf_internal_r+0x10a0>
   28c24:	df001d83 	ldbu	fp,118(sp)
   28c28:	48007216 	blt	r9,zero,28df4 <___vfiprintf_internal_r+0x9c0>
   28c2c:	00ffdfc4 	movi	r3,-129
   28c30:	94c4b03a 	or	r2,r18,r19
   28c34:	a0e8703a 	and	r20,r20,r3
   28c38:	1000cc26 	beq	r2,zero,28f6c <___vfiprintf_internal_r+0xb38>
   28c3c:	98021026 	beq	r19,zero,29480 <___vfiprintf_internal_r+0x104c>
   28c40:	dc402415 	stw	r17,144(sp)
   28c44:	dc002515 	stw	r16,148(sp)
   28c48:	9823883a 	mov	r17,r19
   28c4c:	9021883a 	mov	r16,r18
   28c50:	dd401a04 	addi	r21,sp,104
   28c54:	4825883a 	mov	r18,r9
   28c58:	4027883a 	mov	r19,r8
   28c5c:	8009883a 	mov	r4,r16
   28c60:	880b883a 	mov	r5,r17
   28c64:	01800284 	movi	r6,10
   28c68:	000f883a 	mov	r7,zero
   28c6c:	002b3900 	call	2b390 <__umoddi3>
   28c70:	10800c04 	addi	r2,r2,48
   28c74:	ad7fffc4 	addi	r21,r21,-1
   28c78:	8009883a 	mov	r4,r16
   28c7c:	880b883a 	mov	r5,r17
   28c80:	a8800005 	stb	r2,0(r21)
   28c84:	01800284 	movi	r6,10
   28c88:	000f883a 	mov	r7,zero
   28c8c:	002ae180 	call	2ae18 <__udivdi3>
   28c90:	1021883a 	mov	r16,r2
   28c94:	10c4b03a 	or	r2,r2,r3
   28c98:	1823883a 	mov	r17,r3
   28c9c:	103fef1e 	bne	r2,zero,28c5c <__alt_data_end+0xfffe8c5c>
   28ca0:	dc402417 	ldw	r17,144(sp)
   28ca4:	dc002517 	ldw	r16,148(sp)
   28ca8:	9013883a 	mov	r9,r18
   28cac:	9811883a 	mov	r8,r19
   28cb0:	da801e17 	ldw	r10,120(sp)
   28cb4:	5567c83a 	sub	r19,r10,r21
   28cb8:	003ede06 	br	28834 <__alt_data_end+0xfffe8834>
   28cbc:	38803fcc 	andi	r2,r7,255
   28cc0:	1080201c 	xori	r2,r2,128
   28cc4:	10bfe004 	addi	r2,r2,-128
   28cc8:	1002371e 	bne	r2,zero,295a8 <___vfiprintf_internal_r+0x1174>
   28ccc:	01000044 	movi	r4,1
   28cd0:	01c00804 	movi	r7,32
   28cd4:	80c00007 	ldb	r3,0(r16)
   28cd8:	003e3506 	br	285b0 <__alt_data_end+0xfffe85b0>
   28cdc:	a5000054 	ori	r20,r20,1
   28ce0:	80c00007 	ldb	r3,0(r16)
   28ce4:	003e3206 	br	285b0 <__alt_data_end+0xfffe85b0>
   28ce8:	a5002014 	ori	r20,r20,128
   28cec:	80c00007 	ldb	r3,0(r16)
   28cf0:	003e2f06 	br	285b0 <__alt_data_end+0xfffe85b0>
   28cf4:	8015883a 	mov	r10,r16
   28cf8:	0023883a 	mov	r17,zero
   28cfc:	18bff404 	addi	r2,r3,-48
   28d00:	50c00007 	ldb	r3,0(r10)
   28d04:	8c4002a4 	muli	r17,r17,10
   28d08:	84000044 	addi	r16,r16,1
   28d0c:	8015883a 	mov	r10,r16
   28d10:	1463883a 	add	r17,r2,r17
   28d14:	18bff404 	addi	r2,r3,-48
   28d18:	30bff92e 	bgeu	r6,r2,28d00 <__alt_data_end+0xfffe8d00>
   28d1c:	003e2506 	br	285b4 <__alt_data_end+0xfffe85b4>
   28d20:	21003fcc 	andi	r4,r4,255
   28d24:	2002d41e 	bne	r4,zero,29878 <___vfiprintf_internal_r+0x1444>
   28d28:	a5000414 	ori	r20,r20,16
   28d2c:	a080080c 	andi	r2,r20,32
   28d30:	103fb51e 	bne	r2,zero,28c08 <__alt_data_end+0xfffe8c08>
   28d34:	a080040c 	andi	r2,r20,16
   28d38:	1001f826 	beq	r2,zero,2951c <___vfiprintf_internal_r+0x10e8>
   28d3c:	da802217 	ldw	r10,136(sp)
   28d40:	54800017 	ldw	r18,0(r10)
   28d44:	52800104 	addi	r10,r10,4
   28d48:	da802215 	stw	r10,136(sp)
   28d4c:	9027d7fa 	srai	r19,r18,31
   28d50:	9805883a 	mov	r2,r19
   28d54:	003fb206 	br	28c20 <__alt_data_end+0xfffe8c20>
   28d58:	21003fcc 	andi	r4,r4,255
   28d5c:	2002c41e 	bne	r4,zero,29870 <___vfiprintf_internal_r+0x143c>
   28d60:	a5000414 	ori	r20,r20,16
   28d64:	a080080c 	andi	r2,r20,32
   28d68:	103f5f1e 	bne	r2,zero,28ae8 <__alt_data_end+0xfffe8ae8>
   28d6c:	a080040c 	andi	r2,r20,16
   28d70:	10020f26 	beq	r2,zero,295b0 <___vfiprintf_internal_r+0x117c>
   28d74:	da802217 	ldw	r10,136(sp)
   28d78:	d8001d85 	stb	zero,118(sp)
   28d7c:	0027883a 	mov	r19,zero
   28d80:	50800104 	addi	r2,r10,4
   28d84:	54800017 	ldw	r18,0(r10)
   28d88:	48021116 	blt	r9,zero,295d0 <___vfiprintf_internal_r+0x119c>
   28d8c:	00ffdfc4 	movi	r3,-129
   28d90:	d8802215 	stw	r2,136(sp)
   28d94:	a0e8703a 	and	r20,r20,r3
   28d98:	903f5e1e 	bne	r18,zero,28b14 <__alt_data_end+0xfffe8b14>
   28d9c:	0039883a 	mov	fp,zero
   28da0:	4802a626 	beq	r9,zero,2983c <___vfiprintf_internal_r+0x1408>
   28da4:	0025883a 	mov	r18,zero
   28da8:	0027883a 	mov	r19,zero
   28dac:	003f5a06 	br	28b18 <__alt_data_end+0xfffe8b18>
   28db0:	21003fcc 	andi	r4,r4,255
   28db4:	20029f1e 	bne	r4,zero,29834 <___vfiprintf_internal_r+0x1400>
   28db8:	a5000414 	ori	r20,r20,16
   28dbc:	a080080c 	andi	r2,r20,32
   28dc0:	10005e1e 	bne	r2,zero,28f3c <___vfiprintf_internal_r+0xb08>
   28dc4:	a080040c 	andi	r2,r20,16
   28dc8:	1001a21e 	bne	r2,zero,29454 <___vfiprintf_internal_r+0x1020>
   28dcc:	a080100c 	andi	r2,r20,64
   28dd0:	d8001d85 	stb	zero,118(sp)
   28dd4:	da802217 	ldw	r10,136(sp)
   28dd8:	1002231e 	bne	r2,zero,29668 <___vfiprintf_internal_r+0x1234>
   28ddc:	50800104 	addi	r2,r10,4
   28de0:	54800017 	ldw	r18,0(r10)
   28de4:	0027883a 	mov	r19,zero
   28de8:	4801a00e 	bge	r9,zero,2946c <___vfiprintf_internal_r+0x1038>
   28dec:	d8802215 	stw	r2,136(sp)
   28df0:	0039883a 	mov	fp,zero
   28df4:	94c4b03a 	or	r2,r18,r19
   28df8:	103f901e 	bne	r2,zero,28c3c <__alt_data_end+0xfffe8c3c>
   28dfc:	00800044 	movi	r2,1
   28e00:	10803fcc 	andi	r2,r2,255
   28e04:	00c00044 	movi	r3,1
   28e08:	10c05926 	beq	r2,r3,28f70 <___vfiprintf_internal_r+0xb3c>
   28e0c:	00c00084 	movi	r3,2
   28e10:	10ffe41e 	bne	r2,r3,28da4 <__alt_data_end+0xfffe8da4>
   28e14:	0025883a 	mov	r18,zero
   28e18:	0027883a 	mov	r19,zero
   28e1c:	00013d06 	br	29314 <___vfiprintf_internal_r+0xee0>
   28e20:	21003fcc 	andi	r4,r4,255
   28e24:	2002811e 	bne	r4,zero,2982c <___vfiprintf_internal_r+0x13f8>
   28e28:	008000f4 	movhi	r2,3
   28e2c:	10bd1a04 	addi	r2,r2,-2968
   28e30:	d8802615 	stw	r2,152(sp)
   28e34:	a080080c 	andi	r2,r20,32
   28e38:	103f561e 	bne	r2,zero,28b94 <__alt_data_end+0xfffe8b94>
   28e3c:	a080040c 	andi	r2,r20,16
   28e40:	1001d126 	beq	r2,zero,29588 <___vfiprintf_internal_r+0x1154>
   28e44:	da802217 	ldw	r10,136(sp)
   28e48:	0027883a 	mov	r19,zero
   28e4c:	54800017 	ldw	r18,0(r10)
   28e50:	52800104 	addi	r10,r10,4
   28e54:	da802215 	stw	r10,136(sp)
   28e58:	003f5306 	br	28ba8 <__alt_data_end+0xfffe8ba8>
   28e5c:	da802217 	ldw	r10,136(sp)
   28e60:	d8001d85 	stb	zero,118(sp)
   28e64:	55400017 	ldw	r21,0(r10)
   28e68:	50c00104 	addi	r3,r10,4
   28e6c:	a8024226 	beq	r21,zero,29778 <___vfiprintf_internal_r+0x1344>
   28e70:	48021816 	blt	r9,zero,296d4 <___vfiprintf_internal_r+0x12a0>
   28e74:	480d883a 	mov	r6,r9
   28e78:	000b883a 	mov	r5,zero
   28e7c:	a809883a 	mov	r4,r21
   28e80:	d8c02a15 	stw	r3,168(sp)
   28e84:	da002b15 	stw	r8,172(sp)
   28e88:	da402c15 	stw	r9,176(sp)
   28e8c:	0026c580 	call	26c58 <memchr>
   28e90:	d8c02a17 	ldw	r3,168(sp)
   28e94:	da002b17 	ldw	r8,172(sp)
   28e98:	da402c17 	ldw	r9,176(sp)
   28e9c:	10024826 	beq	r2,zero,297c0 <___vfiprintf_internal_r+0x138c>
   28ea0:	1567c83a 	sub	r19,r2,r21
   28ea4:	df001d83 	ldbu	fp,118(sp)
   28ea8:	d8c02215 	stw	r3,136(sp)
   28eac:	0013883a 	mov	r9,zero
   28eb0:	003e6006 	br	28834 <__alt_data_end+0xfffe8834>
   28eb4:	21003fcc 	andi	r4,r4,255
   28eb8:	203fc026 	beq	r4,zero,28dbc <__alt_data_end+0xfffe8dbc>
   28ebc:	d9c01d85 	stb	r7,118(sp)
   28ec0:	003fbe06 	br	28dbc <__alt_data_end+0xfffe8dbc>
   28ec4:	da802217 	ldw	r10,136(sp)
   28ec8:	54400017 	ldw	r17,0(r10)
   28ecc:	50800104 	addi	r2,r10,4
   28ed0:	883e3b16 	blt	r17,zero,287c0 <__alt_data_end+0xfffe87c0>
   28ed4:	d8802215 	stw	r2,136(sp)
   28ed8:	80c00007 	ldb	r3,0(r16)
   28edc:	003db406 	br	285b0 <__alt_data_end+0xfffe85b0>
   28ee0:	01000044 	movi	r4,1
   28ee4:	01c00ac4 	movi	r7,43
   28ee8:	80c00007 	ldb	r3,0(r16)
   28eec:	003db006 	br	285b0 <__alt_data_end+0xfffe85b0>
   28ef0:	80c00007 	ldb	r3,0(r16)
   28ef4:	82800044 	addi	r10,r16,1
   28ef8:	1b423c26 	beq	r3,r13,297ec <___vfiprintf_internal_r+0x13b8>
   28efc:	18bff404 	addi	r2,r3,-48
   28f00:	0013883a 	mov	r9,zero
   28f04:	30822b36 	bltu	r6,r2,297b4 <___vfiprintf_internal_r+0x1380>
   28f08:	50c00007 	ldb	r3,0(r10)
   28f0c:	4a4002a4 	muli	r9,r9,10
   28f10:	54000044 	addi	r16,r10,1
   28f14:	8015883a 	mov	r10,r16
   28f18:	4893883a 	add	r9,r9,r2
   28f1c:	18bff404 	addi	r2,r3,-48
   28f20:	30bff92e 	bgeu	r6,r2,28f08 <__alt_data_end+0xfffe8f08>
   28f24:	483da30e 	bge	r9,zero,285b4 <__alt_data_end+0xfffe85b4>
   28f28:	027fffc4 	movi	r9,-1
   28f2c:	003da106 	br	285b4 <__alt_data_end+0xfffe85b4>
   28f30:	a5001014 	ori	r20,r20,64
   28f34:	80c00007 	ldb	r3,0(r16)
   28f38:	003d9d06 	br	285b0 <__alt_data_end+0xfffe85b0>
   28f3c:	da802217 	ldw	r10,136(sp)
   28f40:	d8001d85 	stb	zero,118(sp)
   28f44:	50c00204 	addi	r3,r10,8
   28f48:	54800017 	ldw	r18,0(r10)
   28f4c:	54c00117 	ldw	r19,4(r10)
   28f50:	4801ca16 	blt	r9,zero,2967c <___vfiprintf_internal_r+0x1248>
   28f54:	013fdfc4 	movi	r4,-129
   28f58:	94c4b03a 	or	r2,r18,r19
   28f5c:	d8c02215 	stw	r3,136(sp)
   28f60:	a128703a 	and	r20,r20,r4
   28f64:	0039883a 	mov	fp,zero
   28f68:	103f341e 	bne	r2,zero,28c3c <__alt_data_end+0xfffe8c3c>
   28f6c:	483e2e26 	beq	r9,zero,28828 <__alt_data_end+0xfffe8828>
   28f70:	0025883a 	mov	r18,zero
   28f74:	94800c04 	addi	r18,r18,48
   28f78:	dc8019c5 	stb	r18,103(sp)
   28f7c:	dcc02717 	ldw	r19,156(sp)
   28f80:	dd4019c4 	addi	r21,sp,103
   28f84:	003e2b06 	br	28834 <__alt_data_end+0xfffe8834>
   28f88:	21003fcc 	andi	r4,r4,255
   28f8c:	2002361e 	bne	r4,zero,29868 <___vfiprintf_internal_r+0x1434>
   28f90:	1801c126 	beq	r3,zero,29698 <___vfiprintf_internal_r+0x1264>
   28f94:	04800044 	movi	r18,1
   28f98:	d8c01005 	stb	r3,64(sp)
   28f9c:	d8001d85 	stb	zero,118(sp)
   28fa0:	9027883a 	mov	r19,r18
   28fa4:	dd401004 	addi	r21,sp,64
   28fa8:	003f1106 	br	28bf0 <__alt_data_end+0xfffe8bf0>
   28fac:	d9402117 	ldw	r5,132(sp)
   28fb0:	d9002017 	ldw	r4,128(sp)
   28fb4:	d9801a04 	addi	r6,sp,104
   28fb8:	d9c02b15 	stw	r7,172(sp)
   28fbc:	dbc02a15 	stw	r15,168(sp)
   28fc0:	00283200 	call	28320 <__sprint_r.part.0>
   28fc4:	d9c02b17 	ldw	r7,172(sp)
   28fc8:	dbc02a17 	ldw	r15,168(sp)
   28fcc:	10006d1e 	bne	r2,zero,29184 <___vfiprintf_internal_r+0xd50>
   28fd0:	d9801b17 	ldw	r6,108(sp)
   28fd4:	d8801c17 	ldw	r2,112(sp)
   28fd8:	d811883a 	mov	r8,sp
   28fdc:	31400044 	addi	r5,r6,1
   28fe0:	003e3306 	br	288b0 <__alt_data_end+0xfffe88b0>
   28fe4:	d9401b17 	ldw	r5,108(sp)
   28fe8:	d8801c17 	ldw	r2,112(sp)
   28fec:	29000044 	addi	r4,r5,1
   28ff0:	d8c01d87 	ldb	r3,118(sp)
   28ff4:	183e4d26 	beq	r3,zero,2892c <__alt_data_end+0xfffe892c>
   28ff8:	00c00044 	movi	r3,1
   28ffc:	d9401d84 	addi	r5,sp,118
   29000:	10c5883a 	add	r2,r2,r3
   29004:	41400015 	stw	r5,0(r8)
   29008:	40c00115 	stw	r3,4(r8)
   2900c:	d8801c15 	stw	r2,112(sp)
   29010:	d9001b15 	stw	r4,108(sp)
   29014:	014001c4 	movi	r5,7
   29018:	2900a90e 	bge	r5,r4,292c0 <___vfiprintf_internal_r+0xe8c>
   2901c:	1000da1e 	bne	r2,zero,29388 <___vfiprintf_internal_r+0xf54>
   29020:	7000ab1e 	bne	r14,zero,292d0 <___vfiprintf_internal_r+0xe9c>
   29024:	000b883a 	mov	r5,zero
   29028:	1809883a 	mov	r4,r3
   2902c:	d811883a 	mov	r8,sp
   29030:	00c02004 	movi	r3,128
   29034:	e0fe4d26 	beq	fp,r3,2896c <__alt_data_end+0xfffe896c>
   29038:	4cf9c83a 	sub	fp,r9,r19
   2903c:	073e7b0e 	bge	zero,fp,28a2c <__alt_data_end+0xfffe8a2c>
   29040:	01c00404 	movi	r7,16
   29044:	3f01900e 	bge	r7,fp,29688 <___vfiprintf_internal_r+0x1254>
   29048:	00c000f4 	movhi	r3,3
   2904c:	18fd8004 	addi	r3,r3,-2560
   29050:	d8c02415 	stw	r3,144(sp)
   29054:	034001c4 	movi	r13,7
   29058:	00000506 	br	29070 <___vfiprintf_internal_r+0xc3c>
   2905c:	29000084 	addi	r4,r5,2
   29060:	42000204 	addi	r8,r8,8
   29064:	180b883a 	mov	r5,r3
   29068:	e73ffc04 	addi	fp,fp,-16
   2906c:	3f000d0e 	bge	r7,fp,290a4 <___vfiprintf_internal_r+0xc70>
   29070:	10800404 	addi	r2,r2,16
   29074:	28c00044 	addi	r3,r5,1
   29078:	45c00015 	stw	r23,0(r8)
   2907c:	41c00115 	stw	r7,4(r8)
   29080:	d8801c15 	stw	r2,112(sp)
   29084:	d8c01b15 	stw	r3,108(sp)
   29088:	68fff40e 	bge	r13,r3,2905c <__alt_data_end+0xfffe905c>
   2908c:	1000101e 	bne	r2,zero,290d0 <___vfiprintf_internal_r+0xc9c>
   29090:	e73ffc04 	addi	fp,fp,-16
   29094:	01000044 	movi	r4,1
   29098:	000b883a 	mov	r5,zero
   2909c:	d811883a 	mov	r8,sp
   290a0:	3f3ff316 	blt	r7,fp,29070 <__alt_data_end+0xfffe9070>
   290a4:	da802417 	ldw	r10,144(sp)
   290a8:	1705883a 	add	r2,r2,fp
   290ac:	47000115 	stw	fp,4(r8)
   290b0:	42800015 	stw	r10,0(r8)
   290b4:	d8801c15 	stw	r2,112(sp)
   290b8:	d9001b15 	stw	r4,108(sp)
   290bc:	00c001c4 	movi	r3,7
   290c0:	19003616 	blt	r3,r4,2919c <___vfiprintf_internal_r+0xd68>
   290c4:	42000204 	addi	r8,r8,8
   290c8:	21000044 	addi	r4,r4,1
   290cc:	003e5706 	br	28a2c <__alt_data_end+0xfffe8a2c>
   290d0:	d9402117 	ldw	r5,132(sp)
   290d4:	d9002017 	ldw	r4,128(sp)
   290d8:	d9801a04 	addi	r6,sp,104
   290dc:	d9c02b15 	stw	r7,172(sp)
   290e0:	db402a15 	stw	r13,168(sp)
   290e4:	00283200 	call	28320 <__sprint_r.part.0>
   290e8:	d9c02b17 	ldw	r7,172(sp)
   290ec:	db402a17 	ldw	r13,168(sp)
   290f0:	1000241e 	bne	r2,zero,29184 <___vfiprintf_internal_r+0xd50>
   290f4:	d9401b17 	ldw	r5,108(sp)
   290f8:	d8801c17 	ldw	r2,112(sp)
   290fc:	d811883a 	mov	r8,sp
   29100:	29000044 	addi	r4,r5,1
   29104:	003fd806 	br	29068 <__alt_data_end+0xfffe9068>
   29108:	d9401b17 	ldw	r5,108(sp)
   2910c:	00c000f4 	movhi	r3,3
   29110:	18fd8404 	addi	r3,r3,-2544
   29114:	d8c02415 	stw	r3,144(sp)
   29118:	29400044 	addi	r5,r5,1
   2911c:	d8c02417 	ldw	r3,144(sp)
   29120:	14c5883a 	add	r2,r2,r19
   29124:	44c00115 	stw	r19,4(r8)
   29128:	40c00015 	stw	r3,0(r8)
   2912c:	d8801c15 	stw	r2,112(sp)
   29130:	d9401b15 	stw	r5,108(sp)
   29134:	00c001c4 	movi	r3,7
   29138:	1940070e 	bge	r3,r5,29158 <___vfiprintf_internal_r+0xd24>
   2913c:	103e4826 	beq	r2,zero,28a60 <__alt_data_end+0xfffe8a60>
   29140:	d9402117 	ldw	r5,132(sp)
   29144:	d9002017 	ldw	r4,128(sp)
   29148:	d9801a04 	addi	r6,sp,104
   2914c:	00283200 	call	28320 <__sprint_r.part.0>
   29150:	10000c1e 	bne	r2,zero,29184 <___vfiprintf_internal_r+0xd50>
   29154:	d8801c17 	ldw	r2,112(sp)
   29158:	8c80010e 	bge	r17,r18,29160 <___vfiprintf_internal_r+0xd2c>
   2915c:	9023883a 	mov	r17,r18
   29160:	da802317 	ldw	r10,140(sp)
   29164:	5455883a 	add	r10,r10,r17
   29168:	da802315 	stw	r10,140(sp)
   2916c:	103e4126 	beq	r2,zero,28a74 <__alt_data_end+0xfffe8a74>
   29170:	d9402117 	ldw	r5,132(sp)
   29174:	d9002017 	ldw	r4,128(sp)
   29178:	d9801a04 	addi	r6,sp,104
   2917c:	00283200 	call	28320 <__sprint_r.part.0>
   29180:	103e3c26 	beq	r2,zero,28a74 <__alt_data_end+0xfffe8a74>
   29184:	dd002117 	ldw	r20,132(sp)
   29188:	a080030b 	ldhu	r2,12(r20)
   2918c:	1080100c 	andi	r2,r2,64
   29190:	1001231e 	bne	r2,zero,29620 <___vfiprintf_internal_r+0x11ec>
   29194:	d8802317 	ldw	r2,140(sp)
   29198:	003d7b06 	br	28788 <__alt_data_end+0xfffe8788>
   2919c:	1000991e 	bne	r2,zero,29404 <___vfiprintf_internal_r+0xfd0>
   291a0:	00c00044 	movi	r3,1
   291a4:	9805883a 	mov	r2,r19
   291a8:	dd400015 	stw	r21,0(sp)
   291ac:	dcc00115 	stw	r19,4(sp)
   291b0:	dcc01c15 	stw	r19,112(sp)
   291b4:	d8c01b15 	stw	r3,108(sp)
   291b8:	d811883a 	mov	r8,sp
   291bc:	42000204 	addi	r8,r8,8
   291c0:	a2c0010c 	andi	r11,r20,4
   291c4:	583fe426 	beq	r11,zero,29158 <__alt_data_end+0xfffe9158>
   291c8:	8ca7c83a 	sub	r19,r17,r18
   291cc:	04ffe20e 	bge	zero,r19,29158 <__alt_data_end+0xfffe9158>
   291d0:	01c00404 	movi	r7,16
   291d4:	3cffcc0e 	bge	r7,r19,29108 <__alt_data_end+0xfffe9108>
   291d8:	028000f4 	movhi	r10,3
   291dc:	52bd8404 	addi	r10,r10,-2544
   291e0:	d9001b17 	ldw	r4,108(sp)
   291e4:	da802415 	stw	r10,144(sp)
   291e8:	382b883a 	mov	r21,r7
   291ec:	050001c4 	movi	r20,7
   291f0:	df002017 	ldw	fp,128(sp)
   291f4:	00000506 	br	2920c <___vfiprintf_internal_r+0xdd8>
   291f8:	21400084 	addi	r5,r4,2
   291fc:	42000204 	addi	r8,r8,8
   29200:	1809883a 	mov	r4,r3
   29204:	9cfffc04 	addi	r19,r19,-16
   29208:	acffc40e 	bge	r21,r19,2911c <__alt_data_end+0xfffe911c>
   2920c:	10800404 	addi	r2,r2,16
   29210:	20c00044 	addi	r3,r4,1
   29214:	45800015 	stw	r22,0(r8)
   29218:	45400115 	stw	r21,4(r8)
   2921c:	d8801c15 	stw	r2,112(sp)
   29220:	d8c01b15 	stw	r3,108(sp)
   29224:	a0fff40e 	bge	r20,r3,291f8 <__alt_data_end+0xfffe91f8>
   29228:	1000041e 	bne	r2,zero,2923c <___vfiprintf_internal_r+0xe08>
   2922c:	01400044 	movi	r5,1
   29230:	0009883a 	mov	r4,zero
   29234:	d811883a 	mov	r8,sp
   29238:	003ff206 	br	29204 <__alt_data_end+0xfffe9204>
   2923c:	d9402117 	ldw	r5,132(sp)
   29240:	d9801a04 	addi	r6,sp,104
   29244:	e009883a 	mov	r4,fp
   29248:	00283200 	call	28320 <__sprint_r.part.0>
   2924c:	103fcd1e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   29250:	d9001b17 	ldw	r4,108(sp)
   29254:	d8801c17 	ldw	r2,112(sp)
   29258:	d811883a 	mov	r8,sp
   2925c:	21400044 	addi	r5,r4,1
   29260:	003fe806 	br	29204 <__alt_data_end+0xfffe9204>
   29264:	d9402117 	ldw	r5,132(sp)
   29268:	d9002017 	ldw	r4,128(sp)
   2926c:	d9801a04 	addi	r6,sp,104
   29270:	d9c02b15 	stw	r7,172(sp)
   29274:	db402a15 	stw	r13,168(sp)
   29278:	00283200 	call	28320 <__sprint_r.part.0>
   2927c:	d9c02b17 	ldw	r7,172(sp)
   29280:	db402a17 	ldw	r13,168(sp)
   29284:	103fbf1e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   29288:	d9401b17 	ldw	r5,108(sp)
   2928c:	d8801c17 	ldw	r2,112(sp)
   29290:	d811883a 	mov	r8,sp
   29294:	29800044 	addi	r6,r5,1
   29298:	003dc406 	br	289ac <__alt_data_end+0xfffe89ac>
   2929c:	1000d21e 	bne	r2,zero,295e8 <___vfiprintf_internal_r+0x11b4>
   292a0:	d8c01d87 	ldb	r3,118(sp)
   292a4:	18009526 	beq	r3,zero,294fc <___vfiprintf_internal_r+0x10c8>
   292a8:	00800044 	movi	r2,1
   292ac:	d8c01d84 	addi	r3,sp,118
   292b0:	1009883a 	mov	r4,r2
   292b4:	d8c00015 	stw	r3,0(sp)
   292b8:	d8800115 	stw	r2,4(sp)
   292bc:	d811883a 	mov	r8,sp
   292c0:	200b883a 	mov	r5,r4
   292c4:	42000204 	addi	r8,r8,8
   292c8:	21000044 	addi	r4,r4,1
   292cc:	003d9706 	br	2892c <__alt_data_end+0xfffe892c>
   292d0:	d9001d04 	addi	r4,sp,116
   292d4:	00800084 	movi	r2,2
   292d8:	d9000015 	stw	r4,0(sp)
   292dc:	d8800115 	stw	r2,4(sp)
   292e0:	1809883a 	mov	r4,r3
   292e4:	d811883a 	mov	r8,sp
   292e8:	200b883a 	mov	r5,r4
   292ec:	42000204 	addi	r8,r8,8
   292f0:	21000044 	addi	r4,r4,1
   292f4:	003f4e06 	br	29030 <__alt_data_end+0xfffe9030>
   292f8:	d8001d85 	stb	zero,118(sp)
   292fc:	48005016 	blt	r9,zero,29440 <___vfiprintf_internal_r+0x100c>
   29300:	00ffdfc4 	movi	r3,-129
   29304:	94c4b03a 	or	r2,r18,r19
   29308:	a0e8703a 	and	r20,r20,r3
   2930c:	103d4426 	beq	r2,zero,28820 <__alt_data_end+0xfffe8820>
   29310:	0039883a 	mov	fp,zero
   29314:	d9002617 	ldw	r4,152(sp)
   29318:	dd401a04 	addi	r21,sp,104
   2931c:	908003cc 	andi	r2,r18,15
   29320:	9806973a 	slli	r3,r19,28
   29324:	2085883a 	add	r2,r4,r2
   29328:	9024d13a 	srli	r18,r18,4
   2932c:	10800003 	ldbu	r2,0(r2)
   29330:	9826d13a 	srli	r19,r19,4
   29334:	ad7fffc4 	addi	r21,r21,-1
   29338:	1ca4b03a 	or	r18,r3,r18
   2933c:	a8800005 	stb	r2,0(r21)
   29340:	94c4b03a 	or	r2,r18,r19
   29344:	103ff51e 	bne	r2,zero,2931c <__alt_data_end+0xfffe931c>
   29348:	003e5906 	br	28cb0 <__alt_data_end+0xfffe8cb0>
   2934c:	d9402117 	ldw	r5,132(sp)
   29350:	d9002017 	ldw	r4,128(sp)
   29354:	d9801a04 	addi	r6,sp,104
   29358:	00283200 	call	28320 <__sprint_r.part.0>
   2935c:	103f891e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   29360:	d8801c17 	ldw	r2,112(sp)
   29364:	d811883a 	mov	r8,sp
   29368:	003f9506 	br	291c0 <__alt_data_end+0xfffe91c0>
   2936c:	d9402117 	ldw	r5,132(sp)
   29370:	d9002017 	ldw	r4,128(sp)
   29374:	d9801a04 	addi	r6,sp,104
   29378:	00283200 	call	28320 <__sprint_r.part.0>
   2937c:	103f811e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   29380:	d811883a 	mov	r8,sp
   29384:	003ced06 	br	2873c <__alt_data_end+0xfffe873c>
   29388:	d9402117 	ldw	r5,132(sp)
   2938c:	d9002017 	ldw	r4,128(sp)
   29390:	d9801a04 	addi	r6,sp,104
   29394:	da402c15 	stw	r9,176(sp)
   29398:	db802a15 	stw	r14,168(sp)
   2939c:	00283200 	call	28320 <__sprint_r.part.0>
   293a0:	da402c17 	ldw	r9,176(sp)
   293a4:	db802a17 	ldw	r14,168(sp)
   293a8:	103f761e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   293ac:	d9401b17 	ldw	r5,108(sp)
   293b0:	d8801c17 	ldw	r2,112(sp)
   293b4:	d811883a 	mov	r8,sp
   293b8:	29000044 	addi	r4,r5,1
   293bc:	003d5b06 	br	2892c <__alt_data_end+0xfffe892c>
   293c0:	d9402117 	ldw	r5,132(sp)
   293c4:	d9002017 	ldw	r4,128(sp)
   293c8:	d9801a04 	addi	r6,sp,104
   293cc:	da402c15 	stw	r9,176(sp)
   293d0:	00283200 	call	28320 <__sprint_r.part.0>
   293d4:	da402c17 	ldw	r9,176(sp)
   293d8:	103f6a1e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   293dc:	d9401b17 	ldw	r5,108(sp)
   293e0:	d8801c17 	ldw	r2,112(sp)
   293e4:	d811883a 	mov	r8,sp
   293e8:	29000044 	addi	r4,r5,1
   293ec:	003f1006 	br	29030 <__alt_data_end+0xfffe9030>
   293f0:	1000c31e 	bne	r2,zero,29700 <___vfiprintf_internal_r+0x12cc>
   293f4:	01000044 	movi	r4,1
   293f8:	000b883a 	mov	r5,zero
   293fc:	d811883a 	mov	r8,sp
   29400:	003f0d06 	br	29038 <__alt_data_end+0xfffe9038>
   29404:	d9402117 	ldw	r5,132(sp)
   29408:	d9002017 	ldw	r4,128(sp)
   2940c:	d9801a04 	addi	r6,sp,104
   29410:	00283200 	call	28320 <__sprint_r.part.0>
   29414:	103f5b1e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   29418:	d9001b17 	ldw	r4,108(sp)
   2941c:	d8801c17 	ldw	r2,112(sp)
   29420:	d811883a 	mov	r8,sp
   29424:	21000044 	addi	r4,r4,1
   29428:	003d8006 	br	28a2c <__alt_data_end+0xfffe8a2c>
   2942c:	010000f4 	movhi	r4,3
   29430:	213d1f04 	addi	r4,r4,-2948
   29434:	d9002615 	stw	r4,152(sp)
   29438:	d8c02215 	stw	r3,136(sp)
   2943c:	1029883a 	mov	r20,r2
   29440:	94c4b03a 	or	r2,r18,r19
   29444:	103fb21e 	bne	r2,zero,29310 <__alt_data_end+0xfffe9310>
   29448:	0039883a 	mov	fp,zero
   2944c:	00800084 	movi	r2,2
   29450:	003e6b06 	br	28e00 <__alt_data_end+0xfffe8e00>
   29454:	da802217 	ldw	r10,136(sp)
   29458:	d8001d85 	stb	zero,118(sp)
   2945c:	0027883a 	mov	r19,zero
   29460:	50800104 	addi	r2,r10,4
   29464:	54800017 	ldw	r18,0(r10)
   29468:	483e6016 	blt	r9,zero,28dec <__alt_data_end+0xfffe8dec>
   2946c:	00ffdfc4 	movi	r3,-129
   29470:	d8802215 	stw	r2,136(sp)
   29474:	a0e8703a 	and	r20,r20,r3
   29478:	0039883a 	mov	fp,zero
   2947c:	903ebb26 	beq	r18,zero,28f6c <__alt_data_end+0xfffe8f6c>
   29480:	00800244 	movi	r2,9
   29484:	14bdee36 	bltu	r2,r18,28c40 <__alt_data_end+0xfffe8c40>
   29488:	003eba06 	br	28f74 <__alt_data_end+0xfffe8f74>
   2948c:	00800c04 	movi	r2,48
   29490:	d8c01d45 	stb	r3,117(sp)
   29494:	d8801d05 	stb	r2,116(sp)
   29498:	d8001d85 	stb	zero,118(sp)
   2949c:	a0c00094 	ori	r3,r20,2
   294a0:	4800a916 	blt	r9,zero,29748 <___vfiprintf_internal_r+0x1314>
   294a4:	00bfdfc4 	movi	r2,-129
   294a8:	a096703a 	and	r11,r20,r2
   294ac:	5d000094 	ori	r20,r11,2
   294b0:	0039883a 	mov	fp,zero
   294b4:	003f9706 	br	29314 <__alt_data_end+0xfffe9314>
   294b8:	8025883a 	mov	r18,r16
   294bc:	003c2e06 	br	28578 <__alt_data_end+0xfffe8578>
   294c0:	008000f4 	movhi	r2,3
   294c4:	10bd1f04 	addi	r2,r2,-2948
   294c8:	0039883a 	mov	fp,zero
   294cc:	d8802615 	stw	r2,152(sp)
   294d0:	003f9006 	br	29314 <__alt_data_end+0xfffe9314>
   294d4:	04a5c83a 	sub	r18,zero,r18
   294d8:	07000b44 	movi	fp,45
   294dc:	9004c03a 	cmpne	r2,r18,zero
   294e0:	04e7c83a 	sub	r19,zero,r19
   294e4:	df001d85 	stb	fp,118(sp)
   294e8:	98a7c83a 	sub	r19,r19,r2
   294ec:	48009f16 	blt	r9,zero,2976c <___vfiprintf_internal_r+0x1338>
   294f0:	00bfdfc4 	movi	r2,-129
   294f4:	a0a8703a 	and	r20,r20,r2
   294f8:	003dd006 	br	28c3c <__alt_data_end+0xfffe8c3c>
   294fc:	70004c26 	beq	r14,zero,29630 <___vfiprintf_internal_r+0x11fc>
   29500:	00800084 	movi	r2,2
   29504:	d8c01d04 	addi	r3,sp,116
   29508:	d8c00015 	stw	r3,0(sp)
   2950c:	d8800115 	stw	r2,4(sp)
   29510:	01000044 	movi	r4,1
   29514:	d811883a 	mov	r8,sp
   29518:	003f7306 	br	292e8 <__alt_data_end+0xfffe92e8>
   2951c:	a080100c 	andi	r2,r20,64
   29520:	da802217 	ldw	r10,136(sp)
   29524:	103e0626 	beq	r2,zero,28d40 <__alt_data_end+0xfffe8d40>
   29528:	5480000f 	ldh	r18,0(r10)
   2952c:	52800104 	addi	r10,r10,4
   29530:	da802215 	stw	r10,136(sp)
   29534:	9027d7fa 	srai	r19,r18,31
   29538:	9805883a 	mov	r2,r19
   2953c:	003db806 	br	28c20 <__alt_data_end+0xfffe8c20>
   29540:	a080040c 	andi	r2,r20,16
   29544:	1000091e 	bne	r2,zero,2956c <___vfiprintf_internal_r+0x1138>
   29548:	a2c0100c 	andi	r11,r20,64
   2954c:	58000726 	beq	r11,zero,2956c <___vfiprintf_internal_r+0x1138>
   29550:	da802217 	ldw	r10,136(sp)
   29554:	50800017 	ldw	r2,0(r10)
   29558:	52800104 	addi	r10,r10,4
   2955c:	da802215 	stw	r10,136(sp)
   29560:	da802317 	ldw	r10,140(sp)
   29564:	1280000d 	sth	r10,0(r2)
   29568:	003be706 	br	28508 <__alt_data_end+0xfffe8508>
   2956c:	da802217 	ldw	r10,136(sp)
   29570:	50800017 	ldw	r2,0(r10)
   29574:	52800104 	addi	r10,r10,4
   29578:	da802215 	stw	r10,136(sp)
   2957c:	da802317 	ldw	r10,140(sp)
   29580:	12800015 	stw	r10,0(r2)
   29584:	003be006 	br	28508 <__alt_data_end+0xfffe8508>
   29588:	a080100c 	andi	r2,r20,64
   2958c:	da802217 	ldw	r10,136(sp)
   29590:	10003026 	beq	r2,zero,29654 <___vfiprintf_internal_r+0x1220>
   29594:	5480000b 	ldhu	r18,0(r10)
   29598:	52800104 	addi	r10,r10,4
   2959c:	0027883a 	mov	r19,zero
   295a0:	da802215 	stw	r10,136(sp)
   295a4:	003d8006 	br	28ba8 <__alt_data_end+0xfffe8ba8>
   295a8:	80c00007 	ldb	r3,0(r16)
   295ac:	003c0006 	br	285b0 <__alt_data_end+0xfffe85b0>
   295b0:	a080100c 	andi	r2,r20,64
   295b4:	d8001d85 	stb	zero,118(sp)
   295b8:	da802217 	ldw	r10,136(sp)
   295bc:	1000201e 	bne	r2,zero,29640 <___vfiprintf_internal_r+0x120c>
   295c0:	50800104 	addi	r2,r10,4
   295c4:	54800017 	ldw	r18,0(r10)
   295c8:	0027883a 	mov	r19,zero
   295cc:	483def0e 	bge	r9,zero,28d8c <__alt_data_end+0xfffe8d8c>
   295d0:	94c6b03a 	or	r3,r18,r19
   295d4:	d8802215 	stw	r2,136(sp)
   295d8:	183d4e1e 	bne	r3,zero,28b14 <__alt_data_end+0xfffe8b14>
   295dc:	0039883a 	mov	fp,zero
   295e0:	0005883a 	mov	r2,zero
   295e4:	003e0606 	br	28e00 <__alt_data_end+0xfffe8e00>
   295e8:	d9402117 	ldw	r5,132(sp)
   295ec:	d9002017 	ldw	r4,128(sp)
   295f0:	d9801a04 	addi	r6,sp,104
   295f4:	da402c15 	stw	r9,176(sp)
   295f8:	db802a15 	stw	r14,168(sp)
   295fc:	00283200 	call	28320 <__sprint_r.part.0>
   29600:	da402c17 	ldw	r9,176(sp)
   29604:	db802a17 	ldw	r14,168(sp)
   29608:	103ede1e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   2960c:	d9401b17 	ldw	r5,108(sp)
   29610:	d8801c17 	ldw	r2,112(sp)
   29614:	d811883a 	mov	r8,sp
   29618:	29000044 	addi	r4,r5,1
   2961c:	003e7406 	br	28ff0 <__alt_data_end+0xfffe8ff0>
   29620:	00bfffc4 	movi	r2,-1
   29624:	003c5806 	br	28788 <__alt_data_end+0xfffe8788>
   29628:	d811883a 	mov	r8,sp
   2962c:	003ee806 	br	291d0 <__alt_data_end+0xfffe91d0>
   29630:	000b883a 	mov	r5,zero
   29634:	01000044 	movi	r4,1
   29638:	d811883a 	mov	r8,sp
   2963c:	003e7c06 	br	29030 <__alt_data_end+0xfffe9030>
   29640:	50800104 	addi	r2,r10,4
   29644:	5480000b 	ldhu	r18,0(r10)
   29648:	0027883a 	mov	r19,zero
   2964c:	483dcf0e 	bge	r9,zero,28d8c <__alt_data_end+0xfffe8d8c>
   29650:	003fdf06 	br	295d0 <__alt_data_end+0xfffe95d0>
   29654:	54800017 	ldw	r18,0(r10)
   29658:	52800104 	addi	r10,r10,4
   2965c:	0027883a 	mov	r19,zero
   29660:	da802215 	stw	r10,136(sp)
   29664:	003d5006 	br	28ba8 <__alt_data_end+0xfffe8ba8>
   29668:	50800104 	addi	r2,r10,4
   2966c:	5480000b 	ldhu	r18,0(r10)
   29670:	0027883a 	mov	r19,zero
   29674:	483f7d0e 	bge	r9,zero,2946c <__alt_data_end+0xfffe946c>
   29678:	003ddc06 	br	28dec <__alt_data_end+0xfffe8dec>
   2967c:	d8c02215 	stw	r3,136(sp)
   29680:	0039883a 	mov	fp,zero
   29684:	003ddb06 	br	28df4 <__alt_data_end+0xfffe8df4>
   29688:	028000f4 	movhi	r10,3
   2968c:	52bd8004 	addi	r10,r10,-2560
   29690:	da802415 	stw	r10,144(sp)
   29694:	003e8306 	br	290a4 <__alt_data_end+0xfffe90a4>
   29698:	d8801c17 	ldw	r2,112(sp)
   2969c:	dd002117 	ldw	r20,132(sp)
   296a0:	103eb926 	beq	r2,zero,29188 <__alt_data_end+0xfffe9188>
   296a4:	d9002017 	ldw	r4,128(sp)
   296a8:	d9801a04 	addi	r6,sp,104
   296ac:	a00b883a 	mov	r5,r20
   296b0:	00283200 	call	28320 <__sprint_r.part.0>
   296b4:	003eb406 	br	29188 <__alt_data_end+0xfffe9188>
   296b8:	80c00043 	ldbu	r3,1(r16)
   296bc:	a5000814 	ori	r20,r20,32
   296c0:	84000044 	addi	r16,r16,1
   296c4:	18c03fcc 	andi	r3,r3,255
   296c8:	18c0201c 	xori	r3,r3,128
   296cc:	18ffe004 	addi	r3,r3,-128
   296d0:	003bb706 	br	285b0 <__alt_data_end+0xfffe85b0>
   296d4:	a809883a 	mov	r4,r21
   296d8:	d8c02a15 	stw	r3,168(sp)
   296dc:	da002b15 	stw	r8,172(sp)
   296e0:	00282880 	call	28288 <strlen>
   296e4:	d8c02a17 	ldw	r3,168(sp)
   296e8:	1027883a 	mov	r19,r2
   296ec:	df001d83 	ldbu	fp,118(sp)
   296f0:	d8c02215 	stw	r3,136(sp)
   296f4:	0013883a 	mov	r9,zero
   296f8:	da002b17 	ldw	r8,172(sp)
   296fc:	003c4d06 	br	28834 <__alt_data_end+0xfffe8834>
   29700:	d9402117 	ldw	r5,132(sp)
   29704:	d9002017 	ldw	r4,128(sp)
   29708:	d9801a04 	addi	r6,sp,104
   2970c:	da402c15 	stw	r9,176(sp)
   29710:	00283200 	call	28320 <__sprint_r.part.0>
   29714:	da402c17 	ldw	r9,176(sp)
   29718:	103e9a1e 	bne	r2,zero,29184 <__alt_data_end+0xfffe9184>
   2971c:	d9401b17 	ldw	r5,108(sp)
   29720:	d8801c17 	ldw	r2,112(sp)
   29724:	d811883a 	mov	r8,sp
   29728:	29000044 	addi	r4,r5,1
   2972c:	003e4206 	br	29038 <__alt_data_end+0xfffe9038>
   29730:	d9401b17 	ldw	r5,108(sp)
   29734:	010000f4 	movhi	r4,3
   29738:	213d8404 	addi	r4,r4,-2544
   2973c:	d9002415 	stw	r4,144(sp)
   29740:	29400044 	addi	r5,r5,1
   29744:	003c6d06 	br	288fc <__alt_data_end+0xfffe88fc>
   29748:	0039883a 	mov	fp,zero
   2974c:	00800084 	movi	r2,2
   29750:	10803fcc 	andi	r2,r2,255
   29754:	01000044 	movi	r4,1
   29758:	11001e26 	beq	r2,r4,297d4 <___vfiprintf_internal_r+0x13a0>
   2975c:	01000084 	movi	r4,2
   29760:	11001e1e 	bne	r2,r4,297dc <___vfiprintf_internal_r+0x13a8>
   29764:	1829883a 	mov	r20,r3
   29768:	003eea06 	br	29314 <__alt_data_end+0xfffe9314>
   2976c:	a007883a 	mov	r3,r20
   29770:	00800044 	movi	r2,1
   29774:	003ff606 	br	29750 <__alt_data_end+0xfffe9750>
   29778:	00800184 	movi	r2,6
   2977c:	1240012e 	bgeu	r2,r9,29784 <___vfiprintf_internal_r+0x1350>
   29780:	1013883a 	mov	r9,r2
   29784:	4827883a 	mov	r19,r9
   29788:	4825883a 	mov	r18,r9
   2978c:	48001516 	blt	r9,zero,297e4 <___vfiprintf_internal_r+0x13b0>
   29790:	054000f4 	movhi	r21,3
   29794:	d8c02215 	stw	r3,136(sp)
   29798:	ad7d2404 	addi	r21,r21,-2928
   2979c:	003d1406 	br	28bf0 <__alt_data_end+0xfffe8bf0>
   297a0:	028000f4 	movhi	r10,3
   297a4:	52bd8004 	addi	r10,r10,-2560
   297a8:	da802415 	stw	r10,144(sp)
   297ac:	200d883a 	mov	r6,r4
   297b0:	003c9106 	br	289f8 <__alt_data_end+0xfffe89f8>
   297b4:	5021883a 	mov	r16,r10
   297b8:	0013883a 	mov	r9,zero
   297bc:	003b7d06 	br	285b4 <__alt_data_end+0xfffe85b4>
   297c0:	4827883a 	mov	r19,r9
   297c4:	df001d83 	ldbu	fp,118(sp)
   297c8:	d8c02215 	stw	r3,136(sp)
   297cc:	0013883a 	mov	r9,zero
   297d0:	003c1806 	br	28834 <__alt_data_end+0xfffe8834>
   297d4:	1829883a 	mov	r20,r3
   297d8:	003d1806 	br	28c3c <__alt_data_end+0xfffe8c3c>
   297dc:	1829883a 	mov	r20,r3
   297e0:	003ccd06 	br	28b18 <__alt_data_end+0xfffe8b18>
   297e4:	0025883a 	mov	r18,zero
   297e8:	003fe906 	br	29790 <__alt_data_end+0xfffe9790>
   297ec:	d8802217 	ldw	r2,136(sp)
   297f0:	80c00043 	ldbu	r3,1(r16)
   297f4:	5021883a 	mov	r16,r10
   297f8:	12400017 	ldw	r9,0(r2)
   297fc:	10800104 	addi	r2,r2,4
   29800:	d8802215 	stw	r2,136(sp)
   29804:	483faf0e 	bge	r9,zero,296c4 <__alt_data_end+0xfffe96c4>
   29808:	18c03fcc 	andi	r3,r3,255
   2980c:	18c0201c 	xori	r3,r3,128
   29810:	027fffc4 	movi	r9,-1
   29814:	18ffe004 	addi	r3,r3,-128
   29818:	003b6506 	br	285b0 <__alt_data_end+0xfffe85b0>
   2981c:	d9c01d85 	stb	r7,118(sp)
   29820:	003ca006 	br	28aa4 <__alt_data_end+0xfffe8aa4>
   29824:	d9c01d85 	stb	r7,118(sp)
   29828:	003cad06 	br	28ae0 <__alt_data_end+0xfffe8ae0>
   2982c:	d9c01d85 	stb	r7,118(sp)
   29830:	003d7d06 	br	28e28 <__alt_data_end+0xfffe8e28>
   29834:	d9c01d85 	stb	r7,118(sp)
   29838:	003d5f06 	br	28db8 <__alt_data_end+0xfffe8db8>
   2983c:	a080004c 	andi	r2,r20,1
   29840:	0039883a 	mov	fp,zero
   29844:	10000526 	beq	r2,zero,2985c <___vfiprintf_internal_r+0x1428>
   29848:	00800c04 	movi	r2,48
   2984c:	d88019c5 	stb	r2,103(sp)
   29850:	dcc02717 	ldw	r19,156(sp)
   29854:	dd4019c4 	addi	r21,sp,103
   29858:	003bf606 	br	28834 <__alt_data_end+0xfffe8834>
   2985c:	0027883a 	mov	r19,zero
   29860:	dd401a04 	addi	r21,sp,104
   29864:	003bf306 	br	28834 <__alt_data_end+0xfffe8834>
   29868:	d9c01d85 	stb	r7,118(sp)
   2986c:	003dc806 	br	28f90 <__alt_data_end+0xfffe8f90>
   29870:	d9c01d85 	stb	r7,118(sp)
   29874:	003d3a06 	br	28d60 <__alt_data_end+0xfffe8d60>
   29878:	d9c01d85 	stb	r7,118(sp)
   2987c:	003d2a06 	br	28d28 <__alt_data_end+0xfffe8d28>
   29880:	d9c01d85 	stb	r7,118(sp)
   29884:	003cde06 	br	28c00 <__alt_data_end+0xfffe8c00>
   29888:	d9c01d85 	stb	r7,118(sp)
   2988c:	003cbc06 	br	28b80 <__alt_data_end+0xfffe8b80>

00029890 <__vfiprintf_internal>:
   29890:	008000f4 	movhi	r2,3
   29894:	10844104 	addi	r2,r2,4356
   29898:	300f883a 	mov	r7,r6
   2989c:	280d883a 	mov	r6,r5
   298a0:	200b883a 	mov	r5,r4
   298a4:	11000017 	ldw	r4,0(r2)
   298a8:	00284341 	jmpi	28434 <___vfiprintf_internal_r>

000298ac <__sbprintf>:
   298ac:	2880030b 	ldhu	r2,12(r5)
   298b0:	2ac01917 	ldw	r11,100(r5)
   298b4:	2a80038b 	ldhu	r10,14(r5)
   298b8:	2a400717 	ldw	r9,28(r5)
   298bc:	2a000917 	ldw	r8,36(r5)
   298c0:	defee204 	addi	sp,sp,-1144
   298c4:	00c10004 	movi	r3,1024
   298c8:	dc011a15 	stw	r16,1128(sp)
   298cc:	10bfff4c 	andi	r2,r2,65533
   298d0:	2821883a 	mov	r16,r5
   298d4:	d8cb883a 	add	r5,sp,r3
   298d8:	dc811c15 	stw	r18,1136(sp)
   298dc:	dc411b15 	stw	r17,1132(sp)
   298e0:	dfc11d15 	stw	ra,1140(sp)
   298e4:	2025883a 	mov	r18,r4
   298e8:	d881030d 	sth	r2,1036(sp)
   298ec:	dac11915 	stw	r11,1124(sp)
   298f0:	da81038d 	sth	r10,1038(sp)
   298f4:	da410715 	stw	r9,1052(sp)
   298f8:	da010915 	stw	r8,1060(sp)
   298fc:	dec10015 	stw	sp,1024(sp)
   29900:	dec10415 	stw	sp,1040(sp)
   29904:	d8c10215 	stw	r3,1032(sp)
   29908:	d8c10515 	stw	r3,1044(sp)
   2990c:	d8010615 	stw	zero,1048(sp)
   29910:	00284340 	call	28434 <___vfiprintf_internal_r>
   29914:	1023883a 	mov	r17,r2
   29918:	10000416 	blt	r2,zero,2992c <__sbprintf+0x80>
   2991c:	d9410004 	addi	r5,sp,1024
   29920:	9009883a 	mov	r4,r18
   29924:	00257cc0 	call	257cc <_fflush_r>
   29928:	10000d1e 	bne	r2,zero,29960 <__sbprintf+0xb4>
   2992c:	d881030b 	ldhu	r2,1036(sp)
   29930:	1080100c 	andi	r2,r2,64
   29934:	10000326 	beq	r2,zero,29944 <__sbprintf+0x98>
   29938:	8080030b 	ldhu	r2,12(r16)
   2993c:	10801014 	ori	r2,r2,64
   29940:	8080030d 	sth	r2,12(r16)
   29944:	8805883a 	mov	r2,r17
   29948:	dfc11d17 	ldw	ra,1140(sp)
   2994c:	dc811c17 	ldw	r18,1136(sp)
   29950:	dc411b17 	ldw	r17,1132(sp)
   29954:	dc011a17 	ldw	r16,1128(sp)
   29958:	dec11e04 	addi	sp,sp,1144
   2995c:	f800283a 	ret
   29960:	047fffc4 	movi	r17,-1
   29964:	003ff106 	br	2992c <__alt_data_end+0xfffe992c>

00029968 <_write_r>:
   29968:	defffd04 	addi	sp,sp,-12
   2996c:	2805883a 	mov	r2,r5
   29970:	dc000015 	stw	r16,0(sp)
   29974:	040000f4 	movhi	r16,3
   29978:	dc400115 	stw	r17,4(sp)
   2997c:	300b883a 	mov	r5,r6
   29980:	840b1104 	addi	r16,r16,11332
   29984:	2023883a 	mov	r17,r4
   29988:	380d883a 	mov	r6,r7
   2998c:	1009883a 	mov	r4,r2
   29990:	dfc00215 	stw	ra,8(sp)
   29994:	80000015 	stw	zero,0(r16)
   29998:	002d5000 	call	2d500 <write>
   2999c:	00ffffc4 	movi	r3,-1
   299a0:	10c00526 	beq	r2,r3,299b8 <_write_r+0x50>
   299a4:	dfc00217 	ldw	ra,8(sp)
   299a8:	dc400117 	ldw	r17,4(sp)
   299ac:	dc000017 	ldw	r16,0(sp)
   299b0:	dec00304 	addi	sp,sp,12
   299b4:	f800283a 	ret
   299b8:	80c00017 	ldw	r3,0(r16)
   299bc:	183ff926 	beq	r3,zero,299a4 <__alt_data_end+0xfffe99a4>
   299c0:	88c00015 	stw	r3,0(r17)
   299c4:	003ff706 	br	299a4 <__alt_data_end+0xfffe99a4>

000299c8 <_close_r>:
   299c8:	defffd04 	addi	sp,sp,-12
   299cc:	dc000015 	stw	r16,0(sp)
   299d0:	040000f4 	movhi	r16,3
   299d4:	dc400115 	stw	r17,4(sp)
   299d8:	840b1104 	addi	r16,r16,11332
   299dc:	2023883a 	mov	r17,r4
   299e0:	2809883a 	mov	r4,r5
   299e4:	dfc00215 	stw	ra,8(sp)
   299e8:	80000015 	stw	zero,0(r16)
   299ec:	002ccf00 	call	2ccf0 <close>
   299f0:	00ffffc4 	movi	r3,-1
   299f4:	10c00526 	beq	r2,r3,29a0c <_close_r+0x44>
   299f8:	dfc00217 	ldw	ra,8(sp)
   299fc:	dc400117 	ldw	r17,4(sp)
   29a00:	dc000017 	ldw	r16,0(sp)
   29a04:	dec00304 	addi	sp,sp,12
   29a08:	f800283a 	ret
   29a0c:	80c00017 	ldw	r3,0(r16)
   29a10:	183ff926 	beq	r3,zero,299f8 <__alt_data_end+0xfffe99f8>
   29a14:	88c00015 	stw	r3,0(r17)
   29a18:	003ff706 	br	299f8 <__alt_data_end+0xfffe99f8>

00029a1c <_calloc_r>:
   29a1c:	298b383a 	mul	r5,r5,r6
   29a20:	defffe04 	addi	sp,sp,-8
   29a24:	dfc00115 	stw	ra,4(sp)
   29a28:	dc000015 	stw	r16,0(sp)
   29a2c:	002644c0 	call	2644c <_malloc_r>
   29a30:	10002926 	beq	r2,zero,29ad8 <_calloc_r+0xbc>
   29a34:	11bfff17 	ldw	r6,-4(r2)
   29a38:	1021883a 	mov	r16,r2
   29a3c:	00bfff04 	movi	r2,-4
   29a40:	308c703a 	and	r6,r6,r2
   29a44:	00c00904 	movi	r3,36
   29a48:	308d883a 	add	r6,r6,r2
   29a4c:	19801636 	bltu	r3,r6,29aa8 <_calloc_r+0x8c>
   29a50:	008004c4 	movi	r2,19
   29a54:	11800b2e 	bgeu	r2,r6,29a84 <_calloc_r+0x68>
   29a58:	80000015 	stw	zero,0(r16)
   29a5c:	80000115 	stw	zero,4(r16)
   29a60:	008006c4 	movi	r2,27
   29a64:	11801a2e 	bgeu	r2,r6,29ad0 <_calloc_r+0xb4>
   29a68:	80000215 	stw	zero,8(r16)
   29a6c:	80000315 	stw	zero,12(r16)
   29a70:	30c0151e 	bne	r6,r3,29ac8 <_calloc_r+0xac>
   29a74:	80000415 	stw	zero,16(r16)
   29a78:	80800604 	addi	r2,r16,24
   29a7c:	80000515 	stw	zero,20(r16)
   29a80:	00000106 	br	29a88 <_calloc_r+0x6c>
   29a84:	8005883a 	mov	r2,r16
   29a88:	10000015 	stw	zero,0(r2)
   29a8c:	10000115 	stw	zero,4(r2)
   29a90:	10000215 	stw	zero,8(r2)
   29a94:	8005883a 	mov	r2,r16
   29a98:	dfc00117 	ldw	ra,4(sp)
   29a9c:	dc000017 	ldw	r16,0(sp)
   29aa0:	dec00204 	addi	sp,sp,8
   29aa4:	f800283a 	ret
   29aa8:	000b883a 	mov	r5,zero
   29aac:	8009883a 	mov	r4,r16
   29ab0:	0026e840 	call	26e84 <memset>
   29ab4:	8005883a 	mov	r2,r16
   29ab8:	dfc00117 	ldw	ra,4(sp)
   29abc:	dc000017 	ldw	r16,0(sp)
   29ac0:	dec00204 	addi	sp,sp,8
   29ac4:	f800283a 	ret
   29ac8:	80800404 	addi	r2,r16,16
   29acc:	003fee06 	br	29a88 <__alt_data_end+0xfffe9a88>
   29ad0:	80800204 	addi	r2,r16,8
   29ad4:	003fec06 	br	29a88 <__alt_data_end+0xfffe9a88>
   29ad8:	0005883a 	mov	r2,zero
   29adc:	003fee06 	br	29a98 <__alt_data_end+0xfffe9a98>

00029ae0 <_fclose_r>:
   29ae0:	28003926 	beq	r5,zero,29bc8 <_fclose_r+0xe8>
   29ae4:	defffc04 	addi	sp,sp,-16
   29ae8:	dc400115 	stw	r17,4(sp)
   29aec:	dc000015 	stw	r16,0(sp)
   29af0:	dfc00315 	stw	ra,12(sp)
   29af4:	dc800215 	stw	r18,8(sp)
   29af8:	2023883a 	mov	r17,r4
   29afc:	2821883a 	mov	r16,r5
   29b00:	20000226 	beq	r4,zero,29b0c <_fclose_r+0x2c>
   29b04:	20800e17 	ldw	r2,56(r4)
   29b08:	10002726 	beq	r2,zero,29ba8 <_fclose_r+0xc8>
   29b0c:	8080030f 	ldh	r2,12(r16)
   29b10:	1000071e 	bne	r2,zero,29b30 <_fclose_r+0x50>
   29b14:	0005883a 	mov	r2,zero
   29b18:	dfc00317 	ldw	ra,12(sp)
   29b1c:	dc800217 	ldw	r18,8(sp)
   29b20:	dc400117 	ldw	r17,4(sp)
   29b24:	dc000017 	ldw	r16,0(sp)
   29b28:	dec00404 	addi	sp,sp,16
   29b2c:	f800283a 	ret
   29b30:	800b883a 	mov	r5,r16
   29b34:	8809883a 	mov	r4,r17
   29b38:	00255b00 	call	255b0 <__sflush_r>
   29b3c:	1025883a 	mov	r18,r2
   29b40:	80800b17 	ldw	r2,44(r16)
   29b44:	10000426 	beq	r2,zero,29b58 <_fclose_r+0x78>
   29b48:	81400717 	ldw	r5,28(r16)
   29b4c:	8809883a 	mov	r4,r17
   29b50:	103ee83a 	callr	r2
   29b54:	10001616 	blt	r2,zero,29bb0 <_fclose_r+0xd0>
   29b58:	8080030b 	ldhu	r2,12(r16)
   29b5c:	1080200c 	andi	r2,r2,128
   29b60:	1000151e 	bne	r2,zero,29bb8 <_fclose_r+0xd8>
   29b64:	81400c17 	ldw	r5,48(r16)
   29b68:	28000526 	beq	r5,zero,29b80 <_fclose_r+0xa0>
   29b6c:	80801004 	addi	r2,r16,64
   29b70:	28800226 	beq	r5,r2,29b7c <_fclose_r+0x9c>
   29b74:	8809883a 	mov	r4,r17
   29b78:	0025d1c0 	call	25d1c <_free_r>
   29b7c:	80000c15 	stw	zero,48(r16)
   29b80:	81401117 	ldw	r5,68(r16)
   29b84:	28000326 	beq	r5,zero,29b94 <_fclose_r+0xb4>
   29b88:	8809883a 	mov	r4,r17
   29b8c:	0025d1c0 	call	25d1c <_free_r>
   29b90:	80001115 	stw	zero,68(r16)
   29b94:	0025bb80 	call	25bb8 <__sfp_lock_acquire>
   29b98:	8000030d 	sth	zero,12(r16)
   29b9c:	0025bbc0 	call	25bbc <__sfp_lock_release>
   29ba0:	9005883a 	mov	r2,r18
   29ba4:	003fdc06 	br	29b18 <__alt_data_end+0xfffe9b18>
   29ba8:	0025ba80 	call	25ba8 <__sinit>
   29bac:	003fd706 	br	29b0c <__alt_data_end+0xfffe9b0c>
   29bb0:	04bfffc4 	movi	r18,-1
   29bb4:	003fe806 	br	29b58 <__alt_data_end+0xfffe9b58>
   29bb8:	81400417 	ldw	r5,16(r16)
   29bbc:	8809883a 	mov	r4,r17
   29bc0:	0025d1c0 	call	25d1c <_free_r>
   29bc4:	003fe706 	br	29b64 <__alt_data_end+0xfffe9b64>
   29bc8:	0005883a 	mov	r2,zero
   29bcc:	f800283a 	ret

00029bd0 <fclose>:
   29bd0:	008000f4 	movhi	r2,3
   29bd4:	10844104 	addi	r2,r2,4356
   29bd8:	200b883a 	mov	r5,r4
   29bdc:	11000017 	ldw	r4,0(r2)
   29be0:	0029ae01 	jmpi	29ae0 <_fclose_r>

00029be4 <__fputwc>:
   29be4:	defff804 	addi	sp,sp,-32
   29be8:	dcc00415 	stw	r19,16(sp)
   29bec:	dc800315 	stw	r18,12(sp)
   29bf0:	dc000115 	stw	r16,4(sp)
   29bf4:	dfc00715 	stw	ra,28(sp)
   29bf8:	dd400615 	stw	r21,24(sp)
   29bfc:	dd000515 	stw	r20,20(sp)
   29c00:	dc400215 	stw	r17,8(sp)
   29c04:	2027883a 	mov	r19,r4
   29c08:	2825883a 	mov	r18,r5
   29c0c:	3021883a 	mov	r16,r6
   29c10:	002623c0 	call	2623c <__locale_mb_cur_max>
   29c14:	00c00044 	movi	r3,1
   29c18:	10c03e26 	beq	r2,r3,29d14 <__fputwc+0x130>
   29c1c:	81c01704 	addi	r7,r16,92
   29c20:	900d883a 	mov	r6,r18
   29c24:	d80b883a 	mov	r5,sp
   29c28:	9809883a 	mov	r4,r19
   29c2c:	002ac300 	call	2ac30 <_wcrtomb_r>
   29c30:	1029883a 	mov	r20,r2
   29c34:	00bfffc4 	movi	r2,-1
   29c38:	a0802026 	beq	r20,r2,29cbc <__fputwc+0xd8>
   29c3c:	d9400003 	ldbu	r5,0(sp)
   29c40:	a0001c26 	beq	r20,zero,29cb4 <__fputwc+0xd0>
   29c44:	0023883a 	mov	r17,zero
   29c48:	05400284 	movi	r21,10
   29c4c:	00000906 	br	29c74 <__fputwc+0x90>
   29c50:	80800017 	ldw	r2,0(r16)
   29c54:	11400005 	stb	r5,0(r2)
   29c58:	80c00017 	ldw	r3,0(r16)
   29c5c:	18c00044 	addi	r3,r3,1
   29c60:	80c00015 	stw	r3,0(r16)
   29c64:	8c400044 	addi	r17,r17,1
   29c68:	dc45883a 	add	r2,sp,r17
   29c6c:	8d00112e 	bgeu	r17,r20,29cb4 <__fputwc+0xd0>
   29c70:	11400003 	ldbu	r5,0(r2)
   29c74:	80c00217 	ldw	r3,8(r16)
   29c78:	18ffffc4 	addi	r3,r3,-1
   29c7c:	80c00215 	stw	r3,8(r16)
   29c80:	183ff30e 	bge	r3,zero,29c50 <__alt_data_end+0xfffe9c50>
   29c84:	80800617 	ldw	r2,24(r16)
   29c88:	18801916 	blt	r3,r2,29cf0 <__fputwc+0x10c>
   29c8c:	80800017 	ldw	r2,0(r16)
   29c90:	11400005 	stb	r5,0(r2)
   29c94:	80800017 	ldw	r2,0(r16)
   29c98:	10c00003 	ldbu	r3,0(r2)
   29c9c:	10800044 	addi	r2,r2,1
   29ca0:	1d402326 	beq	r3,r21,29d30 <__fputwc+0x14c>
   29ca4:	80800015 	stw	r2,0(r16)
   29ca8:	8c400044 	addi	r17,r17,1
   29cac:	dc45883a 	add	r2,sp,r17
   29cb0:	8d3fef36 	bltu	r17,r20,29c70 <__alt_data_end+0xfffe9c70>
   29cb4:	9005883a 	mov	r2,r18
   29cb8:	00000406 	br	29ccc <__fputwc+0xe8>
   29cbc:	80c0030b 	ldhu	r3,12(r16)
   29cc0:	a005883a 	mov	r2,r20
   29cc4:	18c01014 	ori	r3,r3,64
   29cc8:	80c0030d 	sth	r3,12(r16)
   29ccc:	dfc00717 	ldw	ra,28(sp)
   29cd0:	dd400617 	ldw	r21,24(sp)
   29cd4:	dd000517 	ldw	r20,20(sp)
   29cd8:	dcc00417 	ldw	r19,16(sp)
   29cdc:	dc800317 	ldw	r18,12(sp)
   29ce0:	dc400217 	ldw	r17,8(sp)
   29ce4:	dc000117 	ldw	r16,4(sp)
   29ce8:	dec00804 	addi	sp,sp,32
   29cec:	f800283a 	ret
   29cf0:	800d883a 	mov	r6,r16
   29cf4:	29403fcc 	andi	r5,r5,255
   29cf8:	9809883a 	mov	r4,r19
   29cfc:	002aad80 	call	2aad8 <__swbuf_r>
   29d00:	10bfffe0 	cmpeqi	r2,r2,-1
   29d04:	10803fcc 	andi	r2,r2,255
   29d08:	103fd626 	beq	r2,zero,29c64 <__alt_data_end+0xfffe9c64>
   29d0c:	00bfffc4 	movi	r2,-1
   29d10:	003fee06 	br	29ccc <__alt_data_end+0xfffe9ccc>
   29d14:	90ffffc4 	addi	r3,r18,-1
   29d18:	01003f84 	movi	r4,254
   29d1c:	20ffbf36 	bltu	r4,r3,29c1c <__alt_data_end+0xfffe9c1c>
   29d20:	900b883a 	mov	r5,r18
   29d24:	dc800005 	stb	r18,0(sp)
   29d28:	1029883a 	mov	r20,r2
   29d2c:	003fc506 	br	29c44 <__alt_data_end+0xfffe9c44>
   29d30:	800d883a 	mov	r6,r16
   29d34:	a80b883a 	mov	r5,r21
   29d38:	9809883a 	mov	r4,r19
   29d3c:	002aad80 	call	2aad8 <__swbuf_r>
   29d40:	10bfffe0 	cmpeqi	r2,r2,-1
   29d44:	003fef06 	br	29d04 <__alt_data_end+0xfffe9d04>

00029d48 <_fputwc_r>:
   29d48:	3080030b 	ldhu	r2,12(r6)
   29d4c:	10c8000c 	andi	r3,r2,8192
   29d50:	1800051e 	bne	r3,zero,29d68 <_fputwc_r+0x20>
   29d54:	30c01917 	ldw	r3,100(r6)
   29d58:	10880014 	ori	r2,r2,8192
   29d5c:	3080030d 	sth	r2,12(r6)
   29d60:	18880014 	ori	r2,r3,8192
   29d64:	30801915 	stw	r2,100(r6)
   29d68:	0029be41 	jmpi	29be4 <__fputwc>

00029d6c <fputwc>:
   29d6c:	008000f4 	movhi	r2,3
   29d70:	defffc04 	addi	sp,sp,-16
   29d74:	10844104 	addi	r2,r2,4356
   29d78:	dc000115 	stw	r16,4(sp)
   29d7c:	14000017 	ldw	r16,0(r2)
   29d80:	dc400215 	stw	r17,8(sp)
   29d84:	dfc00315 	stw	ra,12(sp)
   29d88:	2023883a 	mov	r17,r4
   29d8c:	80000226 	beq	r16,zero,29d98 <fputwc+0x2c>
   29d90:	80800e17 	ldw	r2,56(r16)
   29d94:	10001026 	beq	r2,zero,29dd8 <fputwc+0x6c>
   29d98:	2880030b 	ldhu	r2,12(r5)
   29d9c:	10c8000c 	andi	r3,r2,8192
   29da0:	1800051e 	bne	r3,zero,29db8 <fputwc+0x4c>
   29da4:	28c01917 	ldw	r3,100(r5)
   29da8:	10880014 	ori	r2,r2,8192
   29dac:	2880030d 	sth	r2,12(r5)
   29db0:	18880014 	ori	r2,r3,8192
   29db4:	28801915 	stw	r2,100(r5)
   29db8:	280d883a 	mov	r6,r5
   29dbc:	8009883a 	mov	r4,r16
   29dc0:	880b883a 	mov	r5,r17
   29dc4:	dfc00317 	ldw	ra,12(sp)
   29dc8:	dc400217 	ldw	r17,8(sp)
   29dcc:	dc000117 	ldw	r16,4(sp)
   29dd0:	dec00404 	addi	sp,sp,16
   29dd4:	0029be41 	jmpi	29be4 <__fputwc>
   29dd8:	8009883a 	mov	r4,r16
   29ddc:	d9400015 	stw	r5,0(sp)
   29de0:	0025ba80 	call	25ba8 <__sinit>
   29de4:	d9400017 	ldw	r5,0(sp)
   29de8:	003feb06 	br	29d98 <__alt_data_end+0xfffe9d98>

00029dec <_fstat_r>:
   29dec:	defffd04 	addi	sp,sp,-12
   29df0:	2805883a 	mov	r2,r5
   29df4:	dc000015 	stw	r16,0(sp)
   29df8:	040000f4 	movhi	r16,3
   29dfc:	dc400115 	stw	r17,4(sp)
   29e00:	840b1104 	addi	r16,r16,11332
   29e04:	2023883a 	mov	r17,r4
   29e08:	300b883a 	mov	r5,r6
   29e0c:	1009883a 	mov	r4,r2
   29e10:	dfc00215 	stw	ra,8(sp)
   29e14:	80000015 	stw	zero,0(r16)
   29e18:	002ce280 	call	2ce28 <fstat>
   29e1c:	00ffffc4 	movi	r3,-1
   29e20:	10c00526 	beq	r2,r3,29e38 <_fstat_r+0x4c>
   29e24:	dfc00217 	ldw	ra,8(sp)
   29e28:	dc400117 	ldw	r17,4(sp)
   29e2c:	dc000017 	ldw	r16,0(sp)
   29e30:	dec00304 	addi	sp,sp,12
   29e34:	f800283a 	ret
   29e38:	80c00017 	ldw	r3,0(r16)
   29e3c:	183ff926 	beq	r3,zero,29e24 <__alt_data_end+0xfffe9e24>
   29e40:	88c00015 	stw	r3,0(r17)
   29e44:	003ff706 	br	29e24 <__alt_data_end+0xfffe9e24>

00029e48 <__sfvwrite_r>:
   29e48:	30800217 	ldw	r2,8(r6)
   29e4c:	10006726 	beq	r2,zero,29fec <__sfvwrite_r+0x1a4>
   29e50:	28c0030b 	ldhu	r3,12(r5)
   29e54:	defff404 	addi	sp,sp,-48
   29e58:	dd400715 	stw	r21,28(sp)
   29e5c:	dd000615 	stw	r20,24(sp)
   29e60:	dc000215 	stw	r16,8(sp)
   29e64:	dfc00b15 	stw	ra,44(sp)
   29e68:	df000a15 	stw	fp,40(sp)
   29e6c:	ddc00915 	stw	r23,36(sp)
   29e70:	dd800815 	stw	r22,32(sp)
   29e74:	dcc00515 	stw	r19,20(sp)
   29e78:	dc800415 	stw	r18,16(sp)
   29e7c:	dc400315 	stw	r17,12(sp)
   29e80:	1880020c 	andi	r2,r3,8
   29e84:	2821883a 	mov	r16,r5
   29e88:	202b883a 	mov	r21,r4
   29e8c:	3029883a 	mov	r20,r6
   29e90:	10002726 	beq	r2,zero,29f30 <__sfvwrite_r+0xe8>
   29e94:	28800417 	ldw	r2,16(r5)
   29e98:	10002526 	beq	r2,zero,29f30 <__sfvwrite_r+0xe8>
   29e9c:	1880008c 	andi	r2,r3,2
   29ea0:	a4400017 	ldw	r17,0(r20)
   29ea4:	10002a26 	beq	r2,zero,29f50 <__sfvwrite_r+0x108>
   29ea8:	05a00034 	movhi	r22,32768
   29eac:	0027883a 	mov	r19,zero
   29eb0:	0025883a 	mov	r18,zero
   29eb4:	b5bf0004 	addi	r22,r22,-1024
   29eb8:	980d883a 	mov	r6,r19
   29ebc:	a809883a 	mov	r4,r21
   29ec0:	90004626 	beq	r18,zero,29fdc <__sfvwrite_r+0x194>
   29ec4:	900f883a 	mov	r7,r18
   29ec8:	b480022e 	bgeu	r22,r18,29ed4 <__sfvwrite_r+0x8c>
   29ecc:	01e00034 	movhi	r7,32768
   29ed0:	39ff0004 	addi	r7,r7,-1024
   29ed4:	80800917 	ldw	r2,36(r16)
   29ed8:	81400717 	ldw	r5,28(r16)
   29edc:	103ee83a 	callr	r2
   29ee0:	0080570e 	bge	zero,r2,2a040 <__sfvwrite_r+0x1f8>
   29ee4:	a0c00217 	ldw	r3,8(r20)
   29ee8:	98a7883a 	add	r19,r19,r2
   29eec:	90a5c83a 	sub	r18,r18,r2
   29ef0:	1885c83a 	sub	r2,r3,r2
   29ef4:	a0800215 	stw	r2,8(r20)
   29ef8:	103fef1e 	bne	r2,zero,29eb8 <__alt_data_end+0xfffe9eb8>
   29efc:	0005883a 	mov	r2,zero
   29f00:	dfc00b17 	ldw	ra,44(sp)
   29f04:	df000a17 	ldw	fp,40(sp)
   29f08:	ddc00917 	ldw	r23,36(sp)
   29f0c:	dd800817 	ldw	r22,32(sp)
   29f10:	dd400717 	ldw	r21,28(sp)
   29f14:	dd000617 	ldw	r20,24(sp)
   29f18:	dcc00517 	ldw	r19,20(sp)
   29f1c:	dc800417 	ldw	r18,16(sp)
   29f20:	dc400317 	ldw	r17,12(sp)
   29f24:	dc000217 	ldw	r16,8(sp)
   29f28:	dec00c04 	addi	sp,sp,48
   29f2c:	f800283a 	ret
   29f30:	800b883a 	mov	r5,r16
   29f34:	a809883a 	mov	r4,r21
   29f38:	0023bd40 	call	23bd4 <__swsetup_r>
   29f3c:	1000eb1e 	bne	r2,zero,2a2ec <__sfvwrite_r+0x4a4>
   29f40:	80c0030b 	ldhu	r3,12(r16)
   29f44:	a4400017 	ldw	r17,0(r20)
   29f48:	1880008c 	andi	r2,r3,2
   29f4c:	103fd61e 	bne	r2,zero,29ea8 <__alt_data_end+0xfffe9ea8>
   29f50:	1880004c 	andi	r2,r3,1
   29f54:	10003f1e 	bne	r2,zero,2a054 <__sfvwrite_r+0x20c>
   29f58:	0039883a 	mov	fp,zero
   29f5c:	0025883a 	mov	r18,zero
   29f60:	90001a26 	beq	r18,zero,29fcc <__sfvwrite_r+0x184>
   29f64:	1880800c 	andi	r2,r3,512
   29f68:	84c00217 	ldw	r19,8(r16)
   29f6c:	10002126 	beq	r2,zero,29ff4 <__sfvwrite_r+0x1ac>
   29f70:	982f883a 	mov	r23,r19
   29f74:	94c09336 	bltu	r18,r19,2a1c4 <__sfvwrite_r+0x37c>
   29f78:	1881200c 	andi	r2,r3,1152
   29f7c:	10009e1e 	bne	r2,zero,2a1f8 <__sfvwrite_r+0x3b0>
   29f80:	81000017 	ldw	r4,0(r16)
   29f84:	b80d883a 	mov	r6,r23
   29f88:	e00b883a 	mov	r5,fp
   29f8c:	002a3b80 	call	2a3b8 <memmove>
   29f90:	80c00217 	ldw	r3,8(r16)
   29f94:	81000017 	ldw	r4,0(r16)
   29f98:	9005883a 	mov	r2,r18
   29f9c:	1ce7c83a 	sub	r19,r3,r19
   29fa0:	25cf883a 	add	r7,r4,r23
   29fa4:	84c00215 	stw	r19,8(r16)
   29fa8:	81c00015 	stw	r7,0(r16)
   29fac:	a0c00217 	ldw	r3,8(r20)
   29fb0:	e0b9883a 	add	fp,fp,r2
   29fb4:	90a5c83a 	sub	r18,r18,r2
   29fb8:	18a7c83a 	sub	r19,r3,r2
   29fbc:	a4c00215 	stw	r19,8(r20)
   29fc0:	983fce26 	beq	r19,zero,29efc <__alt_data_end+0xfffe9efc>
   29fc4:	80c0030b 	ldhu	r3,12(r16)
   29fc8:	903fe61e 	bne	r18,zero,29f64 <__alt_data_end+0xfffe9f64>
   29fcc:	8f000017 	ldw	fp,0(r17)
   29fd0:	8c800117 	ldw	r18,4(r17)
   29fd4:	8c400204 	addi	r17,r17,8
   29fd8:	003fe106 	br	29f60 <__alt_data_end+0xfffe9f60>
   29fdc:	8cc00017 	ldw	r19,0(r17)
   29fe0:	8c800117 	ldw	r18,4(r17)
   29fe4:	8c400204 	addi	r17,r17,8
   29fe8:	003fb306 	br	29eb8 <__alt_data_end+0xfffe9eb8>
   29fec:	0005883a 	mov	r2,zero
   29ff0:	f800283a 	ret
   29ff4:	81000017 	ldw	r4,0(r16)
   29ff8:	80800417 	ldw	r2,16(r16)
   29ffc:	11005736 	bltu	r2,r4,2a15c <__sfvwrite_r+0x314>
   2a000:	85c00517 	ldw	r23,20(r16)
   2a004:	95c05536 	bltu	r18,r23,2a15c <__sfvwrite_r+0x314>
   2a008:	00a00034 	movhi	r2,32768
   2a00c:	10bfffc4 	addi	r2,r2,-1
   2a010:	9009883a 	mov	r4,r18
   2a014:	1480012e 	bgeu	r2,r18,2a01c <__sfvwrite_r+0x1d4>
   2a018:	1009883a 	mov	r4,r2
   2a01c:	b80b883a 	mov	r5,r23
   2a020:	00204680 	call	20468 <__divsi3>
   2a024:	15cf383a 	mul	r7,r2,r23
   2a028:	81400717 	ldw	r5,28(r16)
   2a02c:	80800917 	ldw	r2,36(r16)
   2a030:	e00d883a 	mov	r6,fp
   2a034:	a809883a 	mov	r4,r21
   2a038:	103ee83a 	callr	r2
   2a03c:	00bfdb16 	blt	zero,r2,29fac <__alt_data_end+0xfffe9fac>
   2a040:	8080030b 	ldhu	r2,12(r16)
   2a044:	10801014 	ori	r2,r2,64
   2a048:	8080030d 	sth	r2,12(r16)
   2a04c:	00bfffc4 	movi	r2,-1
   2a050:	003fab06 	br	29f00 <__alt_data_end+0xfffe9f00>
   2a054:	0027883a 	mov	r19,zero
   2a058:	0011883a 	mov	r8,zero
   2a05c:	0039883a 	mov	fp,zero
   2a060:	0025883a 	mov	r18,zero
   2a064:	90001f26 	beq	r18,zero,2a0e4 <__sfvwrite_r+0x29c>
   2a068:	40005a26 	beq	r8,zero,2a1d4 <__sfvwrite_r+0x38c>
   2a06c:	982d883a 	mov	r22,r19
   2a070:	94c0012e 	bgeu	r18,r19,2a078 <__sfvwrite_r+0x230>
   2a074:	902d883a 	mov	r22,r18
   2a078:	81000017 	ldw	r4,0(r16)
   2a07c:	80800417 	ldw	r2,16(r16)
   2a080:	b02f883a 	mov	r23,r22
   2a084:	81c00517 	ldw	r7,20(r16)
   2a088:	1100032e 	bgeu	r2,r4,2a098 <__sfvwrite_r+0x250>
   2a08c:	80c00217 	ldw	r3,8(r16)
   2a090:	38c7883a 	add	r3,r7,r3
   2a094:	1d801816 	blt	r3,r22,2a0f8 <__sfvwrite_r+0x2b0>
   2a098:	b1c03e16 	blt	r22,r7,2a194 <__sfvwrite_r+0x34c>
   2a09c:	80800917 	ldw	r2,36(r16)
   2a0a0:	81400717 	ldw	r5,28(r16)
   2a0a4:	e00d883a 	mov	r6,fp
   2a0a8:	da000115 	stw	r8,4(sp)
   2a0ac:	a809883a 	mov	r4,r21
   2a0b0:	103ee83a 	callr	r2
   2a0b4:	102f883a 	mov	r23,r2
   2a0b8:	da000117 	ldw	r8,4(sp)
   2a0bc:	00bfe00e 	bge	zero,r2,2a040 <__alt_data_end+0xfffea040>
   2a0c0:	9de7c83a 	sub	r19,r19,r23
   2a0c4:	98001f26 	beq	r19,zero,2a144 <__sfvwrite_r+0x2fc>
   2a0c8:	a0800217 	ldw	r2,8(r20)
   2a0cc:	e5f9883a 	add	fp,fp,r23
   2a0d0:	95e5c83a 	sub	r18,r18,r23
   2a0d4:	15efc83a 	sub	r23,r2,r23
   2a0d8:	a5c00215 	stw	r23,8(r20)
   2a0dc:	b83f8726 	beq	r23,zero,29efc <__alt_data_end+0xfffe9efc>
   2a0e0:	903fe11e 	bne	r18,zero,2a068 <__alt_data_end+0xfffea068>
   2a0e4:	8f000017 	ldw	fp,0(r17)
   2a0e8:	8c800117 	ldw	r18,4(r17)
   2a0ec:	0011883a 	mov	r8,zero
   2a0f0:	8c400204 	addi	r17,r17,8
   2a0f4:	003fdb06 	br	2a064 <__alt_data_end+0xfffea064>
   2a0f8:	180d883a 	mov	r6,r3
   2a0fc:	e00b883a 	mov	r5,fp
   2a100:	da000115 	stw	r8,4(sp)
   2a104:	d8c00015 	stw	r3,0(sp)
   2a108:	002a3b80 	call	2a3b8 <memmove>
   2a10c:	d8c00017 	ldw	r3,0(sp)
   2a110:	80800017 	ldw	r2,0(r16)
   2a114:	800b883a 	mov	r5,r16
   2a118:	a809883a 	mov	r4,r21
   2a11c:	10c5883a 	add	r2,r2,r3
   2a120:	80800015 	stw	r2,0(r16)
   2a124:	d8c00015 	stw	r3,0(sp)
   2a128:	00257cc0 	call	257cc <_fflush_r>
   2a12c:	d8c00017 	ldw	r3,0(sp)
   2a130:	da000117 	ldw	r8,4(sp)
   2a134:	103fc21e 	bne	r2,zero,2a040 <__alt_data_end+0xfffea040>
   2a138:	182f883a 	mov	r23,r3
   2a13c:	9de7c83a 	sub	r19,r19,r23
   2a140:	983fe11e 	bne	r19,zero,2a0c8 <__alt_data_end+0xfffea0c8>
   2a144:	800b883a 	mov	r5,r16
   2a148:	a809883a 	mov	r4,r21
   2a14c:	00257cc0 	call	257cc <_fflush_r>
   2a150:	103fbb1e 	bne	r2,zero,2a040 <__alt_data_end+0xfffea040>
   2a154:	0011883a 	mov	r8,zero
   2a158:	003fdb06 	br	2a0c8 <__alt_data_end+0xfffea0c8>
   2a15c:	94c0012e 	bgeu	r18,r19,2a164 <__sfvwrite_r+0x31c>
   2a160:	9027883a 	mov	r19,r18
   2a164:	980d883a 	mov	r6,r19
   2a168:	e00b883a 	mov	r5,fp
   2a16c:	002a3b80 	call	2a3b8 <memmove>
   2a170:	80800217 	ldw	r2,8(r16)
   2a174:	80c00017 	ldw	r3,0(r16)
   2a178:	14c5c83a 	sub	r2,r2,r19
   2a17c:	1cc7883a 	add	r3,r3,r19
   2a180:	80800215 	stw	r2,8(r16)
   2a184:	80c00015 	stw	r3,0(r16)
   2a188:	10004326 	beq	r2,zero,2a298 <__sfvwrite_r+0x450>
   2a18c:	9805883a 	mov	r2,r19
   2a190:	003f8606 	br	29fac <__alt_data_end+0xfffe9fac>
   2a194:	b00d883a 	mov	r6,r22
   2a198:	e00b883a 	mov	r5,fp
   2a19c:	da000115 	stw	r8,4(sp)
   2a1a0:	002a3b80 	call	2a3b8 <memmove>
   2a1a4:	80800217 	ldw	r2,8(r16)
   2a1a8:	80c00017 	ldw	r3,0(r16)
   2a1ac:	da000117 	ldw	r8,4(sp)
   2a1b0:	1585c83a 	sub	r2,r2,r22
   2a1b4:	1dad883a 	add	r22,r3,r22
   2a1b8:	80800215 	stw	r2,8(r16)
   2a1bc:	85800015 	stw	r22,0(r16)
   2a1c0:	003fbf06 	br	2a0c0 <__alt_data_end+0xfffea0c0>
   2a1c4:	81000017 	ldw	r4,0(r16)
   2a1c8:	9027883a 	mov	r19,r18
   2a1cc:	902f883a 	mov	r23,r18
   2a1d0:	003f6c06 	br	29f84 <__alt_data_end+0xfffe9f84>
   2a1d4:	900d883a 	mov	r6,r18
   2a1d8:	01400284 	movi	r5,10
   2a1dc:	e009883a 	mov	r4,fp
   2a1e0:	0026c580 	call	26c58 <memchr>
   2a1e4:	10003e26 	beq	r2,zero,2a2e0 <__sfvwrite_r+0x498>
   2a1e8:	10800044 	addi	r2,r2,1
   2a1ec:	1727c83a 	sub	r19,r2,fp
   2a1f0:	02000044 	movi	r8,1
   2a1f4:	003f9d06 	br	2a06c <__alt_data_end+0xfffea06c>
   2a1f8:	80800517 	ldw	r2,20(r16)
   2a1fc:	81400417 	ldw	r5,16(r16)
   2a200:	81c00017 	ldw	r7,0(r16)
   2a204:	10a7883a 	add	r19,r2,r2
   2a208:	9885883a 	add	r2,r19,r2
   2a20c:	1026d7fa 	srli	r19,r2,31
   2a210:	396dc83a 	sub	r22,r7,r5
   2a214:	b1000044 	addi	r4,r22,1
   2a218:	9885883a 	add	r2,r19,r2
   2a21c:	1027d07a 	srai	r19,r2,1
   2a220:	2485883a 	add	r2,r4,r18
   2a224:	980d883a 	mov	r6,r19
   2a228:	9880022e 	bgeu	r19,r2,2a234 <__sfvwrite_r+0x3ec>
   2a22c:	1027883a 	mov	r19,r2
   2a230:	100d883a 	mov	r6,r2
   2a234:	18c1000c 	andi	r3,r3,1024
   2a238:	18001c26 	beq	r3,zero,2a2ac <__sfvwrite_r+0x464>
   2a23c:	300b883a 	mov	r5,r6
   2a240:	a809883a 	mov	r4,r21
   2a244:	002644c0 	call	2644c <_malloc_r>
   2a248:	102f883a 	mov	r23,r2
   2a24c:	10002926 	beq	r2,zero,2a2f4 <__sfvwrite_r+0x4ac>
   2a250:	81400417 	ldw	r5,16(r16)
   2a254:	b00d883a 	mov	r6,r22
   2a258:	1009883a 	mov	r4,r2
   2a25c:	0026d3c0 	call	26d3c <memcpy>
   2a260:	8080030b 	ldhu	r2,12(r16)
   2a264:	00fedfc4 	movi	r3,-1153
   2a268:	10c4703a 	and	r2,r2,r3
   2a26c:	10802014 	ori	r2,r2,128
   2a270:	8080030d 	sth	r2,12(r16)
   2a274:	bd89883a 	add	r4,r23,r22
   2a278:	9d8fc83a 	sub	r7,r19,r22
   2a27c:	85c00415 	stw	r23,16(r16)
   2a280:	84c00515 	stw	r19,20(r16)
   2a284:	81000015 	stw	r4,0(r16)
   2a288:	9027883a 	mov	r19,r18
   2a28c:	81c00215 	stw	r7,8(r16)
   2a290:	902f883a 	mov	r23,r18
   2a294:	003f3b06 	br	29f84 <__alt_data_end+0xfffe9f84>
   2a298:	800b883a 	mov	r5,r16
   2a29c:	a809883a 	mov	r4,r21
   2a2a0:	00257cc0 	call	257cc <_fflush_r>
   2a2a4:	103fb926 	beq	r2,zero,2a18c <__alt_data_end+0xfffea18c>
   2a2a8:	003f6506 	br	2a040 <__alt_data_end+0xfffea040>
   2a2ac:	a809883a 	mov	r4,r21
   2a2b0:	002a5740 	call	2a574 <_realloc_r>
   2a2b4:	102f883a 	mov	r23,r2
   2a2b8:	103fee1e 	bne	r2,zero,2a274 <__alt_data_end+0xfffea274>
   2a2bc:	81400417 	ldw	r5,16(r16)
   2a2c0:	a809883a 	mov	r4,r21
   2a2c4:	0025d1c0 	call	25d1c <_free_r>
   2a2c8:	8080030b 	ldhu	r2,12(r16)
   2a2cc:	00ffdfc4 	movi	r3,-129
   2a2d0:	1884703a 	and	r2,r3,r2
   2a2d4:	00c00304 	movi	r3,12
   2a2d8:	a8c00015 	stw	r3,0(r21)
   2a2dc:	003f5906 	br	2a044 <__alt_data_end+0xfffea044>
   2a2e0:	94c00044 	addi	r19,r18,1
   2a2e4:	02000044 	movi	r8,1
   2a2e8:	003f6006 	br	2a06c <__alt_data_end+0xfffea06c>
   2a2ec:	00bfffc4 	movi	r2,-1
   2a2f0:	003f0306 	br	29f00 <__alt_data_end+0xfffe9f00>
   2a2f4:	00800304 	movi	r2,12
   2a2f8:	a8800015 	stw	r2,0(r21)
   2a2fc:	8080030b 	ldhu	r2,12(r16)
   2a300:	003f5006 	br	2a044 <__alt_data_end+0xfffea044>

0002a304 <_isatty_r>:
   2a304:	defffd04 	addi	sp,sp,-12
   2a308:	dc000015 	stw	r16,0(sp)
   2a30c:	040000f4 	movhi	r16,3
   2a310:	dc400115 	stw	r17,4(sp)
   2a314:	840b1104 	addi	r16,r16,11332
   2a318:	2023883a 	mov	r17,r4
   2a31c:	2809883a 	mov	r4,r5
   2a320:	dfc00215 	stw	ra,8(sp)
   2a324:	80000015 	stw	zero,0(r16)
   2a328:	002cf140 	call	2cf14 <isatty>
   2a32c:	00ffffc4 	movi	r3,-1
   2a330:	10c00526 	beq	r2,r3,2a348 <_isatty_r+0x44>
   2a334:	dfc00217 	ldw	ra,8(sp)
   2a338:	dc400117 	ldw	r17,4(sp)
   2a33c:	dc000017 	ldw	r16,0(sp)
   2a340:	dec00304 	addi	sp,sp,12
   2a344:	f800283a 	ret
   2a348:	80c00017 	ldw	r3,0(r16)
   2a34c:	183ff926 	beq	r3,zero,2a334 <__alt_data_end+0xfffea334>
   2a350:	88c00015 	stw	r3,0(r17)
   2a354:	003ff706 	br	2a334 <__alt_data_end+0xfffea334>

0002a358 <_lseek_r>:
   2a358:	defffd04 	addi	sp,sp,-12
   2a35c:	2805883a 	mov	r2,r5
   2a360:	dc000015 	stw	r16,0(sp)
   2a364:	040000f4 	movhi	r16,3
   2a368:	dc400115 	stw	r17,4(sp)
   2a36c:	300b883a 	mov	r5,r6
   2a370:	840b1104 	addi	r16,r16,11332
   2a374:	2023883a 	mov	r17,r4
   2a378:	380d883a 	mov	r6,r7
   2a37c:	1009883a 	mov	r4,r2
   2a380:	dfc00215 	stw	ra,8(sp)
   2a384:	80000015 	stw	zero,0(r16)
   2a388:	002d0e00 	call	2d0e0 <lseek>
   2a38c:	00ffffc4 	movi	r3,-1
   2a390:	10c00526 	beq	r2,r3,2a3a8 <_lseek_r+0x50>
   2a394:	dfc00217 	ldw	ra,8(sp)
   2a398:	dc400117 	ldw	r17,4(sp)
   2a39c:	dc000017 	ldw	r16,0(sp)
   2a3a0:	dec00304 	addi	sp,sp,12
   2a3a4:	f800283a 	ret
   2a3a8:	80c00017 	ldw	r3,0(r16)
   2a3ac:	183ff926 	beq	r3,zero,2a394 <__alt_data_end+0xfffea394>
   2a3b0:	88c00015 	stw	r3,0(r17)
   2a3b4:	003ff706 	br	2a394 <__alt_data_end+0xfffea394>

0002a3b8 <memmove>:
   2a3b8:	2005883a 	mov	r2,r4
   2a3bc:	29000b2e 	bgeu	r5,r4,2a3ec <memmove+0x34>
   2a3c0:	298f883a 	add	r7,r5,r6
   2a3c4:	21c0092e 	bgeu	r4,r7,2a3ec <memmove+0x34>
   2a3c8:	2187883a 	add	r3,r4,r6
   2a3cc:	198bc83a 	sub	r5,r3,r6
   2a3d0:	30004826 	beq	r6,zero,2a4f4 <memmove+0x13c>
   2a3d4:	39ffffc4 	addi	r7,r7,-1
   2a3d8:	39000003 	ldbu	r4,0(r7)
   2a3dc:	18ffffc4 	addi	r3,r3,-1
   2a3e0:	19000005 	stb	r4,0(r3)
   2a3e4:	28fffb1e 	bne	r5,r3,2a3d4 <__alt_data_end+0xfffea3d4>
   2a3e8:	f800283a 	ret
   2a3ec:	00c003c4 	movi	r3,15
   2a3f0:	1980412e 	bgeu	r3,r6,2a4f8 <memmove+0x140>
   2a3f4:	2886b03a 	or	r3,r5,r2
   2a3f8:	18c000cc 	andi	r3,r3,3
   2a3fc:	1800401e 	bne	r3,zero,2a500 <memmove+0x148>
   2a400:	33fffc04 	addi	r15,r6,-16
   2a404:	781ed13a 	srli	r15,r15,4
   2a408:	28c00104 	addi	r3,r5,4
   2a40c:	13400104 	addi	r13,r2,4
   2a410:	781c913a 	slli	r14,r15,4
   2a414:	2b000204 	addi	r12,r5,8
   2a418:	12c00204 	addi	r11,r2,8
   2a41c:	73800504 	addi	r14,r14,20
   2a420:	2a800304 	addi	r10,r5,12
   2a424:	12400304 	addi	r9,r2,12
   2a428:	2b9d883a 	add	r14,r5,r14
   2a42c:	2811883a 	mov	r8,r5
   2a430:	100f883a 	mov	r7,r2
   2a434:	41000017 	ldw	r4,0(r8)
   2a438:	39c00404 	addi	r7,r7,16
   2a43c:	18c00404 	addi	r3,r3,16
   2a440:	393ffc15 	stw	r4,-16(r7)
   2a444:	193ffc17 	ldw	r4,-16(r3)
   2a448:	6b400404 	addi	r13,r13,16
   2a44c:	5ac00404 	addi	r11,r11,16
   2a450:	693ffc15 	stw	r4,-16(r13)
   2a454:	61000017 	ldw	r4,0(r12)
   2a458:	4a400404 	addi	r9,r9,16
   2a45c:	42000404 	addi	r8,r8,16
   2a460:	593ffc15 	stw	r4,-16(r11)
   2a464:	51000017 	ldw	r4,0(r10)
   2a468:	63000404 	addi	r12,r12,16
   2a46c:	52800404 	addi	r10,r10,16
   2a470:	493ffc15 	stw	r4,-16(r9)
   2a474:	1bbfef1e 	bne	r3,r14,2a434 <__alt_data_end+0xfffea434>
   2a478:	79000044 	addi	r4,r15,1
   2a47c:	2008913a 	slli	r4,r4,4
   2a480:	328003cc 	andi	r10,r6,15
   2a484:	02c000c4 	movi	r11,3
   2a488:	1107883a 	add	r3,r2,r4
   2a48c:	290b883a 	add	r5,r5,r4
   2a490:	5a801e2e 	bgeu	r11,r10,2a50c <memmove+0x154>
   2a494:	1813883a 	mov	r9,r3
   2a498:	2811883a 	mov	r8,r5
   2a49c:	500f883a 	mov	r7,r10
   2a4a0:	41000017 	ldw	r4,0(r8)
   2a4a4:	4a400104 	addi	r9,r9,4
   2a4a8:	39ffff04 	addi	r7,r7,-4
   2a4ac:	493fff15 	stw	r4,-4(r9)
   2a4b0:	42000104 	addi	r8,r8,4
   2a4b4:	59fffa36 	bltu	r11,r7,2a4a0 <__alt_data_end+0xfffea4a0>
   2a4b8:	513fff04 	addi	r4,r10,-4
   2a4bc:	2008d0ba 	srli	r4,r4,2
   2a4c0:	318000cc 	andi	r6,r6,3
   2a4c4:	21000044 	addi	r4,r4,1
   2a4c8:	2109883a 	add	r4,r4,r4
   2a4cc:	2109883a 	add	r4,r4,r4
   2a4d0:	1907883a 	add	r3,r3,r4
   2a4d4:	290b883a 	add	r5,r5,r4
   2a4d8:	30000b26 	beq	r6,zero,2a508 <memmove+0x150>
   2a4dc:	198d883a 	add	r6,r3,r6
   2a4e0:	29c00003 	ldbu	r7,0(r5)
   2a4e4:	18c00044 	addi	r3,r3,1
   2a4e8:	29400044 	addi	r5,r5,1
   2a4ec:	19ffffc5 	stb	r7,-1(r3)
   2a4f0:	19bffb1e 	bne	r3,r6,2a4e0 <__alt_data_end+0xfffea4e0>
   2a4f4:	f800283a 	ret
   2a4f8:	1007883a 	mov	r3,r2
   2a4fc:	003ff606 	br	2a4d8 <__alt_data_end+0xfffea4d8>
   2a500:	1007883a 	mov	r3,r2
   2a504:	003ff506 	br	2a4dc <__alt_data_end+0xfffea4dc>
   2a508:	f800283a 	ret
   2a50c:	500d883a 	mov	r6,r10
   2a510:	003ff106 	br	2a4d8 <__alt_data_end+0xfffea4d8>

0002a514 <_read_r>:
   2a514:	defffd04 	addi	sp,sp,-12
   2a518:	2805883a 	mov	r2,r5
   2a51c:	dc000015 	stw	r16,0(sp)
   2a520:	040000f4 	movhi	r16,3
   2a524:	dc400115 	stw	r17,4(sp)
   2a528:	300b883a 	mov	r5,r6
   2a52c:	840b1104 	addi	r16,r16,11332
   2a530:	2023883a 	mov	r17,r4
   2a534:	380d883a 	mov	r6,r7
   2a538:	1009883a 	mov	r4,r2
   2a53c:	dfc00215 	stw	ra,8(sp)
   2a540:	80000015 	stw	zero,0(r16)
   2a544:	002d2b40 	call	2d2b4 <read>
   2a548:	00ffffc4 	movi	r3,-1
   2a54c:	10c00526 	beq	r2,r3,2a564 <_read_r+0x50>
   2a550:	dfc00217 	ldw	ra,8(sp)
   2a554:	dc400117 	ldw	r17,4(sp)
   2a558:	dc000017 	ldw	r16,0(sp)
   2a55c:	dec00304 	addi	sp,sp,12
   2a560:	f800283a 	ret
   2a564:	80c00017 	ldw	r3,0(r16)
   2a568:	183ff926 	beq	r3,zero,2a550 <__alt_data_end+0xfffea550>
   2a56c:	88c00015 	stw	r3,0(r17)
   2a570:	003ff706 	br	2a550 <__alt_data_end+0xfffea550>

0002a574 <_realloc_r>:
   2a574:	defff604 	addi	sp,sp,-40
   2a578:	dc800215 	stw	r18,8(sp)
   2a57c:	dfc00915 	stw	ra,36(sp)
   2a580:	df000815 	stw	fp,32(sp)
   2a584:	ddc00715 	stw	r23,28(sp)
   2a588:	dd800615 	stw	r22,24(sp)
   2a58c:	dd400515 	stw	r21,20(sp)
   2a590:	dd000415 	stw	r20,16(sp)
   2a594:	dcc00315 	stw	r19,12(sp)
   2a598:	dc400115 	stw	r17,4(sp)
   2a59c:	dc000015 	stw	r16,0(sp)
   2a5a0:	3025883a 	mov	r18,r6
   2a5a4:	2800b726 	beq	r5,zero,2a884 <_realloc_r+0x310>
   2a5a8:	282b883a 	mov	r21,r5
   2a5ac:	2029883a 	mov	r20,r4
   2a5b0:	002d2300 	call	2d230 <__malloc_lock>
   2a5b4:	a8bfff17 	ldw	r2,-4(r21)
   2a5b8:	043fff04 	movi	r16,-4
   2a5bc:	90c002c4 	addi	r3,r18,11
   2a5c0:	01000584 	movi	r4,22
   2a5c4:	acfffe04 	addi	r19,r21,-8
   2a5c8:	1420703a 	and	r16,r2,r16
   2a5cc:	20c0332e 	bgeu	r4,r3,2a69c <_realloc_r+0x128>
   2a5d0:	047ffe04 	movi	r17,-8
   2a5d4:	1c62703a 	and	r17,r3,r17
   2a5d8:	8807883a 	mov	r3,r17
   2a5dc:	88005816 	blt	r17,zero,2a740 <_realloc_r+0x1cc>
   2a5e0:	8c805736 	bltu	r17,r18,2a740 <_realloc_r+0x1cc>
   2a5e4:	80c0300e 	bge	r16,r3,2a6a8 <_realloc_r+0x134>
   2a5e8:	070000f4 	movhi	fp,3
   2a5ec:	e73ebc04 	addi	fp,fp,-1296
   2a5f0:	e1c00217 	ldw	r7,8(fp)
   2a5f4:	9c09883a 	add	r4,r19,r16
   2a5f8:	22000117 	ldw	r8,4(r4)
   2a5fc:	21c06326 	beq	r4,r7,2a78c <_realloc_r+0x218>
   2a600:	017fff84 	movi	r5,-2
   2a604:	414a703a 	and	r5,r8,r5
   2a608:	214b883a 	add	r5,r4,r5
   2a60c:	29800117 	ldw	r6,4(r5)
   2a610:	3180004c 	andi	r6,r6,1
   2a614:	30003f26 	beq	r6,zero,2a714 <_realloc_r+0x1a0>
   2a618:	1080004c 	andi	r2,r2,1
   2a61c:	10008326 	beq	r2,zero,2a82c <_realloc_r+0x2b8>
   2a620:	900b883a 	mov	r5,r18
   2a624:	a009883a 	mov	r4,r20
   2a628:	002644c0 	call	2644c <_malloc_r>
   2a62c:	1025883a 	mov	r18,r2
   2a630:	10011e26 	beq	r2,zero,2aaac <_realloc_r+0x538>
   2a634:	a93fff17 	ldw	r4,-4(r21)
   2a638:	10fffe04 	addi	r3,r2,-8
   2a63c:	00bfff84 	movi	r2,-2
   2a640:	2084703a 	and	r2,r4,r2
   2a644:	9885883a 	add	r2,r19,r2
   2a648:	1880ee26 	beq	r3,r2,2aa04 <_realloc_r+0x490>
   2a64c:	81bfff04 	addi	r6,r16,-4
   2a650:	00800904 	movi	r2,36
   2a654:	1180b836 	bltu	r2,r6,2a938 <_realloc_r+0x3c4>
   2a658:	00c004c4 	movi	r3,19
   2a65c:	19809636 	bltu	r3,r6,2a8b8 <_realloc_r+0x344>
   2a660:	9005883a 	mov	r2,r18
   2a664:	a807883a 	mov	r3,r21
   2a668:	19000017 	ldw	r4,0(r3)
   2a66c:	11000015 	stw	r4,0(r2)
   2a670:	19000117 	ldw	r4,4(r3)
   2a674:	11000115 	stw	r4,4(r2)
   2a678:	18c00217 	ldw	r3,8(r3)
   2a67c:	10c00215 	stw	r3,8(r2)
   2a680:	a80b883a 	mov	r5,r21
   2a684:	a009883a 	mov	r4,r20
   2a688:	0025d1c0 	call	25d1c <_free_r>
   2a68c:	a009883a 	mov	r4,r20
   2a690:	002d2540 	call	2d254 <__malloc_unlock>
   2a694:	9005883a 	mov	r2,r18
   2a698:	00001206 	br	2a6e4 <_realloc_r+0x170>
   2a69c:	00c00404 	movi	r3,16
   2a6a0:	1823883a 	mov	r17,r3
   2a6a4:	003fce06 	br	2a5e0 <__alt_data_end+0xfffea5e0>
   2a6a8:	a825883a 	mov	r18,r21
   2a6ac:	8445c83a 	sub	r2,r16,r17
   2a6b0:	00c003c4 	movi	r3,15
   2a6b4:	18802636 	bltu	r3,r2,2a750 <_realloc_r+0x1dc>
   2a6b8:	99800117 	ldw	r6,4(r19)
   2a6bc:	9c07883a 	add	r3,r19,r16
   2a6c0:	3180004c 	andi	r6,r6,1
   2a6c4:	3420b03a 	or	r16,r6,r16
   2a6c8:	9c000115 	stw	r16,4(r19)
   2a6cc:	18800117 	ldw	r2,4(r3)
   2a6d0:	10800054 	ori	r2,r2,1
   2a6d4:	18800115 	stw	r2,4(r3)
   2a6d8:	a009883a 	mov	r4,r20
   2a6dc:	002d2540 	call	2d254 <__malloc_unlock>
   2a6e0:	9005883a 	mov	r2,r18
   2a6e4:	dfc00917 	ldw	ra,36(sp)
   2a6e8:	df000817 	ldw	fp,32(sp)
   2a6ec:	ddc00717 	ldw	r23,28(sp)
   2a6f0:	dd800617 	ldw	r22,24(sp)
   2a6f4:	dd400517 	ldw	r21,20(sp)
   2a6f8:	dd000417 	ldw	r20,16(sp)
   2a6fc:	dcc00317 	ldw	r19,12(sp)
   2a700:	dc800217 	ldw	r18,8(sp)
   2a704:	dc400117 	ldw	r17,4(sp)
   2a708:	dc000017 	ldw	r16,0(sp)
   2a70c:	dec00a04 	addi	sp,sp,40
   2a710:	f800283a 	ret
   2a714:	017fff04 	movi	r5,-4
   2a718:	414a703a 	and	r5,r8,r5
   2a71c:	814d883a 	add	r6,r16,r5
   2a720:	30c01f16 	blt	r6,r3,2a7a0 <_realloc_r+0x22c>
   2a724:	20800317 	ldw	r2,12(r4)
   2a728:	20c00217 	ldw	r3,8(r4)
   2a72c:	a825883a 	mov	r18,r21
   2a730:	3021883a 	mov	r16,r6
   2a734:	18800315 	stw	r2,12(r3)
   2a738:	10c00215 	stw	r3,8(r2)
   2a73c:	003fdb06 	br	2a6ac <__alt_data_end+0xfffea6ac>
   2a740:	00800304 	movi	r2,12
   2a744:	a0800015 	stw	r2,0(r20)
   2a748:	0005883a 	mov	r2,zero
   2a74c:	003fe506 	br	2a6e4 <__alt_data_end+0xfffea6e4>
   2a750:	98c00117 	ldw	r3,4(r19)
   2a754:	9c4b883a 	add	r5,r19,r17
   2a758:	11000054 	ori	r4,r2,1
   2a75c:	18c0004c 	andi	r3,r3,1
   2a760:	1c62b03a 	or	r17,r3,r17
   2a764:	9c400115 	stw	r17,4(r19)
   2a768:	29000115 	stw	r4,4(r5)
   2a76c:	2885883a 	add	r2,r5,r2
   2a770:	10c00117 	ldw	r3,4(r2)
   2a774:	29400204 	addi	r5,r5,8
   2a778:	a009883a 	mov	r4,r20
   2a77c:	18c00054 	ori	r3,r3,1
   2a780:	10c00115 	stw	r3,4(r2)
   2a784:	0025d1c0 	call	25d1c <_free_r>
   2a788:	003fd306 	br	2a6d8 <__alt_data_end+0xfffea6d8>
   2a78c:	017fff04 	movi	r5,-4
   2a790:	414a703a 	and	r5,r8,r5
   2a794:	89800404 	addi	r6,r17,16
   2a798:	8151883a 	add	r8,r16,r5
   2a79c:	4180590e 	bge	r8,r6,2a904 <_realloc_r+0x390>
   2a7a0:	1080004c 	andi	r2,r2,1
   2a7a4:	103f9e1e 	bne	r2,zero,2a620 <__alt_data_end+0xfffea620>
   2a7a8:	adbffe17 	ldw	r22,-8(r21)
   2a7ac:	00bfff04 	movi	r2,-4
   2a7b0:	9dadc83a 	sub	r22,r19,r22
   2a7b4:	b1800117 	ldw	r6,4(r22)
   2a7b8:	3084703a 	and	r2,r6,r2
   2a7bc:	20002026 	beq	r4,zero,2a840 <_realloc_r+0x2cc>
   2a7c0:	80af883a 	add	r23,r16,r2
   2a7c4:	b96f883a 	add	r23,r23,r5
   2a7c8:	21c05f26 	beq	r4,r7,2a948 <_realloc_r+0x3d4>
   2a7cc:	b8c01c16 	blt	r23,r3,2a840 <_realloc_r+0x2cc>
   2a7d0:	20800317 	ldw	r2,12(r4)
   2a7d4:	20c00217 	ldw	r3,8(r4)
   2a7d8:	81bfff04 	addi	r6,r16,-4
   2a7dc:	01000904 	movi	r4,36
   2a7e0:	18800315 	stw	r2,12(r3)
   2a7e4:	10c00215 	stw	r3,8(r2)
   2a7e8:	b0c00217 	ldw	r3,8(r22)
   2a7ec:	b0800317 	ldw	r2,12(r22)
   2a7f0:	b4800204 	addi	r18,r22,8
   2a7f4:	18800315 	stw	r2,12(r3)
   2a7f8:	10c00215 	stw	r3,8(r2)
   2a7fc:	21801b36 	bltu	r4,r6,2a86c <_realloc_r+0x2f8>
   2a800:	008004c4 	movi	r2,19
   2a804:	1180352e 	bgeu	r2,r6,2a8dc <_realloc_r+0x368>
   2a808:	a8800017 	ldw	r2,0(r21)
   2a80c:	b0800215 	stw	r2,8(r22)
   2a810:	a8800117 	ldw	r2,4(r21)
   2a814:	b0800315 	stw	r2,12(r22)
   2a818:	008006c4 	movi	r2,27
   2a81c:	11807f36 	bltu	r2,r6,2aa1c <_realloc_r+0x4a8>
   2a820:	b0800404 	addi	r2,r22,16
   2a824:	ad400204 	addi	r21,r21,8
   2a828:	00002d06 	br	2a8e0 <_realloc_r+0x36c>
   2a82c:	adbffe17 	ldw	r22,-8(r21)
   2a830:	00bfff04 	movi	r2,-4
   2a834:	9dadc83a 	sub	r22,r19,r22
   2a838:	b1000117 	ldw	r4,4(r22)
   2a83c:	2084703a 	and	r2,r4,r2
   2a840:	b03f7726 	beq	r22,zero,2a620 <__alt_data_end+0xfffea620>
   2a844:	80af883a 	add	r23,r16,r2
   2a848:	b8ff7516 	blt	r23,r3,2a620 <__alt_data_end+0xfffea620>
   2a84c:	b0800317 	ldw	r2,12(r22)
   2a850:	b0c00217 	ldw	r3,8(r22)
   2a854:	81bfff04 	addi	r6,r16,-4
   2a858:	01000904 	movi	r4,36
   2a85c:	18800315 	stw	r2,12(r3)
   2a860:	10c00215 	stw	r3,8(r2)
   2a864:	b4800204 	addi	r18,r22,8
   2a868:	21bfe52e 	bgeu	r4,r6,2a800 <__alt_data_end+0xfffea800>
   2a86c:	a80b883a 	mov	r5,r21
   2a870:	9009883a 	mov	r4,r18
   2a874:	002a3b80 	call	2a3b8 <memmove>
   2a878:	b821883a 	mov	r16,r23
   2a87c:	b027883a 	mov	r19,r22
   2a880:	003f8a06 	br	2a6ac <__alt_data_end+0xfffea6ac>
   2a884:	300b883a 	mov	r5,r6
   2a888:	dfc00917 	ldw	ra,36(sp)
   2a88c:	df000817 	ldw	fp,32(sp)
   2a890:	ddc00717 	ldw	r23,28(sp)
   2a894:	dd800617 	ldw	r22,24(sp)
   2a898:	dd400517 	ldw	r21,20(sp)
   2a89c:	dd000417 	ldw	r20,16(sp)
   2a8a0:	dcc00317 	ldw	r19,12(sp)
   2a8a4:	dc800217 	ldw	r18,8(sp)
   2a8a8:	dc400117 	ldw	r17,4(sp)
   2a8ac:	dc000017 	ldw	r16,0(sp)
   2a8b0:	dec00a04 	addi	sp,sp,40
   2a8b4:	002644c1 	jmpi	2644c <_malloc_r>
   2a8b8:	a8c00017 	ldw	r3,0(r21)
   2a8bc:	90c00015 	stw	r3,0(r18)
   2a8c0:	a8c00117 	ldw	r3,4(r21)
   2a8c4:	90c00115 	stw	r3,4(r18)
   2a8c8:	00c006c4 	movi	r3,27
   2a8cc:	19804536 	bltu	r3,r6,2a9e4 <_realloc_r+0x470>
   2a8d0:	90800204 	addi	r2,r18,8
   2a8d4:	a8c00204 	addi	r3,r21,8
   2a8d8:	003f6306 	br	2a668 <__alt_data_end+0xfffea668>
   2a8dc:	9005883a 	mov	r2,r18
   2a8e0:	a8c00017 	ldw	r3,0(r21)
   2a8e4:	b821883a 	mov	r16,r23
   2a8e8:	b027883a 	mov	r19,r22
   2a8ec:	10c00015 	stw	r3,0(r2)
   2a8f0:	a8c00117 	ldw	r3,4(r21)
   2a8f4:	10c00115 	stw	r3,4(r2)
   2a8f8:	a8c00217 	ldw	r3,8(r21)
   2a8fc:	10c00215 	stw	r3,8(r2)
   2a900:	003f6a06 	br	2a6ac <__alt_data_end+0xfffea6ac>
   2a904:	9c67883a 	add	r19,r19,r17
   2a908:	4445c83a 	sub	r2,r8,r17
   2a90c:	e4c00215 	stw	r19,8(fp)
   2a910:	10800054 	ori	r2,r2,1
   2a914:	98800115 	stw	r2,4(r19)
   2a918:	a8bfff17 	ldw	r2,-4(r21)
   2a91c:	a009883a 	mov	r4,r20
   2a920:	1080004c 	andi	r2,r2,1
   2a924:	1462b03a 	or	r17,r2,r17
   2a928:	ac7fff15 	stw	r17,-4(r21)
   2a92c:	002d2540 	call	2d254 <__malloc_unlock>
   2a930:	a805883a 	mov	r2,r21
   2a934:	003f6b06 	br	2a6e4 <__alt_data_end+0xfffea6e4>
   2a938:	a80b883a 	mov	r5,r21
   2a93c:	9009883a 	mov	r4,r18
   2a940:	002a3b80 	call	2a3b8 <memmove>
   2a944:	003f4e06 	br	2a680 <__alt_data_end+0xfffea680>
   2a948:	89000404 	addi	r4,r17,16
   2a94c:	b93fbc16 	blt	r23,r4,2a840 <__alt_data_end+0xfffea840>
   2a950:	b0800317 	ldw	r2,12(r22)
   2a954:	b0c00217 	ldw	r3,8(r22)
   2a958:	81bfff04 	addi	r6,r16,-4
   2a95c:	01000904 	movi	r4,36
   2a960:	18800315 	stw	r2,12(r3)
   2a964:	10c00215 	stw	r3,8(r2)
   2a968:	b4800204 	addi	r18,r22,8
   2a96c:	21804336 	bltu	r4,r6,2aa7c <_realloc_r+0x508>
   2a970:	008004c4 	movi	r2,19
   2a974:	11803f2e 	bgeu	r2,r6,2aa74 <_realloc_r+0x500>
   2a978:	a8800017 	ldw	r2,0(r21)
   2a97c:	b0800215 	stw	r2,8(r22)
   2a980:	a8800117 	ldw	r2,4(r21)
   2a984:	b0800315 	stw	r2,12(r22)
   2a988:	008006c4 	movi	r2,27
   2a98c:	11803f36 	bltu	r2,r6,2aa8c <_realloc_r+0x518>
   2a990:	b0800404 	addi	r2,r22,16
   2a994:	ad400204 	addi	r21,r21,8
   2a998:	a8c00017 	ldw	r3,0(r21)
   2a99c:	10c00015 	stw	r3,0(r2)
   2a9a0:	a8c00117 	ldw	r3,4(r21)
   2a9a4:	10c00115 	stw	r3,4(r2)
   2a9a8:	a8c00217 	ldw	r3,8(r21)
   2a9ac:	10c00215 	stw	r3,8(r2)
   2a9b0:	b447883a 	add	r3,r22,r17
   2a9b4:	bc45c83a 	sub	r2,r23,r17
   2a9b8:	e0c00215 	stw	r3,8(fp)
   2a9bc:	10800054 	ori	r2,r2,1
   2a9c0:	18800115 	stw	r2,4(r3)
   2a9c4:	b0800117 	ldw	r2,4(r22)
   2a9c8:	a009883a 	mov	r4,r20
   2a9cc:	1080004c 	andi	r2,r2,1
   2a9d0:	1462b03a 	or	r17,r2,r17
   2a9d4:	b4400115 	stw	r17,4(r22)
   2a9d8:	002d2540 	call	2d254 <__malloc_unlock>
   2a9dc:	9005883a 	mov	r2,r18
   2a9e0:	003f4006 	br	2a6e4 <__alt_data_end+0xfffea6e4>
   2a9e4:	a8c00217 	ldw	r3,8(r21)
   2a9e8:	90c00215 	stw	r3,8(r18)
   2a9ec:	a8c00317 	ldw	r3,12(r21)
   2a9f0:	90c00315 	stw	r3,12(r18)
   2a9f4:	30801126 	beq	r6,r2,2aa3c <_realloc_r+0x4c8>
   2a9f8:	90800404 	addi	r2,r18,16
   2a9fc:	a8c00404 	addi	r3,r21,16
   2aa00:	003f1906 	br	2a668 <__alt_data_end+0xfffea668>
   2aa04:	90ffff17 	ldw	r3,-4(r18)
   2aa08:	00bfff04 	movi	r2,-4
   2aa0c:	a825883a 	mov	r18,r21
   2aa10:	1884703a 	and	r2,r3,r2
   2aa14:	80a1883a 	add	r16,r16,r2
   2aa18:	003f2406 	br	2a6ac <__alt_data_end+0xfffea6ac>
   2aa1c:	a8800217 	ldw	r2,8(r21)
   2aa20:	b0800415 	stw	r2,16(r22)
   2aa24:	a8800317 	ldw	r2,12(r21)
   2aa28:	b0800515 	stw	r2,20(r22)
   2aa2c:	31000a26 	beq	r6,r4,2aa58 <_realloc_r+0x4e4>
   2aa30:	b0800604 	addi	r2,r22,24
   2aa34:	ad400404 	addi	r21,r21,16
   2aa38:	003fa906 	br	2a8e0 <__alt_data_end+0xfffea8e0>
   2aa3c:	a9000417 	ldw	r4,16(r21)
   2aa40:	90800604 	addi	r2,r18,24
   2aa44:	a8c00604 	addi	r3,r21,24
   2aa48:	91000415 	stw	r4,16(r18)
   2aa4c:	a9000517 	ldw	r4,20(r21)
   2aa50:	91000515 	stw	r4,20(r18)
   2aa54:	003f0406 	br	2a668 <__alt_data_end+0xfffea668>
   2aa58:	a8c00417 	ldw	r3,16(r21)
   2aa5c:	ad400604 	addi	r21,r21,24
   2aa60:	b0800804 	addi	r2,r22,32
   2aa64:	b0c00615 	stw	r3,24(r22)
   2aa68:	a8ffff17 	ldw	r3,-4(r21)
   2aa6c:	b0c00715 	stw	r3,28(r22)
   2aa70:	003f9b06 	br	2a8e0 <__alt_data_end+0xfffea8e0>
   2aa74:	9005883a 	mov	r2,r18
   2aa78:	003fc706 	br	2a998 <__alt_data_end+0xfffea998>
   2aa7c:	a80b883a 	mov	r5,r21
   2aa80:	9009883a 	mov	r4,r18
   2aa84:	002a3b80 	call	2a3b8 <memmove>
   2aa88:	003fc906 	br	2a9b0 <__alt_data_end+0xfffea9b0>
   2aa8c:	a8800217 	ldw	r2,8(r21)
   2aa90:	b0800415 	stw	r2,16(r22)
   2aa94:	a8800317 	ldw	r2,12(r21)
   2aa98:	b0800515 	stw	r2,20(r22)
   2aa9c:	31000726 	beq	r6,r4,2aabc <_realloc_r+0x548>
   2aaa0:	b0800604 	addi	r2,r22,24
   2aaa4:	ad400404 	addi	r21,r21,16
   2aaa8:	003fbb06 	br	2a998 <__alt_data_end+0xfffea998>
   2aaac:	a009883a 	mov	r4,r20
   2aab0:	002d2540 	call	2d254 <__malloc_unlock>
   2aab4:	0005883a 	mov	r2,zero
   2aab8:	003f0a06 	br	2a6e4 <__alt_data_end+0xfffea6e4>
   2aabc:	a8c00417 	ldw	r3,16(r21)
   2aac0:	ad400604 	addi	r21,r21,24
   2aac4:	b0800804 	addi	r2,r22,32
   2aac8:	b0c00615 	stw	r3,24(r22)
   2aacc:	a8ffff17 	ldw	r3,-4(r21)
   2aad0:	b0c00715 	stw	r3,28(r22)
   2aad4:	003fb006 	br	2a998 <__alt_data_end+0xfffea998>

0002aad8 <__swbuf_r>:
   2aad8:	defffb04 	addi	sp,sp,-20
   2aadc:	dcc00315 	stw	r19,12(sp)
   2aae0:	dc800215 	stw	r18,8(sp)
   2aae4:	dc000015 	stw	r16,0(sp)
   2aae8:	dfc00415 	stw	ra,16(sp)
   2aaec:	dc400115 	stw	r17,4(sp)
   2aaf0:	2025883a 	mov	r18,r4
   2aaf4:	2827883a 	mov	r19,r5
   2aaf8:	3021883a 	mov	r16,r6
   2aafc:	20000226 	beq	r4,zero,2ab08 <__swbuf_r+0x30>
   2ab00:	20800e17 	ldw	r2,56(r4)
   2ab04:	10004226 	beq	r2,zero,2ac10 <__swbuf_r+0x138>
   2ab08:	80800617 	ldw	r2,24(r16)
   2ab0c:	8100030b 	ldhu	r4,12(r16)
   2ab10:	80800215 	stw	r2,8(r16)
   2ab14:	2080020c 	andi	r2,r4,8
   2ab18:	10003626 	beq	r2,zero,2abf4 <__swbuf_r+0x11c>
   2ab1c:	80c00417 	ldw	r3,16(r16)
   2ab20:	18003426 	beq	r3,zero,2abf4 <__swbuf_r+0x11c>
   2ab24:	2088000c 	andi	r2,r4,8192
   2ab28:	9c403fcc 	andi	r17,r19,255
   2ab2c:	10001a26 	beq	r2,zero,2ab98 <__swbuf_r+0xc0>
   2ab30:	80800017 	ldw	r2,0(r16)
   2ab34:	81000517 	ldw	r4,20(r16)
   2ab38:	10c7c83a 	sub	r3,r2,r3
   2ab3c:	1900200e 	bge	r3,r4,2abc0 <__swbuf_r+0xe8>
   2ab40:	18c00044 	addi	r3,r3,1
   2ab44:	81000217 	ldw	r4,8(r16)
   2ab48:	11400044 	addi	r5,r2,1
   2ab4c:	81400015 	stw	r5,0(r16)
   2ab50:	213fffc4 	addi	r4,r4,-1
   2ab54:	81000215 	stw	r4,8(r16)
   2ab58:	14c00005 	stb	r19,0(r2)
   2ab5c:	80800517 	ldw	r2,20(r16)
   2ab60:	10c01e26 	beq	r2,r3,2abdc <__swbuf_r+0x104>
   2ab64:	8080030b 	ldhu	r2,12(r16)
   2ab68:	1080004c 	andi	r2,r2,1
   2ab6c:	10000226 	beq	r2,zero,2ab78 <__swbuf_r+0xa0>
   2ab70:	00800284 	movi	r2,10
   2ab74:	88801926 	beq	r17,r2,2abdc <__swbuf_r+0x104>
   2ab78:	8805883a 	mov	r2,r17
   2ab7c:	dfc00417 	ldw	ra,16(sp)
   2ab80:	dcc00317 	ldw	r19,12(sp)
   2ab84:	dc800217 	ldw	r18,8(sp)
   2ab88:	dc400117 	ldw	r17,4(sp)
   2ab8c:	dc000017 	ldw	r16,0(sp)
   2ab90:	dec00504 	addi	sp,sp,20
   2ab94:	f800283a 	ret
   2ab98:	81401917 	ldw	r5,100(r16)
   2ab9c:	00b7ffc4 	movi	r2,-8193
   2aba0:	21080014 	ori	r4,r4,8192
   2aba4:	2884703a 	and	r2,r5,r2
   2aba8:	80801915 	stw	r2,100(r16)
   2abac:	80800017 	ldw	r2,0(r16)
   2abb0:	8100030d 	sth	r4,12(r16)
   2abb4:	81000517 	ldw	r4,20(r16)
   2abb8:	10c7c83a 	sub	r3,r2,r3
   2abbc:	193fe016 	blt	r3,r4,2ab40 <__alt_data_end+0xfffeab40>
   2abc0:	800b883a 	mov	r5,r16
   2abc4:	9009883a 	mov	r4,r18
   2abc8:	00257cc0 	call	257cc <_fflush_r>
   2abcc:	1000071e 	bne	r2,zero,2abec <__swbuf_r+0x114>
   2abd0:	80800017 	ldw	r2,0(r16)
   2abd4:	00c00044 	movi	r3,1
   2abd8:	003fda06 	br	2ab44 <__alt_data_end+0xfffeab44>
   2abdc:	800b883a 	mov	r5,r16
   2abe0:	9009883a 	mov	r4,r18
   2abe4:	00257cc0 	call	257cc <_fflush_r>
   2abe8:	103fe326 	beq	r2,zero,2ab78 <__alt_data_end+0xfffeab78>
   2abec:	00bfffc4 	movi	r2,-1
   2abf0:	003fe206 	br	2ab7c <__alt_data_end+0xfffeab7c>
   2abf4:	800b883a 	mov	r5,r16
   2abf8:	9009883a 	mov	r4,r18
   2abfc:	0023bd40 	call	23bd4 <__swsetup_r>
   2ac00:	103ffa1e 	bne	r2,zero,2abec <__alt_data_end+0xfffeabec>
   2ac04:	8100030b 	ldhu	r4,12(r16)
   2ac08:	80c00417 	ldw	r3,16(r16)
   2ac0c:	003fc506 	br	2ab24 <__alt_data_end+0xfffeab24>
   2ac10:	0025ba80 	call	25ba8 <__sinit>
   2ac14:	003fbc06 	br	2ab08 <__alt_data_end+0xfffeab08>

0002ac18 <__swbuf>:
   2ac18:	008000f4 	movhi	r2,3
   2ac1c:	10844104 	addi	r2,r2,4356
   2ac20:	280d883a 	mov	r6,r5
   2ac24:	200b883a 	mov	r5,r4
   2ac28:	11000017 	ldw	r4,0(r2)
   2ac2c:	002aad81 	jmpi	2aad8 <__swbuf_r>

0002ac30 <_wcrtomb_r>:
   2ac30:	defff604 	addi	sp,sp,-40
   2ac34:	008000f4 	movhi	r2,3
   2ac38:	dc800815 	stw	r18,32(sp)
   2ac3c:	dc400715 	stw	r17,28(sp)
   2ac40:	dc000615 	stw	r16,24(sp)
   2ac44:	10844504 	addi	r2,r2,4372
   2ac48:	dfc00915 	stw	ra,36(sp)
   2ac4c:	2021883a 	mov	r16,r4
   2ac50:	3823883a 	mov	r17,r7
   2ac54:	14800017 	ldw	r18,0(r2)
   2ac58:	28001426 	beq	r5,zero,2acac <_wcrtomb_r+0x7c>
   2ac5c:	d9400415 	stw	r5,16(sp)
   2ac60:	d9800515 	stw	r6,20(sp)
   2ac64:	00262300 	call	26230 <__locale_charset>
   2ac68:	d9800517 	ldw	r6,20(sp)
   2ac6c:	d9400417 	ldw	r5,16(sp)
   2ac70:	100f883a 	mov	r7,r2
   2ac74:	dc400015 	stw	r17,0(sp)
   2ac78:	8009883a 	mov	r4,r16
   2ac7c:	903ee83a 	callr	r18
   2ac80:	00ffffc4 	movi	r3,-1
   2ac84:	10c0031e 	bne	r2,r3,2ac94 <_wcrtomb_r+0x64>
   2ac88:	88000015 	stw	zero,0(r17)
   2ac8c:	00c02284 	movi	r3,138
   2ac90:	80c00015 	stw	r3,0(r16)
   2ac94:	dfc00917 	ldw	ra,36(sp)
   2ac98:	dc800817 	ldw	r18,32(sp)
   2ac9c:	dc400717 	ldw	r17,28(sp)
   2aca0:	dc000617 	ldw	r16,24(sp)
   2aca4:	dec00a04 	addi	sp,sp,40
   2aca8:	f800283a 	ret
   2acac:	00262300 	call	26230 <__locale_charset>
   2acb0:	100f883a 	mov	r7,r2
   2acb4:	dc400015 	stw	r17,0(sp)
   2acb8:	000d883a 	mov	r6,zero
   2acbc:	d9400104 	addi	r5,sp,4
   2acc0:	8009883a 	mov	r4,r16
   2acc4:	903ee83a 	callr	r18
   2acc8:	003fed06 	br	2ac80 <__alt_data_end+0xfffeac80>

0002accc <wcrtomb>:
   2accc:	defff604 	addi	sp,sp,-40
   2acd0:	008000f4 	movhi	r2,3
   2acd4:	dc800615 	stw	r18,24(sp)
   2acd8:	dc400515 	stw	r17,20(sp)
   2acdc:	10844104 	addi	r2,r2,4356
   2ace0:	dfc00915 	stw	ra,36(sp)
   2ace4:	dd000815 	stw	r20,32(sp)
   2ace8:	dcc00715 	stw	r19,28(sp)
   2acec:	dc000415 	stw	r16,16(sp)
   2acf0:	3025883a 	mov	r18,r6
   2acf4:	14400017 	ldw	r17,0(r2)
   2acf8:	20001926 	beq	r4,zero,2ad60 <wcrtomb+0x94>
   2acfc:	008000f4 	movhi	r2,3
   2ad00:	10844504 	addi	r2,r2,4372
   2ad04:	15000017 	ldw	r20,0(r2)
   2ad08:	2021883a 	mov	r16,r4
   2ad0c:	2827883a 	mov	r19,r5
   2ad10:	00262300 	call	26230 <__locale_charset>
   2ad14:	100f883a 	mov	r7,r2
   2ad18:	dc800015 	stw	r18,0(sp)
   2ad1c:	980d883a 	mov	r6,r19
   2ad20:	800b883a 	mov	r5,r16
   2ad24:	8809883a 	mov	r4,r17
   2ad28:	a03ee83a 	callr	r20
   2ad2c:	00ffffc4 	movi	r3,-1
   2ad30:	10c0031e 	bne	r2,r3,2ad40 <wcrtomb+0x74>
   2ad34:	90000015 	stw	zero,0(r18)
   2ad38:	00c02284 	movi	r3,138
   2ad3c:	88c00015 	stw	r3,0(r17)
   2ad40:	dfc00917 	ldw	ra,36(sp)
   2ad44:	dd000817 	ldw	r20,32(sp)
   2ad48:	dcc00717 	ldw	r19,28(sp)
   2ad4c:	dc800617 	ldw	r18,24(sp)
   2ad50:	dc400517 	ldw	r17,20(sp)
   2ad54:	dc000417 	ldw	r16,16(sp)
   2ad58:	dec00a04 	addi	sp,sp,40
   2ad5c:	f800283a 	ret
   2ad60:	008000f4 	movhi	r2,3
   2ad64:	10844504 	addi	r2,r2,4372
   2ad68:	14000017 	ldw	r16,0(r2)
   2ad6c:	00262300 	call	26230 <__locale_charset>
   2ad70:	100f883a 	mov	r7,r2
   2ad74:	dc800015 	stw	r18,0(sp)
   2ad78:	000d883a 	mov	r6,zero
   2ad7c:	d9400104 	addi	r5,sp,4
   2ad80:	8809883a 	mov	r4,r17
   2ad84:	803ee83a 	callr	r16
   2ad88:	003fe806 	br	2ad2c <__alt_data_end+0xfffead2c>

0002ad8c <__ascii_wctomb>:
   2ad8c:	28000526 	beq	r5,zero,2ada4 <__ascii_wctomb+0x18>
   2ad90:	00803fc4 	movi	r2,255
   2ad94:	11800536 	bltu	r2,r6,2adac <__ascii_wctomb+0x20>
   2ad98:	29800005 	stb	r6,0(r5)
   2ad9c:	00800044 	movi	r2,1
   2ada0:	f800283a 	ret
   2ada4:	0005883a 	mov	r2,zero
   2ada8:	f800283a 	ret
   2adac:	00802284 	movi	r2,138
   2adb0:	20800015 	stw	r2,0(r4)
   2adb4:	00bfffc4 	movi	r2,-1
   2adb8:	f800283a 	ret

0002adbc <_wctomb_r>:
   2adbc:	008000f4 	movhi	r2,3
   2adc0:	defff904 	addi	sp,sp,-28
   2adc4:	10844504 	addi	r2,r2,4372
   2adc8:	dfc00615 	stw	ra,24(sp)
   2adcc:	dc400515 	stw	r17,20(sp)
   2add0:	dc000415 	stw	r16,16(sp)
   2add4:	3823883a 	mov	r17,r7
   2add8:	14000017 	ldw	r16,0(r2)
   2addc:	d9000115 	stw	r4,4(sp)
   2ade0:	d9400215 	stw	r5,8(sp)
   2ade4:	d9800315 	stw	r6,12(sp)
   2ade8:	00262300 	call	26230 <__locale_charset>
   2adec:	d9800317 	ldw	r6,12(sp)
   2adf0:	d9400217 	ldw	r5,8(sp)
   2adf4:	d9000117 	ldw	r4,4(sp)
   2adf8:	100f883a 	mov	r7,r2
   2adfc:	dc400015 	stw	r17,0(sp)
   2ae00:	803ee83a 	callr	r16
   2ae04:	dfc00617 	ldw	ra,24(sp)
   2ae08:	dc400517 	ldw	r17,20(sp)
   2ae0c:	dc000417 	ldw	r16,16(sp)
   2ae10:	dec00704 	addi	sp,sp,28
   2ae14:	f800283a 	ret

0002ae18 <__udivdi3>:
   2ae18:	defff504 	addi	sp,sp,-44
   2ae1c:	dcc00415 	stw	r19,16(sp)
   2ae20:	dc000115 	stw	r16,4(sp)
   2ae24:	dfc00a15 	stw	ra,40(sp)
   2ae28:	df000915 	stw	fp,36(sp)
   2ae2c:	ddc00815 	stw	r23,32(sp)
   2ae30:	dd800715 	stw	r22,28(sp)
   2ae34:	dd400615 	stw	r21,24(sp)
   2ae38:	dd000515 	stw	r20,20(sp)
   2ae3c:	dc800315 	stw	r18,12(sp)
   2ae40:	dc400215 	stw	r17,8(sp)
   2ae44:	2027883a 	mov	r19,r4
   2ae48:	2821883a 	mov	r16,r5
   2ae4c:	3800411e 	bne	r7,zero,2af54 <__udivdi3+0x13c>
   2ae50:	3023883a 	mov	r17,r6
   2ae54:	2025883a 	mov	r18,r4
   2ae58:	2980522e 	bgeu	r5,r6,2afa4 <__udivdi3+0x18c>
   2ae5c:	00bfffd4 	movui	r2,65535
   2ae60:	282d883a 	mov	r22,r5
   2ae64:	1180a836 	bltu	r2,r6,2b108 <__udivdi3+0x2f0>
   2ae68:	00803fc4 	movi	r2,255
   2ae6c:	1185803a 	cmpltu	r2,r2,r6
   2ae70:	100490fa 	slli	r2,r2,3
   2ae74:	3086d83a 	srl	r3,r6,r2
   2ae78:	010000f4 	movhi	r4,3
   2ae7c:	213cd604 	addi	r4,r4,-3240
   2ae80:	20c7883a 	add	r3,r4,r3
   2ae84:	18c00003 	ldbu	r3,0(r3)
   2ae88:	1885883a 	add	r2,r3,r2
   2ae8c:	00c00804 	movi	r3,32
   2ae90:	1887c83a 	sub	r3,r3,r2
   2ae94:	18000526 	beq	r3,zero,2aeac <__udivdi3+0x94>
   2ae98:	80e0983a 	sll	r16,r16,r3
   2ae9c:	9884d83a 	srl	r2,r19,r2
   2aea0:	30e2983a 	sll	r17,r6,r3
   2aea4:	98e4983a 	sll	r18,r19,r3
   2aea8:	142cb03a 	or	r22,r2,r16
   2aeac:	882ad43a 	srli	r21,r17,16
   2aeb0:	b009883a 	mov	r4,r22
   2aeb4:	8d3fffcc 	andi	r20,r17,65535
   2aeb8:	a80b883a 	mov	r5,r21
   2aebc:	00205c40 	call	205c4 <__umodsi3>
   2aec0:	b009883a 	mov	r4,r22
   2aec4:	a80b883a 	mov	r5,r21
   2aec8:	1027883a 	mov	r19,r2
   2aecc:	00205600 	call	20560 <__udivsi3>
   2aed0:	102d883a 	mov	r22,r2
   2aed4:	9826943a 	slli	r19,r19,16
   2aed8:	9004d43a 	srli	r2,r18,16
   2aedc:	a5a1383a 	mul	r16,r20,r22
   2aee0:	14c4b03a 	or	r2,r2,r19
   2aee4:	1400052e 	bgeu	r2,r16,2aefc <__udivdi3+0xe4>
   2aee8:	1445883a 	add	r2,r2,r17
   2aeec:	b0ffffc4 	addi	r3,r22,-1
   2aef0:	14400136 	bltu	r2,r17,2aef8 <__udivdi3+0xe0>
   2aef4:	14012336 	bltu	r2,r16,2b384 <__udivdi3+0x56c>
   2aef8:	182d883a 	mov	r22,r3
   2aefc:	1421c83a 	sub	r16,r2,r16
   2af00:	a80b883a 	mov	r5,r21
   2af04:	8009883a 	mov	r4,r16
   2af08:	00205c40 	call	205c4 <__umodsi3>
   2af0c:	1027883a 	mov	r19,r2
   2af10:	a80b883a 	mov	r5,r21
   2af14:	8009883a 	mov	r4,r16
   2af18:	00205600 	call	20560 <__udivsi3>
   2af1c:	9826943a 	slli	r19,r19,16
   2af20:	a0a9383a 	mul	r20,r20,r2
   2af24:	94bfffcc 	andi	r18,r18,65535
   2af28:	94e4b03a 	or	r18,r18,r19
   2af2c:	9500052e 	bgeu	r18,r20,2af44 <__udivdi3+0x12c>
   2af30:	8ca5883a 	add	r18,r17,r18
   2af34:	10ffffc4 	addi	r3,r2,-1
   2af38:	9440f136 	bltu	r18,r17,2b300 <__udivdi3+0x4e8>
   2af3c:	9500f02e 	bgeu	r18,r20,2b300 <__udivdi3+0x4e8>
   2af40:	10bfff84 	addi	r2,r2,-2
   2af44:	b00c943a 	slli	r6,r22,16
   2af48:	0007883a 	mov	r3,zero
   2af4c:	3084b03a 	or	r2,r6,r2
   2af50:	00005906 	br	2b0b8 <__udivdi3+0x2a0>
   2af54:	29c05636 	bltu	r5,r7,2b0b0 <__udivdi3+0x298>
   2af58:	00bfffd4 	movui	r2,65535
   2af5c:	11c0622e 	bgeu	r2,r7,2b0e8 <__udivdi3+0x2d0>
   2af60:	00804034 	movhi	r2,256
   2af64:	10bfffc4 	addi	r2,r2,-1
   2af68:	11c0ee36 	bltu	r2,r7,2b324 <__udivdi3+0x50c>
   2af6c:	00800404 	movi	r2,16
   2af70:	3886d83a 	srl	r3,r7,r2
   2af74:	010000f4 	movhi	r4,3
   2af78:	213cd604 	addi	r4,r4,-3240
   2af7c:	20c7883a 	add	r3,r4,r3
   2af80:	18c00003 	ldbu	r3,0(r3)
   2af84:	05400804 	movi	r21,32
   2af88:	1885883a 	add	r2,r3,r2
   2af8c:	a8abc83a 	sub	r21,r21,r2
   2af90:	a800621e 	bne	r21,zero,2b11c <__udivdi3+0x304>
   2af94:	3c00e936 	bltu	r7,r16,2b33c <__udivdi3+0x524>
   2af98:	9985403a 	cmpgeu	r2,r19,r6
   2af9c:	0007883a 	mov	r3,zero
   2afa0:	00004506 	br	2b0b8 <__udivdi3+0x2a0>
   2afa4:	3000041e 	bne	r6,zero,2afb8 <__udivdi3+0x1a0>
   2afa8:	000b883a 	mov	r5,zero
   2afac:	01000044 	movi	r4,1
   2afb0:	00205600 	call	20560 <__udivsi3>
   2afb4:	1023883a 	mov	r17,r2
   2afb8:	00bfffd4 	movui	r2,65535
   2afbc:	14404e2e 	bgeu	r2,r17,2b0f8 <__udivdi3+0x2e0>
   2afc0:	00804034 	movhi	r2,256
   2afc4:	10bfffc4 	addi	r2,r2,-1
   2afc8:	1440d836 	bltu	r2,r17,2b32c <__udivdi3+0x514>
   2afcc:	00800404 	movi	r2,16
   2afd0:	8886d83a 	srl	r3,r17,r2
   2afd4:	010000f4 	movhi	r4,3
   2afd8:	213cd604 	addi	r4,r4,-3240
   2afdc:	20c7883a 	add	r3,r4,r3
   2afe0:	18c00003 	ldbu	r3,0(r3)
   2afe4:	1885883a 	add	r2,r3,r2
   2afe8:	00c00804 	movi	r3,32
   2afec:	1887c83a 	sub	r3,r3,r2
   2aff0:	18008f1e 	bne	r3,zero,2b230 <__udivdi3+0x418>
   2aff4:	882ad43a 	srli	r21,r17,16
   2aff8:	8461c83a 	sub	r16,r16,r17
   2affc:	8d3fffcc 	andi	r20,r17,65535
   2b000:	00c00044 	movi	r3,1
   2b004:	8009883a 	mov	r4,r16
   2b008:	a80b883a 	mov	r5,r21
   2b00c:	d8c00015 	stw	r3,0(sp)
   2b010:	00205c40 	call	205c4 <__umodsi3>
   2b014:	8009883a 	mov	r4,r16
   2b018:	a80b883a 	mov	r5,r21
   2b01c:	1027883a 	mov	r19,r2
   2b020:	00205600 	call	20560 <__udivsi3>
   2b024:	9826943a 	slli	r19,r19,16
   2b028:	9008d43a 	srli	r4,r18,16
   2b02c:	1521383a 	mul	r16,r2,r20
   2b030:	102d883a 	mov	r22,r2
   2b034:	24c8b03a 	or	r4,r4,r19
   2b038:	d8c00017 	ldw	r3,0(sp)
   2b03c:	2400052e 	bgeu	r4,r16,2b054 <__udivdi3+0x23c>
   2b040:	2449883a 	add	r4,r4,r17
   2b044:	b0bfffc4 	addi	r2,r22,-1
   2b048:	24400136 	bltu	r4,r17,2b050 <__udivdi3+0x238>
   2b04c:	2400ca36 	bltu	r4,r16,2b378 <__udivdi3+0x560>
   2b050:	102d883a 	mov	r22,r2
   2b054:	2421c83a 	sub	r16,r4,r16
   2b058:	a80b883a 	mov	r5,r21
   2b05c:	8009883a 	mov	r4,r16
   2b060:	d8c00015 	stw	r3,0(sp)
   2b064:	00205c40 	call	205c4 <__umodsi3>
   2b068:	1027883a 	mov	r19,r2
   2b06c:	a80b883a 	mov	r5,r21
   2b070:	8009883a 	mov	r4,r16
   2b074:	00205600 	call	20560 <__udivsi3>
   2b078:	9826943a 	slli	r19,r19,16
   2b07c:	1529383a 	mul	r20,r2,r20
   2b080:	94bfffcc 	andi	r18,r18,65535
   2b084:	94e4b03a 	or	r18,r18,r19
   2b088:	d8c00017 	ldw	r3,0(sp)
   2b08c:	9500052e 	bgeu	r18,r20,2b0a4 <__udivdi3+0x28c>
   2b090:	8ca5883a 	add	r18,r17,r18
   2b094:	113fffc4 	addi	r4,r2,-1
   2b098:	94409736 	bltu	r18,r17,2b2f8 <__udivdi3+0x4e0>
   2b09c:	9500962e 	bgeu	r18,r20,2b2f8 <__udivdi3+0x4e0>
   2b0a0:	10bfff84 	addi	r2,r2,-2
   2b0a4:	b00c943a 	slli	r6,r22,16
   2b0a8:	3084b03a 	or	r2,r6,r2
   2b0ac:	00000206 	br	2b0b8 <__udivdi3+0x2a0>
   2b0b0:	0007883a 	mov	r3,zero
   2b0b4:	0005883a 	mov	r2,zero
   2b0b8:	dfc00a17 	ldw	ra,40(sp)
   2b0bc:	df000917 	ldw	fp,36(sp)
   2b0c0:	ddc00817 	ldw	r23,32(sp)
   2b0c4:	dd800717 	ldw	r22,28(sp)
   2b0c8:	dd400617 	ldw	r21,24(sp)
   2b0cc:	dd000517 	ldw	r20,20(sp)
   2b0d0:	dcc00417 	ldw	r19,16(sp)
   2b0d4:	dc800317 	ldw	r18,12(sp)
   2b0d8:	dc400217 	ldw	r17,8(sp)
   2b0dc:	dc000117 	ldw	r16,4(sp)
   2b0e0:	dec00b04 	addi	sp,sp,44
   2b0e4:	f800283a 	ret
   2b0e8:	00803fc4 	movi	r2,255
   2b0ec:	11c5803a 	cmpltu	r2,r2,r7
   2b0f0:	100490fa 	slli	r2,r2,3
   2b0f4:	003f9e06 	br	2af70 <__alt_data_end+0xfffeaf70>
   2b0f8:	00803fc4 	movi	r2,255
   2b0fc:	1445803a 	cmpltu	r2,r2,r17
   2b100:	100490fa 	slli	r2,r2,3
   2b104:	003fb206 	br	2afd0 <__alt_data_end+0xfffeafd0>
   2b108:	00804034 	movhi	r2,256
   2b10c:	10bfffc4 	addi	r2,r2,-1
   2b110:	11808836 	bltu	r2,r6,2b334 <__udivdi3+0x51c>
   2b114:	00800404 	movi	r2,16
   2b118:	003f5606 	br	2ae74 <__alt_data_end+0xfffeae74>
   2b11c:	30aed83a 	srl	r23,r6,r2
   2b120:	3d4e983a 	sll	r7,r7,r21
   2b124:	80acd83a 	srl	r22,r16,r2
   2b128:	9884d83a 	srl	r2,r19,r2
   2b12c:	3deeb03a 	or	r23,r7,r23
   2b130:	b824d43a 	srli	r18,r23,16
   2b134:	8560983a 	sll	r16,r16,r21
   2b138:	b009883a 	mov	r4,r22
   2b13c:	900b883a 	mov	r5,r18
   2b140:	3568983a 	sll	r20,r6,r21
   2b144:	1420b03a 	or	r16,r2,r16
   2b148:	00205c40 	call	205c4 <__umodsi3>
   2b14c:	b009883a 	mov	r4,r22
   2b150:	900b883a 	mov	r5,r18
   2b154:	1023883a 	mov	r17,r2
   2b158:	00205600 	call	20560 <__udivsi3>
   2b15c:	8808943a 	slli	r4,r17,16
   2b160:	bf3fffcc 	andi	fp,r23,65535
   2b164:	8006d43a 	srli	r3,r16,16
   2b168:	e0a3383a 	mul	r17,fp,r2
   2b16c:	100d883a 	mov	r6,r2
   2b170:	1906b03a 	or	r3,r3,r4
   2b174:	1c40042e 	bgeu	r3,r17,2b188 <__udivdi3+0x370>
   2b178:	1dc7883a 	add	r3,r3,r23
   2b17c:	10bfffc4 	addi	r2,r2,-1
   2b180:	1dc0752e 	bgeu	r3,r23,2b358 <__udivdi3+0x540>
   2b184:	100d883a 	mov	r6,r2
   2b188:	1c63c83a 	sub	r17,r3,r17
   2b18c:	900b883a 	mov	r5,r18
   2b190:	8809883a 	mov	r4,r17
   2b194:	d9800015 	stw	r6,0(sp)
   2b198:	00205c40 	call	205c4 <__umodsi3>
   2b19c:	102d883a 	mov	r22,r2
   2b1a0:	8809883a 	mov	r4,r17
   2b1a4:	900b883a 	mov	r5,r18
   2b1a8:	00205600 	call	20560 <__udivsi3>
   2b1ac:	b02c943a 	slli	r22,r22,16
   2b1b0:	e089383a 	mul	r4,fp,r2
   2b1b4:	843fffcc 	andi	r16,r16,65535
   2b1b8:	85a0b03a 	or	r16,r16,r22
   2b1bc:	d9800017 	ldw	r6,0(sp)
   2b1c0:	8100042e 	bgeu	r16,r4,2b1d4 <__udivdi3+0x3bc>
   2b1c4:	85e1883a 	add	r16,r16,r23
   2b1c8:	10ffffc4 	addi	r3,r2,-1
   2b1cc:	85c05e2e 	bgeu	r16,r23,2b348 <__udivdi3+0x530>
   2b1d0:	1805883a 	mov	r2,r3
   2b1d4:	300c943a 	slli	r6,r6,16
   2b1d8:	a17fffcc 	andi	r5,r20,65535
   2b1dc:	a028d43a 	srli	r20,r20,16
   2b1e0:	3084b03a 	or	r2,r6,r2
   2b1e4:	10ffffcc 	andi	r3,r2,65535
   2b1e8:	100cd43a 	srli	r6,r2,16
   2b1ec:	194f383a 	mul	r7,r3,r5
   2b1f0:	1d07383a 	mul	r3,r3,r20
   2b1f4:	314b383a 	mul	r5,r6,r5
   2b1f8:	3810d43a 	srli	r8,r7,16
   2b1fc:	8121c83a 	sub	r16,r16,r4
   2b200:	1947883a 	add	r3,r3,r5
   2b204:	40c7883a 	add	r3,r8,r3
   2b208:	350d383a 	mul	r6,r6,r20
   2b20c:	1940022e 	bgeu	r3,r5,2b218 <__udivdi3+0x400>
   2b210:	01000074 	movhi	r4,1
   2b214:	310d883a 	add	r6,r6,r4
   2b218:	1828d43a 	srli	r20,r3,16
   2b21c:	a18d883a 	add	r6,r20,r6
   2b220:	81803e36 	bltu	r16,r6,2b31c <__udivdi3+0x504>
   2b224:	81803826 	beq	r16,r6,2b308 <__udivdi3+0x4f0>
   2b228:	0007883a 	mov	r3,zero
   2b22c:	003fa206 	br	2b0b8 <__alt_data_end+0xfffeb0b8>
   2b230:	88e2983a 	sll	r17,r17,r3
   2b234:	80a8d83a 	srl	r20,r16,r2
   2b238:	80e0983a 	sll	r16,r16,r3
   2b23c:	882ad43a 	srli	r21,r17,16
   2b240:	9884d83a 	srl	r2,r19,r2
   2b244:	a009883a 	mov	r4,r20
   2b248:	a80b883a 	mov	r5,r21
   2b24c:	142eb03a 	or	r23,r2,r16
   2b250:	98e4983a 	sll	r18,r19,r3
   2b254:	00205c40 	call	205c4 <__umodsi3>
   2b258:	a009883a 	mov	r4,r20
   2b25c:	a80b883a 	mov	r5,r21
   2b260:	1021883a 	mov	r16,r2
   2b264:	00205600 	call	20560 <__udivsi3>
   2b268:	1039883a 	mov	fp,r2
   2b26c:	8d3fffcc 	andi	r20,r17,65535
   2b270:	8020943a 	slli	r16,r16,16
   2b274:	b804d43a 	srli	r2,r23,16
   2b278:	a72d383a 	mul	r22,r20,fp
   2b27c:	1404b03a 	or	r2,r2,r16
   2b280:	1580062e 	bgeu	r2,r22,2b29c <__udivdi3+0x484>
   2b284:	1445883a 	add	r2,r2,r17
   2b288:	e0ffffc4 	addi	r3,fp,-1
   2b28c:	14403836 	bltu	r2,r17,2b370 <__udivdi3+0x558>
   2b290:	1580372e 	bgeu	r2,r22,2b370 <__udivdi3+0x558>
   2b294:	e73fff84 	addi	fp,fp,-2
   2b298:	1445883a 	add	r2,r2,r17
   2b29c:	15adc83a 	sub	r22,r2,r22
   2b2a0:	a80b883a 	mov	r5,r21
   2b2a4:	b009883a 	mov	r4,r22
   2b2a8:	00205c40 	call	205c4 <__umodsi3>
   2b2ac:	1027883a 	mov	r19,r2
   2b2b0:	b009883a 	mov	r4,r22
   2b2b4:	a80b883a 	mov	r5,r21
   2b2b8:	00205600 	call	20560 <__udivsi3>
   2b2bc:	9826943a 	slli	r19,r19,16
   2b2c0:	a0a1383a 	mul	r16,r20,r2
   2b2c4:	b93fffcc 	andi	r4,r23,65535
   2b2c8:	24c8b03a 	or	r4,r4,r19
   2b2cc:	2400062e 	bgeu	r4,r16,2b2e8 <__udivdi3+0x4d0>
   2b2d0:	2449883a 	add	r4,r4,r17
   2b2d4:	10ffffc4 	addi	r3,r2,-1
   2b2d8:	24402336 	bltu	r4,r17,2b368 <__udivdi3+0x550>
   2b2dc:	2400222e 	bgeu	r4,r16,2b368 <__udivdi3+0x550>
   2b2e0:	10bfff84 	addi	r2,r2,-2
   2b2e4:	2449883a 	add	r4,r4,r17
   2b2e8:	e038943a 	slli	fp,fp,16
   2b2ec:	2421c83a 	sub	r16,r4,r16
   2b2f0:	e086b03a 	or	r3,fp,r2
   2b2f4:	003f4306 	br	2b004 <__alt_data_end+0xfffeb004>
   2b2f8:	2005883a 	mov	r2,r4
   2b2fc:	003f6906 	br	2b0a4 <__alt_data_end+0xfffeb0a4>
   2b300:	1805883a 	mov	r2,r3
   2b304:	003f0f06 	br	2af44 <__alt_data_end+0xfffeaf44>
   2b308:	1806943a 	slli	r3,r3,16
   2b30c:	9d66983a 	sll	r19,r19,r21
   2b310:	39ffffcc 	andi	r7,r7,65535
   2b314:	19c7883a 	add	r3,r3,r7
   2b318:	98ffc32e 	bgeu	r19,r3,2b228 <__alt_data_end+0xfffeb228>
   2b31c:	10bfffc4 	addi	r2,r2,-1
   2b320:	003fc106 	br	2b228 <__alt_data_end+0xfffeb228>
   2b324:	00800604 	movi	r2,24
   2b328:	003f1106 	br	2af70 <__alt_data_end+0xfffeaf70>
   2b32c:	00800604 	movi	r2,24
   2b330:	003f2706 	br	2afd0 <__alt_data_end+0xfffeafd0>
   2b334:	00800604 	movi	r2,24
   2b338:	003ece06 	br	2ae74 <__alt_data_end+0xfffeae74>
   2b33c:	0007883a 	mov	r3,zero
   2b340:	00800044 	movi	r2,1
   2b344:	003f5c06 	br	2b0b8 <__alt_data_end+0xfffeb0b8>
   2b348:	813fa12e 	bgeu	r16,r4,2b1d0 <__alt_data_end+0xfffeb1d0>
   2b34c:	10bfff84 	addi	r2,r2,-2
   2b350:	85e1883a 	add	r16,r16,r23
   2b354:	003f9f06 	br	2b1d4 <__alt_data_end+0xfffeb1d4>
   2b358:	1c7f8a2e 	bgeu	r3,r17,2b184 <__alt_data_end+0xfffeb184>
   2b35c:	31bfff84 	addi	r6,r6,-2
   2b360:	1dc7883a 	add	r3,r3,r23
   2b364:	003f8806 	br	2b188 <__alt_data_end+0xfffeb188>
   2b368:	1805883a 	mov	r2,r3
   2b36c:	003fde06 	br	2b2e8 <__alt_data_end+0xfffeb2e8>
   2b370:	1839883a 	mov	fp,r3
   2b374:	003fc906 	br	2b29c <__alt_data_end+0xfffeb29c>
   2b378:	b5bfff84 	addi	r22,r22,-2
   2b37c:	2449883a 	add	r4,r4,r17
   2b380:	003f3406 	br	2b054 <__alt_data_end+0xfffeb054>
   2b384:	b5bfff84 	addi	r22,r22,-2
   2b388:	1445883a 	add	r2,r2,r17
   2b38c:	003edb06 	br	2aefc <__alt_data_end+0xfffeaefc>

0002b390 <__umoddi3>:
   2b390:	defff404 	addi	sp,sp,-48
   2b394:	df000a15 	stw	fp,40(sp)
   2b398:	dc400315 	stw	r17,12(sp)
   2b39c:	dc000215 	stw	r16,8(sp)
   2b3a0:	dfc00b15 	stw	ra,44(sp)
   2b3a4:	ddc00915 	stw	r23,36(sp)
   2b3a8:	dd800815 	stw	r22,32(sp)
   2b3ac:	dd400715 	stw	r21,28(sp)
   2b3b0:	dd000615 	stw	r20,24(sp)
   2b3b4:	dcc00515 	stw	r19,20(sp)
   2b3b8:	dc800415 	stw	r18,16(sp)
   2b3bc:	2021883a 	mov	r16,r4
   2b3c0:	2823883a 	mov	r17,r5
   2b3c4:	2839883a 	mov	fp,r5
   2b3c8:	38003c1e 	bne	r7,zero,2b4bc <__umoddi3+0x12c>
   2b3cc:	3027883a 	mov	r19,r6
   2b3d0:	2029883a 	mov	r20,r4
   2b3d4:	2980512e 	bgeu	r5,r6,2b51c <__umoddi3+0x18c>
   2b3d8:	00bfffd4 	movui	r2,65535
   2b3dc:	11809a36 	bltu	r2,r6,2b648 <__umoddi3+0x2b8>
   2b3e0:	01003fc4 	movi	r4,255
   2b3e4:	2189803a 	cmpltu	r4,r4,r6
   2b3e8:	200890fa 	slli	r4,r4,3
   2b3ec:	3104d83a 	srl	r2,r6,r4
   2b3f0:	00c000f4 	movhi	r3,3
   2b3f4:	18fcd604 	addi	r3,r3,-3240
   2b3f8:	1885883a 	add	r2,r3,r2
   2b3fc:	10c00003 	ldbu	r3,0(r2)
   2b400:	00800804 	movi	r2,32
   2b404:	1909883a 	add	r4,r3,r4
   2b408:	1125c83a 	sub	r18,r2,r4
   2b40c:	90000526 	beq	r18,zero,2b424 <__umoddi3+0x94>
   2b410:	8ca2983a 	sll	r17,r17,r18
   2b414:	8108d83a 	srl	r4,r16,r4
   2b418:	34a6983a 	sll	r19,r6,r18
   2b41c:	84a8983a 	sll	r20,r16,r18
   2b420:	2478b03a 	or	fp,r4,r17
   2b424:	982ed43a 	srli	r23,r19,16
   2b428:	e009883a 	mov	r4,fp
   2b42c:	9dbfffcc 	andi	r22,r19,65535
   2b430:	b80b883a 	mov	r5,r23
   2b434:	00205c40 	call	205c4 <__umodsi3>
   2b438:	e009883a 	mov	r4,fp
   2b43c:	b80b883a 	mov	r5,r23
   2b440:	102b883a 	mov	r21,r2
   2b444:	00205600 	call	20560 <__udivsi3>
   2b448:	a806943a 	slli	r3,r21,16
   2b44c:	a008d43a 	srli	r4,r20,16
   2b450:	b085383a 	mul	r2,r22,r2
   2b454:	20c8b03a 	or	r4,r4,r3
   2b458:	2080032e 	bgeu	r4,r2,2b468 <__umoddi3+0xd8>
   2b45c:	24c9883a 	add	r4,r4,r19
   2b460:	24c00136 	bltu	r4,r19,2b468 <__umoddi3+0xd8>
   2b464:	20811036 	bltu	r4,r2,2b8a8 <__umoddi3+0x518>
   2b468:	20abc83a 	sub	r21,r4,r2
   2b46c:	b80b883a 	mov	r5,r23
   2b470:	a809883a 	mov	r4,r21
   2b474:	00205c40 	call	205c4 <__umodsi3>
   2b478:	1023883a 	mov	r17,r2
   2b47c:	b80b883a 	mov	r5,r23
   2b480:	a809883a 	mov	r4,r21
   2b484:	00205600 	call	20560 <__udivsi3>
   2b488:	8822943a 	slli	r17,r17,16
   2b48c:	b085383a 	mul	r2,r22,r2
   2b490:	a0ffffcc 	andi	r3,r20,65535
   2b494:	1c46b03a 	or	r3,r3,r17
   2b498:	1880042e 	bgeu	r3,r2,2b4ac <__umoddi3+0x11c>
   2b49c:	1cc7883a 	add	r3,r3,r19
   2b4a0:	1cc00236 	bltu	r3,r19,2b4ac <__umoddi3+0x11c>
   2b4a4:	1880012e 	bgeu	r3,r2,2b4ac <__umoddi3+0x11c>
   2b4a8:	1cc7883a 	add	r3,r3,r19
   2b4ac:	1885c83a 	sub	r2,r3,r2
   2b4b0:	1484d83a 	srl	r2,r2,r18
   2b4b4:	0007883a 	mov	r3,zero
   2b4b8:	00004f06 	br	2b5f8 <__umoddi3+0x268>
   2b4bc:	29c04c36 	bltu	r5,r7,2b5f0 <__umoddi3+0x260>
   2b4c0:	00bfffd4 	movui	r2,65535
   2b4c4:	11c0582e 	bgeu	r2,r7,2b628 <__umoddi3+0x298>
   2b4c8:	00804034 	movhi	r2,256
   2b4cc:	10bfffc4 	addi	r2,r2,-1
   2b4d0:	11c0e736 	bltu	r2,r7,2b870 <__umoddi3+0x4e0>
   2b4d4:	01000404 	movi	r4,16
   2b4d8:	3904d83a 	srl	r2,r7,r4
   2b4dc:	00c000f4 	movhi	r3,3
   2b4e0:	18fcd604 	addi	r3,r3,-3240
   2b4e4:	1885883a 	add	r2,r3,r2
   2b4e8:	14c00003 	ldbu	r19,0(r2)
   2b4ec:	00c00804 	movi	r3,32
   2b4f0:	9927883a 	add	r19,r19,r4
   2b4f4:	1ce9c83a 	sub	r20,r3,r19
   2b4f8:	a000581e 	bne	r20,zero,2b65c <__umoddi3+0x2cc>
   2b4fc:	3c400136 	bltu	r7,r17,2b504 <__umoddi3+0x174>
   2b500:	8180eb36 	bltu	r16,r6,2b8b0 <__umoddi3+0x520>
   2b504:	8185c83a 	sub	r2,r16,r6
   2b508:	89e3c83a 	sub	r17,r17,r7
   2b50c:	8089803a 	cmpltu	r4,r16,r2
   2b510:	8939c83a 	sub	fp,r17,r4
   2b514:	e007883a 	mov	r3,fp
   2b518:	00003706 	br	2b5f8 <__umoddi3+0x268>
   2b51c:	3000041e 	bne	r6,zero,2b530 <__umoddi3+0x1a0>
   2b520:	000b883a 	mov	r5,zero
   2b524:	01000044 	movi	r4,1
   2b528:	00205600 	call	20560 <__udivsi3>
   2b52c:	1027883a 	mov	r19,r2
   2b530:	00bfffd4 	movui	r2,65535
   2b534:	14c0402e 	bgeu	r2,r19,2b638 <__umoddi3+0x2a8>
   2b538:	00804034 	movhi	r2,256
   2b53c:	10bfffc4 	addi	r2,r2,-1
   2b540:	14c0cd36 	bltu	r2,r19,2b878 <__umoddi3+0x4e8>
   2b544:	00800404 	movi	r2,16
   2b548:	9886d83a 	srl	r3,r19,r2
   2b54c:	010000f4 	movhi	r4,3
   2b550:	213cd604 	addi	r4,r4,-3240
   2b554:	20c7883a 	add	r3,r4,r3
   2b558:	18c00003 	ldbu	r3,0(r3)
   2b55c:	1887883a 	add	r3,r3,r2
   2b560:	00800804 	movi	r2,32
   2b564:	10e5c83a 	sub	r18,r2,r3
   2b568:	9000901e 	bne	r18,zero,2b7ac <__umoddi3+0x41c>
   2b56c:	982cd43a 	srli	r22,r19,16
   2b570:	8ce3c83a 	sub	r17,r17,r19
   2b574:	9d7fffcc 	andi	r21,r19,65535
   2b578:	b00b883a 	mov	r5,r22
   2b57c:	8809883a 	mov	r4,r17
   2b580:	00205c40 	call	205c4 <__umodsi3>
   2b584:	8809883a 	mov	r4,r17
   2b588:	b00b883a 	mov	r5,r22
   2b58c:	1021883a 	mov	r16,r2
   2b590:	00205600 	call	20560 <__udivsi3>
   2b594:	8006943a 	slli	r3,r16,16
   2b598:	a008d43a 	srli	r4,r20,16
   2b59c:	1545383a 	mul	r2,r2,r21
   2b5a0:	20c8b03a 	or	r4,r4,r3
   2b5a4:	2080042e 	bgeu	r4,r2,2b5b8 <__umoddi3+0x228>
   2b5a8:	24c9883a 	add	r4,r4,r19
   2b5ac:	24c00236 	bltu	r4,r19,2b5b8 <__umoddi3+0x228>
   2b5b0:	2080012e 	bgeu	r4,r2,2b5b8 <__umoddi3+0x228>
   2b5b4:	24c9883a 	add	r4,r4,r19
   2b5b8:	20a1c83a 	sub	r16,r4,r2
   2b5bc:	b00b883a 	mov	r5,r22
   2b5c0:	8009883a 	mov	r4,r16
   2b5c4:	00205c40 	call	205c4 <__umodsi3>
   2b5c8:	1023883a 	mov	r17,r2
   2b5cc:	b00b883a 	mov	r5,r22
   2b5d0:	8009883a 	mov	r4,r16
   2b5d4:	00205600 	call	20560 <__udivsi3>
   2b5d8:	8822943a 	slli	r17,r17,16
   2b5dc:	1545383a 	mul	r2,r2,r21
   2b5e0:	a53fffcc 	andi	r20,r20,65535
   2b5e4:	a446b03a 	or	r3,r20,r17
   2b5e8:	18bfb02e 	bgeu	r3,r2,2b4ac <__alt_data_end+0xfffeb4ac>
   2b5ec:	003fab06 	br	2b49c <__alt_data_end+0xfffeb49c>
   2b5f0:	2005883a 	mov	r2,r4
   2b5f4:	2807883a 	mov	r3,r5
   2b5f8:	dfc00b17 	ldw	ra,44(sp)
   2b5fc:	df000a17 	ldw	fp,40(sp)
   2b600:	ddc00917 	ldw	r23,36(sp)
   2b604:	dd800817 	ldw	r22,32(sp)
   2b608:	dd400717 	ldw	r21,28(sp)
   2b60c:	dd000617 	ldw	r20,24(sp)
   2b610:	dcc00517 	ldw	r19,20(sp)
   2b614:	dc800417 	ldw	r18,16(sp)
   2b618:	dc400317 	ldw	r17,12(sp)
   2b61c:	dc000217 	ldw	r16,8(sp)
   2b620:	dec00c04 	addi	sp,sp,48
   2b624:	f800283a 	ret
   2b628:	04c03fc4 	movi	r19,255
   2b62c:	99c9803a 	cmpltu	r4,r19,r7
   2b630:	200890fa 	slli	r4,r4,3
   2b634:	003fa806 	br	2b4d8 <__alt_data_end+0xfffeb4d8>
   2b638:	00803fc4 	movi	r2,255
   2b63c:	14c5803a 	cmpltu	r2,r2,r19
   2b640:	100490fa 	slli	r2,r2,3
   2b644:	003fc006 	br	2b548 <__alt_data_end+0xfffeb548>
   2b648:	00804034 	movhi	r2,256
   2b64c:	10bfffc4 	addi	r2,r2,-1
   2b650:	11808b36 	bltu	r2,r6,2b880 <__umoddi3+0x4f0>
   2b654:	01000404 	movi	r4,16
   2b658:	003f6406 	br	2b3ec <__alt_data_end+0xfffeb3ec>
   2b65c:	34c4d83a 	srl	r2,r6,r19
   2b660:	3d0e983a 	sll	r7,r7,r20
   2b664:	8cf8d83a 	srl	fp,r17,r19
   2b668:	8d10983a 	sll	r8,r17,r20
   2b66c:	38aab03a 	or	r21,r7,r2
   2b670:	a82cd43a 	srli	r22,r21,16
   2b674:	84e2d83a 	srl	r17,r16,r19
   2b678:	e009883a 	mov	r4,fp
   2b67c:	b00b883a 	mov	r5,r22
   2b680:	8a22b03a 	or	r17,r17,r8
   2b684:	3524983a 	sll	r18,r6,r20
   2b688:	00205c40 	call	205c4 <__umodsi3>
   2b68c:	e009883a 	mov	r4,fp
   2b690:	b00b883a 	mov	r5,r22
   2b694:	102f883a 	mov	r23,r2
   2b698:	00205600 	call	20560 <__udivsi3>
   2b69c:	100d883a 	mov	r6,r2
   2b6a0:	b808943a 	slli	r4,r23,16
   2b6a4:	aa3fffcc 	andi	r8,r21,65535
   2b6a8:	8804d43a 	srli	r2,r17,16
   2b6ac:	41af383a 	mul	r23,r8,r6
   2b6b0:	8520983a 	sll	r16,r16,r20
   2b6b4:	1104b03a 	or	r2,r2,r4
   2b6b8:	15c0042e 	bgeu	r2,r23,2b6cc <__umoddi3+0x33c>
   2b6bc:	1545883a 	add	r2,r2,r21
   2b6c0:	30ffffc4 	addi	r3,r6,-1
   2b6c4:	1540742e 	bgeu	r2,r21,2b898 <__umoddi3+0x508>
   2b6c8:	180d883a 	mov	r6,r3
   2b6cc:	15efc83a 	sub	r23,r2,r23
   2b6d0:	b00b883a 	mov	r5,r22
   2b6d4:	b809883a 	mov	r4,r23
   2b6d8:	d9800115 	stw	r6,4(sp)
   2b6dc:	da000015 	stw	r8,0(sp)
   2b6e0:	00205c40 	call	205c4 <__umodsi3>
   2b6e4:	b00b883a 	mov	r5,r22
   2b6e8:	b809883a 	mov	r4,r23
   2b6ec:	1039883a 	mov	fp,r2
   2b6f0:	00205600 	call	20560 <__udivsi3>
   2b6f4:	da000017 	ldw	r8,0(sp)
   2b6f8:	e038943a 	slli	fp,fp,16
   2b6fc:	100b883a 	mov	r5,r2
   2b700:	4089383a 	mul	r4,r8,r2
   2b704:	8a3fffcc 	andi	r8,r17,65535
   2b708:	4710b03a 	or	r8,r8,fp
   2b70c:	d9800117 	ldw	r6,4(sp)
   2b710:	4100042e 	bgeu	r8,r4,2b724 <__umoddi3+0x394>
   2b714:	4551883a 	add	r8,r8,r21
   2b718:	10bfffc4 	addi	r2,r2,-1
   2b71c:	45405a2e 	bgeu	r8,r21,2b888 <__umoddi3+0x4f8>
   2b720:	100b883a 	mov	r5,r2
   2b724:	300c943a 	slli	r6,r6,16
   2b728:	91ffffcc 	andi	r7,r18,65535
   2b72c:	9004d43a 	srli	r2,r18,16
   2b730:	314cb03a 	or	r6,r6,r5
   2b734:	317fffcc 	andi	r5,r6,65535
   2b738:	300cd43a 	srli	r6,r6,16
   2b73c:	29d3383a 	mul	r9,r5,r7
   2b740:	288b383a 	mul	r5,r5,r2
   2b744:	31cf383a 	mul	r7,r6,r7
   2b748:	4806d43a 	srli	r3,r9,16
   2b74c:	4111c83a 	sub	r8,r8,r4
   2b750:	29cb883a 	add	r5,r5,r7
   2b754:	194b883a 	add	r5,r3,r5
   2b758:	3085383a 	mul	r2,r6,r2
   2b75c:	29c0022e 	bgeu	r5,r7,2b768 <__umoddi3+0x3d8>
   2b760:	00c00074 	movhi	r3,1
   2b764:	10c5883a 	add	r2,r2,r3
   2b768:	2808d43a 	srli	r4,r5,16
   2b76c:	280a943a 	slli	r5,r5,16
   2b770:	4a7fffcc 	andi	r9,r9,65535
   2b774:	2085883a 	add	r2,r4,r2
   2b778:	2a4b883a 	add	r5,r5,r9
   2b77c:	40803636 	bltu	r8,r2,2b858 <__umoddi3+0x4c8>
   2b780:	40804d26 	beq	r8,r2,2b8b8 <__umoddi3+0x528>
   2b784:	4089c83a 	sub	r4,r8,r2
   2b788:	280f883a 	mov	r7,r5
   2b78c:	81cfc83a 	sub	r7,r16,r7
   2b790:	81c7803a 	cmpltu	r3,r16,r7
   2b794:	20c7c83a 	sub	r3,r4,r3
   2b798:	1cc4983a 	sll	r2,r3,r19
   2b79c:	3d0ed83a 	srl	r7,r7,r20
   2b7a0:	1d06d83a 	srl	r3,r3,r20
   2b7a4:	11c4b03a 	or	r2,r2,r7
   2b7a8:	003f9306 	br	2b5f8 <__alt_data_end+0xfffeb5f8>
   2b7ac:	9ca6983a 	sll	r19,r19,r18
   2b7b0:	88e8d83a 	srl	r20,r17,r3
   2b7b4:	80c4d83a 	srl	r2,r16,r3
   2b7b8:	982cd43a 	srli	r22,r19,16
   2b7bc:	8ca2983a 	sll	r17,r17,r18
   2b7c0:	a009883a 	mov	r4,r20
   2b7c4:	b00b883a 	mov	r5,r22
   2b7c8:	1478b03a 	or	fp,r2,r17
   2b7cc:	00205c40 	call	205c4 <__umodsi3>
   2b7d0:	a009883a 	mov	r4,r20
   2b7d4:	b00b883a 	mov	r5,r22
   2b7d8:	1023883a 	mov	r17,r2
   2b7dc:	00205600 	call	20560 <__udivsi3>
   2b7e0:	9d7fffcc 	andi	r21,r19,65535
   2b7e4:	880a943a 	slli	r5,r17,16
   2b7e8:	e008d43a 	srli	r4,fp,16
   2b7ec:	a885383a 	mul	r2,r21,r2
   2b7f0:	84a8983a 	sll	r20,r16,r18
   2b7f4:	2148b03a 	or	r4,r4,r5
   2b7f8:	2080042e 	bgeu	r4,r2,2b80c <__umoddi3+0x47c>
   2b7fc:	24c9883a 	add	r4,r4,r19
   2b800:	24c00236 	bltu	r4,r19,2b80c <__umoddi3+0x47c>
   2b804:	2080012e 	bgeu	r4,r2,2b80c <__umoddi3+0x47c>
   2b808:	24c9883a 	add	r4,r4,r19
   2b80c:	20a3c83a 	sub	r17,r4,r2
   2b810:	b00b883a 	mov	r5,r22
   2b814:	8809883a 	mov	r4,r17
   2b818:	00205c40 	call	205c4 <__umodsi3>
   2b81c:	102f883a 	mov	r23,r2
   2b820:	8809883a 	mov	r4,r17
   2b824:	b00b883a 	mov	r5,r22
   2b828:	00205600 	call	20560 <__udivsi3>
   2b82c:	b82e943a 	slli	r23,r23,16
   2b830:	a885383a 	mul	r2,r21,r2
   2b834:	e13fffcc 	andi	r4,fp,65535
   2b838:	25c8b03a 	or	r4,r4,r23
   2b83c:	2080042e 	bgeu	r4,r2,2b850 <__umoddi3+0x4c0>
   2b840:	24c9883a 	add	r4,r4,r19
   2b844:	24c00236 	bltu	r4,r19,2b850 <__umoddi3+0x4c0>
   2b848:	2080012e 	bgeu	r4,r2,2b850 <__umoddi3+0x4c0>
   2b84c:	24c9883a 	add	r4,r4,r19
   2b850:	20a3c83a 	sub	r17,r4,r2
   2b854:	003f4806 	br	2b578 <__alt_data_end+0xfffeb578>
   2b858:	2c8fc83a 	sub	r7,r5,r18
   2b85c:	1545c83a 	sub	r2,r2,r21
   2b860:	29cb803a 	cmpltu	r5,r5,r7
   2b864:	1145c83a 	sub	r2,r2,r5
   2b868:	4089c83a 	sub	r4,r8,r2
   2b86c:	003fc706 	br	2b78c <__alt_data_end+0xfffeb78c>
   2b870:	01000604 	movi	r4,24
   2b874:	003f1806 	br	2b4d8 <__alt_data_end+0xfffeb4d8>
   2b878:	00800604 	movi	r2,24
   2b87c:	003f3206 	br	2b548 <__alt_data_end+0xfffeb548>
   2b880:	01000604 	movi	r4,24
   2b884:	003ed906 	br	2b3ec <__alt_data_end+0xfffeb3ec>
   2b888:	413fa52e 	bgeu	r8,r4,2b720 <__alt_data_end+0xfffeb720>
   2b88c:	297fff84 	addi	r5,r5,-2
   2b890:	4551883a 	add	r8,r8,r21
   2b894:	003fa306 	br	2b724 <__alt_data_end+0xfffeb724>
   2b898:	15ff8b2e 	bgeu	r2,r23,2b6c8 <__alt_data_end+0xfffeb6c8>
   2b89c:	31bfff84 	addi	r6,r6,-2
   2b8a0:	1545883a 	add	r2,r2,r21
   2b8a4:	003f8906 	br	2b6cc <__alt_data_end+0xfffeb6cc>
   2b8a8:	24c9883a 	add	r4,r4,r19
   2b8ac:	003eee06 	br	2b468 <__alt_data_end+0xfffeb468>
   2b8b0:	8005883a 	mov	r2,r16
   2b8b4:	003f1706 	br	2b514 <__alt_data_end+0xfffeb514>
   2b8b8:	817fe736 	bltu	r16,r5,2b858 <__alt_data_end+0xfffeb858>
   2b8bc:	280f883a 	mov	r7,r5
   2b8c0:	0009883a 	mov	r4,zero
   2b8c4:	003fb106 	br	2b78c <__alt_data_end+0xfffeb78c>

0002b8c8 <__adddf3>:
   2b8c8:	02c00434 	movhi	r11,16
   2b8cc:	5affffc4 	addi	r11,r11,-1
   2b8d0:	2806d7fa 	srli	r3,r5,31
   2b8d4:	2ad4703a 	and	r10,r5,r11
   2b8d8:	3ad2703a 	and	r9,r7,r11
   2b8dc:	3804d53a 	srli	r2,r7,20
   2b8e0:	3018d77a 	srli	r12,r6,29
   2b8e4:	280ad53a 	srli	r5,r5,20
   2b8e8:	501490fa 	slli	r10,r10,3
   2b8ec:	2010d77a 	srli	r8,r4,29
   2b8f0:	481290fa 	slli	r9,r9,3
   2b8f4:	380ed7fa 	srli	r7,r7,31
   2b8f8:	defffb04 	addi	sp,sp,-20
   2b8fc:	dc800215 	stw	r18,8(sp)
   2b900:	dc400115 	stw	r17,4(sp)
   2b904:	dc000015 	stw	r16,0(sp)
   2b908:	dfc00415 	stw	ra,16(sp)
   2b90c:	dcc00315 	stw	r19,12(sp)
   2b910:	1c803fcc 	andi	r18,r3,255
   2b914:	2c01ffcc 	andi	r16,r5,2047
   2b918:	5210b03a 	or	r8,r10,r8
   2b91c:	202290fa 	slli	r17,r4,3
   2b920:	1081ffcc 	andi	r2,r2,2047
   2b924:	4b12b03a 	or	r9,r9,r12
   2b928:	300c90fa 	slli	r6,r6,3
   2b92c:	91c07526 	beq	r18,r7,2bb04 <__adddf3+0x23c>
   2b930:	8087c83a 	sub	r3,r16,r2
   2b934:	00c0ab0e 	bge	zero,r3,2bbe4 <__adddf3+0x31c>
   2b938:	10002a1e 	bne	r2,zero,2b9e4 <__adddf3+0x11c>
   2b93c:	4984b03a 	or	r2,r9,r6
   2b940:	1000961e 	bne	r2,zero,2bb9c <__adddf3+0x2d4>
   2b944:	888001cc 	andi	r2,r17,7
   2b948:	10000726 	beq	r2,zero,2b968 <__adddf3+0xa0>
   2b94c:	888003cc 	andi	r2,r17,15
   2b950:	00c00104 	movi	r3,4
   2b954:	10c00426 	beq	r2,r3,2b968 <__adddf3+0xa0>
   2b958:	88c7883a 	add	r3,r17,r3
   2b95c:	1c63803a 	cmpltu	r17,r3,r17
   2b960:	4451883a 	add	r8,r8,r17
   2b964:	1823883a 	mov	r17,r3
   2b968:	4080202c 	andhi	r2,r8,128
   2b96c:	10005926 	beq	r2,zero,2bad4 <__adddf3+0x20c>
   2b970:	84000044 	addi	r16,r16,1
   2b974:	0081ffc4 	movi	r2,2047
   2b978:	8080ba26 	beq	r16,r2,2bc64 <__adddf3+0x39c>
   2b97c:	00bfe034 	movhi	r2,65408
   2b980:	10bfffc4 	addi	r2,r2,-1
   2b984:	4090703a 	and	r8,r8,r2
   2b988:	4004977a 	slli	r2,r8,29
   2b98c:	4010927a 	slli	r8,r8,9
   2b990:	8822d0fa 	srli	r17,r17,3
   2b994:	8401ffcc 	andi	r16,r16,2047
   2b998:	4010d33a 	srli	r8,r8,12
   2b99c:	9007883a 	mov	r3,r18
   2b9a0:	1444b03a 	or	r2,r2,r17
   2b9a4:	8401ffcc 	andi	r16,r16,2047
   2b9a8:	8020953a 	slli	r16,r16,20
   2b9ac:	18c03fcc 	andi	r3,r3,255
   2b9b0:	01000434 	movhi	r4,16
   2b9b4:	213fffc4 	addi	r4,r4,-1
   2b9b8:	180697fa 	slli	r3,r3,31
   2b9bc:	4110703a 	and	r8,r8,r4
   2b9c0:	4410b03a 	or	r8,r8,r16
   2b9c4:	40c6b03a 	or	r3,r8,r3
   2b9c8:	dfc00417 	ldw	ra,16(sp)
   2b9cc:	dcc00317 	ldw	r19,12(sp)
   2b9d0:	dc800217 	ldw	r18,8(sp)
   2b9d4:	dc400117 	ldw	r17,4(sp)
   2b9d8:	dc000017 	ldw	r16,0(sp)
   2b9dc:	dec00504 	addi	sp,sp,20
   2b9e0:	f800283a 	ret
   2b9e4:	0081ffc4 	movi	r2,2047
   2b9e8:	80bfd626 	beq	r16,r2,2b944 <__alt_data_end+0xfffeb944>
   2b9ec:	4a402034 	orhi	r9,r9,128
   2b9f0:	00800e04 	movi	r2,56
   2b9f4:	10c09f16 	blt	r2,r3,2bc74 <__adddf3+0x3ac>
   2b9f8:	008007c4 	movi	r2,31
   2b9fc:	10c0c216 	blt	r2,r3,2bd08 <__adddf3+0x440>
   2ba00:	00800804 	movi	r2,32
   2ba04:	10c5c83a 	sub	r2,r2,r3
   2ba08:	488a983a 	sll	r5,r9,r2
   2ba0c:	30c8d83a 	srl	r4,r6,r3
   2ba10:	3084983a 	sll	r2,r6,r2
   2ba14:	48c6d83a 	srl	r3,r9,r3
   2ba18:	290cb03a 	or	r6,r5,r4
   2ba1c:	1004c03a 	cmpne	r2,r2,zero
   2ba20:	308cb03a 	or	r6,r6,r2
   2ba24:	898dc83a 	sub	r6,r17,r6
   2ba28:	89a3803a 	cmpltu	r17,r17,r6
   2ba2c:	40d1c83a 	sub	r8,r8,r3
   2ba30:	4451c83a 	sub	r8,r8,r17
   2ba34:	3023883a 	mov	r17,r6
   2ba38:	4080202c 	andhi	r2,r8,128
   2ba3c:	10002326 	beq	r2,zero,2bacc <__adddf3+0x204>
   2ba40:	04c02034 	movhi	r19,128
   2ba44:	9cffffc4 	addi	r19,r19,-1
   2ba48:	44e6703a 	and	r19,r8,r19
   2ba4c:	98007626 	beq	r19,zero,2bc28 <__adddf3+0x360>
   2ba50:	9809883a 	mov	r4,r19
   2ba54:	00218340 	call	21834 <__clzsi2>
   2ba58:	10fffe04 	addi	r3,r2,-8
   2ba5c:	010007c4 	movi	r4,31
   2ba60:	20c07716 	blt	r4,r3,2bc40 <__adddf3+0x378>
   2ba64:	00800804 	movi	r2,32
   2ba68:	10c5c83a 	sub	r2,r2,r3
   2ba6c:	8884d83a 	srl	r2,r17,r2
   2ba70:	98d0983a 	sll	r8,r19,r3
   2ba74:	88e2983a 	sll	r17,r17,r3
   2ba78:	1204b03a 	or	r2,r2,r8
   2ba7c:	1c007416 	blt	r3,r16,2bc50 <__adddf3+0x388>
   2ba80:	1c21c83a 	sub	r16,r3,r16
   2ba84:	82000044 	addi	r8,r16,1
   2ba88:	00c007c4 	movi	r3,31
   2ba8c:	1a009116 	blt	r3,r8,2bcd4 <__adddf3+0x40c>
   2ba90:	00c00804 	movi	r3,32
   2ba94:	1a07c83a 	sub	r3,r3,r8
   2ba98:	8a08d83a 	srl	r4,r17,r8
   2ba9c:	88e2983a 	sll	r17,r17,r3
   2baa0:	10c6983a 	sll	r3,r2,r3
   2baa4:	1210d83a 	srl	r8,r2,r8
   2baa8:	8804c03a 	cmpne	r2,r17,zero
   2baac:	1906b03a 	or	r3,r3,r4
   2bab0:	18a2b03a 	or	r17,r3,r2
   2bab4:	0021883a 	mov	r16,zero
   2bab8:	003fa206 	br	2b944 <__alt_data_end+0xfffeb944>
   2babc:	1890b03a 	or	r8,r3,r2
   2bac0:	40017d26 	beq	r8,zero,2c0b8 <__adddf3+0x7f0>
   2bac4:	1011883a 	mov	r8,r2
   2bac8:	1823883a 	mov	r17,r3
   2bacc:	888001cc 	andi	r2,r17,7
   2bad0:	103f9e1e 	bne	r2,zero,2b94c <__alt_data_end+0xfffeb94c>
   2bad4:	4004977a 	slli	r2,r8,29
   2bad8:	8822d0fa 	srli	r17,r17,3
   2badc:	4010d0fa 	srli	r8,r8,3
   2bae0:	9007883a 	mov	r3,r18
   2bae4:	1444b03a 	or	r2,r2,r17
   2bae8:	0101ffc4 	movi	r4,2047
   2baec:	81002426 	beq	r16,r4,2bb80 <__adddf3+0x2b8>
   2baf0:	8120703a 	and	r16,r16,r4
   2baf4:	01000434 	movhi	r4,16
   2baf8:	213fffc4 	addi	r4,r4,-1
   2bafc:	4110703a 	and	r8,r8,r4
   2bb00:	003fa806 	br	2b9a4 <__alt_data_end+0xfffeb9a4>
   2bb04:	8089c83a 	sub	r4,r16,r2
   2bb08:	01005e0e 	bge	zero,r4,2bc84 <__adddf3+0x3bc>
   2bb0c:	10002b26 	beq	r2,zero,2bbbc <__adddf3+0x2f4>
   2bb10:	0081ffc4 	movi	r2,2047
   2bb14:	80bf8b26 	beq	r16,r2,2b944 <__alt_data_end+0xfffeb944>
   2bb18:	4a402034 	orhi	r9,r9,128
   2bb1c:	00800e04 	movi	r2,56
   2bb20:	1100a40e 	bge	r2,r4,2bdb4 <__adddf3+0x4ec>
   2bb24:	498cb03a 	or	r6,r9,r6
   2bb28:	300ac03a 	cmpne	r5,r6,zero
   2bb2c:	0013883a 	mov	r9,zero
   2bb30:	2c4b883a 	add	r5,r5,r17
   2bb34:	2c63803a 	cmpltu	r17,r5,r17
   2bb38:	4a11883a 	add	r8,r9,r8
   2bb3c:	8a11883a 	add	r8,r17,r8
   2bb40:	2823883a 	mov	r17,r5
   2bb44:	4080202c 	andhi	r2,r8,128
   2bb48:	103fe026 	beq	r2,zero,2bacc <__alt_data_end+0xfffebacc>
   2bb4c:	84000044 	addi	r16,r16,1
   2bb50:	0081ffc4 	movi	r2,2047
   2bb54:	8080d226 	beq	r16,r2,2bea0 <__adddf3+0x5d8>
   2bb58:	00bfe034 	movhi	r2,65408
   2bb5c:	10bfffc4 	addi	r2,r2,-1
   2bb60:	4090703a 	and	r8,r8,r2
   2bb64:	880ad07a 	srli	r5,r17,1
   2bb68:	400897fa 	slli	r4,r8,31
   2bb6c:	88c0004c 	andi	r3,r17,1
   2bb70:	28e2b03a 	or	r17,r5,r3
   2bb74:	4010d07a 	srli	r8,r8,1
   2bb78:	2462b03a 	or	r17,r4,r17
   2bb7c:	003f7106 	br	2b944 <__alt_data_end+0xfffeb944>
   2bb80:	4088b03a 	or	r4,r8,r2
   2bb84:	20014526 	beq	r4,zero,2c09c <__adddf3+0x7d4>
   2bb88:	01000434 	movhi	r4,16
   2bb8c:	42000234 	orhi	r8,r8,8
   2bb90:	213fffc4 	addi	r4,r4,-1
   2bb94:	4110703a 	and	r8,r8,r4
   2bb98:	003f8206 	br	2b9a4 <__alt_data_end+0xfffeb9a4>
   2bb9c:	18ffffc4 	addi	r3,r3,-1
   2bba0:	1800491e 	bne	r3,zero,2bcc8 <__adddf3+0x400>
   2bba4:	898bc83a 	sub	r5,r17,r6
   2bba8:	8963803a 	cmpltu	r17,r17,r5
   2bbac:	4251c83a 	sub	r8,r8,r9
   2bbb0:	4451c83a 	sub	r8,r8,r17
   2bbb4:	2823883a 	mov	r17,r5
   2bbb8:	003f9f06 	br	2ba38 <__alt_data_end+0xfffeba38>
   2bbbc:	4984b03a 	or	r2,r9,r6
   2bbc0:	103f6026 	beq	r2,zero,2b944 <__alt_data_end+0xfffeb944>
   2bbc4:	213fffc4 	addi	r4,r4,-1
   2bbc8:	2000931e 	bne	r4,zero,2be18 <__adddf3+0x550>
   2bbcc:	898d883a 	add	r6,r17,r6
   2bbd0:	3463803a 	cmpltu	r17,r6,r17
   2bbd4:	4251883a 	add	r8,r8,r9
   2bbd8:	8a11883a 	add	r8,r17,r8
   2bbdc:	3023883a 	mov	r17,r6
   2bbe0:	003fd806 	br	2bb44 <__alt_data_end+0xfffebb44>
   2bbe4:	1800541e 	bne	r3,zero,2bd38 <__adddf3+0x470>
   2bbe8:	80800044 	addi	r2,r16,1
   2bbec:	1081ffcc 	andi	r2,r2,2047
   2bbf0:	00c00044 	movi	r3,1
   2bbf4:	1880a00e 	bge	r3,r2,2be78 <__adddf3+0x5b0>
   2bbf8:	8989c83a 	sub	r4,r17,r6
   2bbfc:	8905803a 	cmpltu	r2,r17,r4
   2bc00:	4267c83a 	sub	r19,r8,r9
   2bc04:	98a7c83a 	sub	r19,r19,r2
   2bc08:	9880202c 	andhi	r2,r19,128
   2bc0c:	10006326 	beq	r2,zero,2bd9c <__adddf3+0x4d4>
   2bc10:	3463c83a 	sub	r17,r6,r17
   2bc14:	4a07c83a 	sub	r3,r9,r8
   2bc18:	344d803a 	cmpltu	r6,r6,r17
   2bc1c:	19a7c83a 	sub	r19,r3,r6
   2bc20:	3825883a 	mov	r18,r7
   2bc24:	983f8a1e 	bne	r19,zero,2ba50 <__alt_data_end+0xfffeba50>
   2bc28:	8809883a 	mov	r4,r17
   2bc2c:	00218340 	call	21834 <__clzsi2>
   2bc30:	10800804 	addi	r2,r2,32
   2bc34:	10fffe04 	addi	r3,r2,-8
   2bc38:	010007c4 	movi	r4,31
   2bc3c:	20ff890e 	bge	r4,r3,2ba64 <__alt_data_end+0xfffeba64>
   2bc40:	10bff604 	addi	r2,r2,-40
   2bc44:	8884983a 	sll	r2,r17,r2
   2bc48:	0023883a 	mov	r17,zero
   2bc4c:	1c3f8c0e 	bge	r3,r16,2ba80 <__alt_data_end+0xfffeba80>
   2bc50:	023fe034 	movhi	r8,65408
   2bc54:	423fffc4 	addi	r8,r8,-1
   2bc58:	80e1c83a 	sub	r16,r16,r3
   2bc5c:	1210703a 	and	r8,r2,r8
   2bc60:	003f3806 	br	2b944 <__alt_data_end+0xfffeb944>
   2bc64:	9007883a 	mov	r3,r18
   2bc68:	0011883a 	mov	r8,zero
   2bc6c:	0005883a 	mov	r2,zero
   2bc70:	003f4c06 	br	2b9a4 <__alt_data_end+0xfffeb9a4>
   2bc74:	498cb03a 	or	r6,r9,r6
   2bc78:	300cc03a 	cmpne	r6,r6,zero
   2bc7c:	0007883a 	mov	r3,zero
   2bc80:	003f6806 	br	2ba24 <__alt_data_end+0xfffeba24>
   2bc84:	20009c1e 	bne	r4,zero,2bef8 <__adddf3+0x630>
   2bc88:	80800044 	addi	r2,r16,1
   2bc8c:	1141ffcc 	andi	r5,r2,2047
   2bc90:	01000044 	movi	r4,1
   2bc94:	2140670e 	bge	r4,r5,2be34 <__adddf3+0x56c>
   2bc98:	0101ffc4 	movi	r4,2047
   2bc9c:	11007f26 	beq	r2,r4,2be9c <__adddf3+0x5d4>
   2bca0:	898d883a 	add	r6,r17,r6
   2bca4:	4247883a 	add	r3,r8,r9
   2bca8:	3451803a 	cmpltu	r8,r6,r17
   2bcac:	40d1883a 	add	r8,r8,r3
   2bcb0:	402297fa 	slli	r17,r8,31
   2bcb4:	300cd07a 	srli	r6,r6,1
   2bcb8:	4010d07a 	srli	r8,r8,1
   2bcbc:	1021883a 	mov	r16,r2
   2bcc0:	89a2b03a 	or	r17,r17,r6
   2bcc4:	003f1f06 	br	2b944 <__alt_data_end+0xfffeb944>
   2bcc8:	0081ffc4 	movi	r2,2047
   2bccc:	80bf481e 	bne	r16,r2,2b9f0 <__alt_data_end+0xfffeb9f0>
   2bcd0:	003f1c06 	br	2b944 <__alt_data_end+0xfffeb944>
   2bcd4:	843ff844 	addi	r16,r16,-31
   2bcd8:	01000804 	movi	r4,32
   2bcdc:	1406d83a 	srl	r3,r2,r16
   2bce0:	41005026 	beq	r8,r4,2be24 <__adddf3+0x55c>
   2bce4:	01001004 	movi	r4,64
   2bce8:	2211c83a 	sub	r8,r4,r8
   2bcec:	1204983a 	sll	r2,r2,r8
   2bcf0:	88a2b03a 	or	r17,r17,r2
   2bcf4:	8822c03a 	cmpne	r17,r17,zero
   2bcf8:	1c62b03a 	or	r17,r3,r17
   2bcfc:	0011883a 	mov	r8,zero
   2bd00:	0021883a 	mov	r16,zero
   2bd04:	003f7106 	br	2bacc <__alt_data_end+0xfffebacc>
   2bd08:	193ff804 	addi	r4,r3,-32
   2bd0c:	00800804 	movi	r2,32
   2bd10:	4908d83a 	srl	r4,r9,r4
   2bd14:	18804526 	beq	r3,r2,2be2c <__adddf3+0x564>
   2bd18:	00801004 	movi	r2,64
   2bd1c:	10c5c83a 	sub	r2,r2,r3
   2bd20:	4886983a 	sll	r3,r9,r2
   2bd24:	198cb03a 	or	r6,r3,r6
   2bd28:	300cc03a 	cmpne	r6,r6,zero
   2bd2c:	218cb03a 	or	r6,r4,r6
   2bd30:	0007883a 	mov	r3,zero
   2bd34:	003f3b06 	br	2ba24 <__alt_data_end+0xfffeba24>
   2bd38:	80002a26 	beq	r16,zero,2bde4 <__adddf3+0x51c>
   2bd3c:	0101ffc4 	movi	r4,2047
   2bd40:	11006826 	beq	r2,r4,2bee4 <__adddf3+0x61c>
   2bd44:	00c7c83a 	sub	r3,zero,r3
   2bd48:	42002034 	orhi	r8,r8,128
   2bd4c:	01000e04 	movi	r4,56
   2bd50:	20c07c16 	blt	r4,r3,2bf44 <__adddf3+0x67c>
   2bd54:	010007c4 	movi	r4,31
   2bd58:	20c0da16 	blt	r4,r3,2c0c4 <__adddf3+0x7fc>
   2bd5c:	01000804 	movi	r4,32
   2bd60:	20c9c83a 	sub	r4,r4,r3
   2bd64:	4114983a 	sll	r10,r8,r4
   2bd68:	88cad83a 	srl	r5,r17,r3
   2bd6c:	8908983a 	sll	r4,r17,r4
   2bd70:	40c6d83a 	srl	r3,r8,r3
   2bd74:	5162b03a 	or	r17,r10,r5
   2bd78:	2008c03a 	cmpne	r4,r4,zero
   2bd7c:	8922b03a 	or	r17,r17,r4
   2bd80:	3463c83a 	sub	r17,r6,r17
   2bd84:	48c7c83a 	sub	r3,r9,r3
   2bd88:	344d803a 	cmpltu	r6,r6,r17
   2bd8c:	1991c83a 	sub	r8,r3,r6
   2bd90:	1021883a 	mov	r16,r2
   2bd94:	3825883a 	mov	r18,r7
   2bd98:	003f2706 	br	2ba38 <__alt_data_end+0xfffeba38>
   2bd9c:	24d0b03a 	or	r8,r4,r19
   2bda0:	40001b1e 	bne	r8,zero,2be10 <__adddf3+0x548>
   2bda4:	0005883a 	mov	r2,zero
   2bda8:	0007883a 	mov	r3,zero
   2bdac:	0021883a 	mov	r16,zero
   2bdb0:	003f4d06 	br	2bae8 <__alt_data_end+0xfffebae8>
   2bdb4:	008007c4 	movi	r2,31
   2bdb8:	11003c16 	blt	r2,r4,2beac <__adddf3+0x5e4>
   2bdbc:	00800804 	movi	r2,32
   2bdc0:	1105c83a 	sub	r2,r2,r4
   2bdc4:	488e983a 	sll	r7,r9,r2
   2bdc8:	310ad83a 	srl	r5,r6,r4
   2bdcc:	3084983a 	sll	r2,r6,r2
   2bdd0:	4912d83a 	srl	r9,r9,r4
   2bdd4:	394ab03a 	or	r5,r7,r5
   2bdd8:	1004c03a 	cmpne	r2,r2,zero
   2bddc:	288ab03a 	or	r5,r5,r2
   2bde0:	003f5306 	br	2bb30 <__alt_data_end+0xfffebb30>
   2bde4:	4448b03a 	or	r4,r8,r17
   2bde8:	20003e26 	beq	r4,zero,2bee4 <__adddf3+0x61c>
   2bdec:	00c6303a 	nor	r3,zero,r3
   2bdf0:	18003a1e 	bne	r3,zero,2bedc <__adddf3+0x614>
   2bdf4:	3463c83a 	sub	r17,r6,r17
   2bdf8:	4a07c83a 	sub	r3,r9,r8
   2bdfc:	344d803a 	cmpltu	r6,r6,r17
   2be00:	1991c83a 	sub	r8,r3,r6
   2be04:	1021883a 	mov	r16,r2
   2be08:	3825883a 	mov	r18,r7
   2be0c:	003f0a06 	br	2ba38 <__alt_data_end+0xfffeba38>
   2be10:	2023883a 	mov	r17,r4
   2be14:	003f0d06 	br	2ba4c <__alt_data_end+0xfffeba4c>
   2be18:	0081ffc4 	movi	r2,2047
   2be1c:	80bf3f1e 	bne	r16,r2,2bb1c <__alt_data_end+0xfffebb1c>
   2be20:	003ec806 	br	2b944 <__alt_data_end+0xfffeb944>
   2be24:	0005883a 	mov	r2,zero
   2be28:	003fb106 	br	2bcf0 <__alt_data_end+0xfffebcf0>
   2be2c:	0007883a 	mov	r3,zero
   2be30:	003fbc06 	br	2bd24 <__alt_data_end+0xfffebd24>
   2be34:	4444b03a 	or	r2,r8,r17
   2be38:	8000871e 	bne	r16,zero,2c058 <__adddf3+0x790>
   2be3c:	1000ba26 	beq	r2,zero,2c128 <__adddf3+0x860>
   2be40:	4984b03a 	or	r2,r9,r6
   2be44:	103ebf26 	beq	r2,zero,2b944 <__alt_data_end+0xfffeb944>
   2be48:	8985883a 	add	r2,r17,r6
   2be4c:	4247883a 	add	r3,r8,r9
   2be50:	1451803a 	cmpltu	r8,r2,r17
   2be54:	40d1883a 	add	r8,r8,r3
   2be58:	40c0202c 	andhi	r3,r8,128
   2be5c:	1023883a 	mov	r17,r2
   2be60:	183f1a26 	beq	r3,zero,2bacc <__alt_data_end+0xfffebacc>
   2be64:	00bfe034 	movhi	r2,65408
   2be68:	10bfffc4 	addi	r2,r2,-1
   2be6c:	2021883a 	mov	r16,r4
   2be70:	4090703a 	and	r8,r8,r2
   2be74:	003eb306 	br	2b944 <__alt_data_end+0xfffeb944>
   2be78:	4444b03a 	or	r2,r8,r17
   2be7c:	8000291e 	bne	r16,zero,2bf24 <__adddf3+0x65c>
   2be80:	10004b1e 	bne	r2,zero,2bfb0 <__adddf3+0x6e8>
   2be84:	4990b03a 	or	r8,r9,r6
   2be88:	40008b26 	beq	r8,zero,2c0b8 <__adddf3+0x7f0>
   2be8c:	4811883a 	mov	r8,r9
   2be90:	3023883a 	mov	r17,r6
   2be94:	3825883a 	mov	r18,r7
   2be98:	003eaa06 	br	2b944 <__alt_data_end+0xfffeb944>
   2be9c:	1021883a 	mov	r16,r2
   2bea0:	0011883a 	mov	r8,zero
   2bea4:	0005883a 	mov	r2,zero
   2bea8:	003f0f06 	br	2bae8 <__alt_data_end+0xfffebae8>
   2beac:	217ff804 	addi	r5,r4,-32
   2beb0:	00800804 	movi	r2,32
   2beb4:	494ad83a 	srl	r5,r9,r5
   2beb8:	20807d26 	beq	r4,r2,2c0b0 <__adddf3+0x7e8>
   2bebc:	00801004 	movi	r2,64
   2bec0:	1109c83a 	sub	r4,r2,r4
   2bec4:	4912983a 	sll	r9,r9,r4
   2bec8:	498cb03a 	or	r6,r9,r6
   2becc:	300cc03a 	cmpne	r6,r6,zero
   2bed0:	298ab03a 	or	r5,r5,r6
   2bed4:	0013883a 	mov	r9,zero
   2bed8:	003f1506 	br	2bb30 <__alt_data_end+0xfffebb30>
   2bedc:	0101ffc4 	movi	r4,2047
   2bee0:	113f9a1e 	bne	r2,r4,2bd4c <__alt_data_end+0xfffebd4c>
   2bee4:	4811883a 	mov	r8,r9
   2bee8:	3023883a 	mov	r17,r6
   2beec:	1021883a 	mov	r16,r2
   2bef0:	3825883a 	mov	r18,r7
   2bef4:	003e9306 	br	2b944 <__alt_data_end+0xfffeb944>
   2bef8:	8000161e 	bne	r16,zero,2bf54 <__adddf3+0x68c>
   2befc:	444ab03a 	or	r5,r8,r17
   2bf00:	28005126 	beq	r5,zero,2c048 <__adddf3+0x780>
   2bf04:	0108303a 	nor	r4,zero,r4
   2bf08:	20004d1e 	bne	r4,zero,2c040 <__adddf3+0x778>
   2bf0c:	89a3883a 	add	r17,r17,r6
   2bf10:	4253883a 	add	r9,r8,r9
   2bf14:	898d803a 	cmpltu	r6,r17,r6
   2bf18:	3251883a 	add	r8,r6,r9
   2bf1c:	1021883a 	mov	r16,r2
   2bf20:	003f0806 	br	2bb44 <__alt_data_end+0xfffebb44>
   2bf24:	1000301e 	bne	r2,zero,2bfe8 <__adddf3+0x720>
   2bf28:	4984b03a 	or	r2,r9,r6
   2bf2c:	10007126 	beq	r2,zero,2c0f4 <__adddf3+0x82c>
   2bf30:	4811883a 	mov	r8,r9
   2bf34:	3023883a 	mov	r17,r6
   2bf38:	3825883a 	mov	r18,r7
   2bf3c:	0401ffc4 	movi	r16,2047
   2bf40:	003e8006 	br	2b944 <__alt_data_end+0xfffeb944>
   2bf44:	4462b03a 	or	r17,r8,r17
   2bf48:	8822c03a 	cmpne	r17,r17,zero
   2bf4c:	0007883a 	mov	r3,zero
   2bf50:	003f8b06 	br	2bd80 <__alt_data_end+0xfffebd80>
   2bf54:	0141ffc4 	movi	r5,2047
   2bf58:	11403b26 	beq	r2,r5,2c048 <__adddf3+0x780>
   2bf5c:	0109c83a 	sub	r4,zero,r4
   2bf60:	42002034 	orhi	r8,r8,128
   2bf64:	01400e04 	movi	r5,56
   2bf68:	29006716 	blt	r5,r4,2c108 <__adddf3+0x840>
   2bf6c:	014007c4 	movi	r5,31
   2bf70:	29007016 	blt	r5,r4,2c134 <__adddf3+0x86c>
   2bf74:	01400804 	movi	r5,32
   2bf78:	290bc83a 	sub	r5,r5,r4
   2bf7c:	4154983a 	sll	r10,r8,r5
   2bf80:	890ed83a 	srl	r7,r17,r4
   2bf84:	894a983a 	sll	r5,r17,r5
   2bf88:	4108d83a 	srl	r4,r8,r4
   2bf8c:	51e2b03a 	or	r17,r10,r7
   2bf90:	280ac03a 	cmpne	r5,r5,zero
   2bf94:	8962b03a 	or	r17,r17,r5
   2bf98:	89a3883a 	add	r17,r17,r6
   2bf9c:	2253883a 	add	r9,r4,r9
   2bfa0:	898d803a 	cmpltu	r6,r17,r6
   2bfa4:	3251883a 	add	r8,r6,r9
   2bfa8:	1021883a 	mov	r16,r2
   2bfac:	003ee506 	br	2bb44 <__alt_data_end+0xfffebb44>
   2bfb0:	4984b03a 	or	r2,r9,r6
   2bfb4:	103e6326 	beq	r2,zero,2b944 <__alt_data_end+0xfffeb944>
   2bfb8:	8987c83a 	sub	r3,r17,r6
   2bfbc:	88c9803a 	cmpltu	r4,r17,r3
   2bfc0:	4245c83a 	sub	r2,r8,r9
   2bfc4:	1105c83a 	sub	r2,r2,r4
   2bfc8:	1100202c 	andhi	r4,r2,128
   2bfcc:	203ebb26 	beq	r4,zero,2babc <__alt_data_end+0xfffebabc>
   2bfd0:	3463c83a 	sub	r17,r6,r17
   2bfd4:	4a07c83a 	sub	r3,r9,r8
   2bfd8:	344d803a 	cmpltu	r6,r6,r17
   2bfdc:	1991c83a 	sub	r8,r3,r6
   2bfe0:	3825883a 	mov	r18,r7
   2bfe4:	003e5706 	br	2b944 <__alt_data_end+0xfffeb944>
   2bfe8:	4984b03a 	or	r2,r9,r6
   2bfec:	10002e26 	beq	r2,zero,2c0a8 <__adddf3+0x7e0>
   2bff0:	4004d0fa 	srli	r2,r8,3
   2bff4:	8822d0fa 	srli	r17,r17,3
   2bff8:	4010977a 	slli	r8,r8,29
   2bffc:	10c0022c 	andhi	r3,r2,8
   2c000:	4462b03a 	or	r17,r8,r17
   2c004:	18000826 	beq	r3,zero,2c028 <__adddf3+0x760>
   2c008:	4808d0fa 	srli	r4,r9,3
   2c00c:	20c0022c 	andhi	r3,r4,8
   2c010:	1800051e 	bne	r3,zero,2c028 <__adddf3+0x760>
   2c014:	300cd0fa 	srli	r6,r6,3
   2c018:	4806977a 	slli	r3,r9,29
   2c01c:	2005883a 	mov	r2,r4
   2c020:	3825883a 	mov	r18,r7
   2c024:	19a2b03a 	or	r17,r3,r6
   2c028:	8810d77a 	srli	r8,r17,29
   2c02c:	100490fa 	slli	r2,r2,3
   2c030:	882290fa 	slli	r17,r17,3
   2c034:	0401ffc4 	movi	r16,2047
   2c038:	4090b03a 	or	r8,r8,r2
   2c03c:	003e4106 	br	2b944 <__alt_data_end+0xfffeb944>
   2c040:	0141ffc4 	movi	r5,2047
   2c044:	117fc71e 	bne	r2,r5,2bf64 <__alt_data_end+0xfffebf64>
   2c048:	4811883a 	mov	r8,r9
   2c04c:	3023883a 	mov	r17,r6
   2c050:	1021883a 	mov	r16,r2
   2c054:	003e3b06 	br	2b944 <__alt_data_end+0xfffeb944>
   2c058:	10002f26 	beq	r2,zero,2c118 <__adddf3+0x850>
   2c05c:	4984b03a 	or	r2,r9,r6
   2c060:	10001126 	beq	r2,zero,2c0a8 <__adddf3+0x7e0>
   2c064:	4004d0fa 	srli	r2,r8,3
   2c068:	8822d0fa 	srli	r17,r17,3
   2c06c:	4010977a 	slli	r8,r8,29
   2c070:	10c0022c 	andhi	r3,r2,8
   2c074:	4462b03a 	or	r17,r8,r17
   2c078:	183feb26 	beq	r3,zero,2c028 <__alt_data_end+0xfffec028>
   2c07c:	4808d0fa 	srli	r4,r9,3
   2c080:	20c0022c 	andhi	r3,r4,8
   2c084:	183fe81e 	bne	r3,zero,2c028 <__alt_data_end+0xfffec028>
   2c088:	300cd0fa 	srli	r6,r6,3
   2c08c:	4806977a 	slli	r3,r9,29
   2c090:	2005883a 	mov	r2,r4
   2c094:	19a2b03a 	or	r17,r3,r6
   2c098:	003fe306 	br	2c028 <__alt_data_end+0xfffec028>
   2c09c:	0011883a 	mov	r8,zero
   2c0a0:	0005883a 	mov	r2,zero
   2c0a4:	003e3f06 	br	2b9a4 <__alt_data_end+0xfffeb9a4>
   2c0a8:	0401ffc4 	movi	r16,2047
   2c0ac:	003e2506 	br	2b944 <__alt_data_end+0xfffeb944>
   2c0b0:	0013883a 	mov	r9,zero
   2c0b4:	003f8406 	br	2bec8 <__alt_data_end+0xfffebec8>
   2c0b8:	0005883a 	mov	r2,zero
   2c0bc:	0007883a 	mov	r3,zero
   2c0c0:	003e8906 	br	2bae8 <__alt_data_end+0xfffebae8>
   2c0c4:	197ff804 	addi	r5,r3,-32
   2c0c8:	01000804 	movi	r4,32
   2c0cc:	414ad83a 	srl	r5,r8,r5
   2c0d0:	19002426 	beq	r3,r4,2c164 <__adddf3+0x89c>
   2c0d4:	01001004 	movi	r4,64
   2c0d8:	20c7c83a 	sub	r3,r4,r3
   2c0dc:	40c6983a 	sll	r3,r8,r3
   2c0e0:	1c46b03a 	or	r3,r3,r17
   2c0e4:	1806c03a 	cmpne	r3,r3,zero
   2c0e8:	28e2b03a 	or	r17,r5,r3
   2c0ec:	0007883a 	mov	r3,zero
   2c0f0:	003f2306 	br	2bd80 <__alt_data_end+0xfffebd80>
   2c0f4:	0007883a 	mov	r3,zero
   2c0f8:	5811883a 	mov	r8,r11
   2c0fc:	00bfffc4 	movi	r2,-1
   2c100:	0401ffc4 	movi	r16,2047
   2c104:	003e7806 	br	2bae8 <__alt_data_end+0xfffebae8>
   2c108:	4462b03a 	or	r17,r8,r17
   2c10c:	8822c03a 	cmpne	r17,r17,zero
   2c110:	0009883a 	mov	r4,zero
   2c114:	003fa006 	br	2bf98 <__alt_data_end+0xfffebf98>
   2c118:	4811883a 	mov	r8,r9
   2c11c:	3023883a 	mov	r17,r6
   2c120:	0401ffc4 	movi	r16,2047
   2c124:	003e0706 	br	2b944 <__alt_data_end+0xfffeb944>
   2c128:	4811883a 	mov	r8,r9
   2c12c:	3023883a 	mov	r17,r6
   2c130:	003e0406 	br	2b944 <__alt_data_end+0xfffeb944>
   2c134:	21fff804 	addi	r7,r4,-32
   2c138:	01400804 	movi	r5,32
   2c13c:	41ced83a 	srl	r7,r8,r7
   2c140:	21400a26 	beq	r4,r5,2c16c <__adddf3+0x8a4>
   2c144:	01401004 	movi	r5,64
   2c148:	2909c83a 	sub	r4,r5,r4
   2c14c:	4108983a 	sll	r4,r8,r4
   2c150:	2448b03a 	or	r4,r4,r17
   2c154:	2008c03a 	cmpne	r4,r4,zero
   2c158:	3922b03a 	or	r17,r7,r4
   2c15c:	0009883a 	mov	r4,zero
   2c160:	003f8d06 	br	2bf98 <__alt_data_end+0xfffebf98>
   2c164:	0007883a 	mov	r3,zero
   2c168:	003fdd06 	br	2c0e0 <__alt_data_end+0xfffec0e0>
   2c16c:	0009883a 	mov	r4,zero
   2c170:	003ff706 	br	2c150 <__alt_data_end+0xfffec150>

0002c174 <__divdf3>:
   2c174:	defff204 	addi	sp,sp,-56
   2c178:	dd400915 	stw	r21,36(sp)
   2c17c:	282ad53a 	srli	r21,r5,20
   2c180:	dd000815 	stw	r20,32(sp)
   2c184:	2828d7fa 	srli	r20,r5,31
   2c188:	dc000415 	stw	r16,16(sp)
   2c18c:	04000434 	movhi	r16,16
   2c190:	df000c15 	stw	fp,48(sp)
   2c194:	843fffc4 	addi	r16,r16,-1
   2c198:	dfc00d15 	stw	ra,52(sp)
   2c19c:	ddc00b15 	stw	r23,44(sp)
   2c1a0:	dd800a15 	stw	r22,40(sp)
   2c1a4:	dcc00715 	stw	r19,28(sp)
   2c1a8:	dc800615 	stw	r18,24(sp)
   2c1ac:	dc400515 	stw	r17,20(sp)
   2c1b0:	ad41ffcc 	andi	r21,r21,2047
   2c1b4:	2c20703a 	and	r16,r5,r16
   2c1b8:	a7003fcc 	andi	fp,r20,255
   2c1bc:	a8006126 	beq	r21,zero,2c344 <__divdf3+0x1d0>
   2c1c0:	0081ffc4 	movi	r2,2047
   2c1c4:	2025883a 	mov	r18,r4
   2c1c8:	a8803726 	beq	r21,r2,2c2a8 <__divdf3+0x134>
   2c1cc:	80800434 	orhi	r2,r16,16
   2c1d0:	100490fa 	slli	r2,r2,3
   2c1d4:	2020d77a 	srli	r16,r4,29
   2c1d8:	202490fa 	slli	r18,r4,3
   2c1dc:	ad7f0044 	addi	r21,r21,-1023
   2c1e0:	80a0b03a 	or	r16,r16,r2
   2c1e4:	0027883a 	mov	r19,zero
   2c1e8:	0013883a 	mov	r9,zero
   2c1ec:	3804d53a 	srli	r2,r7,20
   2c1f0:	382cd7fa 	srli	r22,r7,31
   2c1f4:	04400434 	movhi	r17,16
   2c1f8:	8c7fffc4 	addi	r17,r17,-1
   2c1fc:	1081ffcc 	andi	r2,r2,2047
   2c200:	3011883a 	mov	r8,r6
   2c204:	3c62703a 	and	r17,r7,r17
   2c208:	b5c03fcc 	andi	r23,r22,255
   2c20c:	10006c26 	beq	r2,zero,2c3c0 <__divdf3+0x24c>
   2c210:	00c1ffc4 	movi	r3,2047
   2c214:	10c06426 	beq	r2,r3,2c3a8 <__divdf3+0x234>
   2c218:	88c00434 	orhi	r3,r17,16
   2c21c:	180690fa 	slli	r3,r3,3
   2c220:	3022d77a 	srli	r17,r6,29
   2c224:	301090fa 	slli	r8,r6,3
   2c228:	10bf0044 	addi	r2,r2,-1023
   2c22c:	88e2b03a 	or	r17,r17,r3
   2c230:	000f883a 	mov	r7,zero
   2c234:	a58cf03a 	xor	r6,r20,r22
   2c238:	3cc8b03a 	or	r4,r7,r19
   2c23c:	a8abc83a 	sub	r21,r21,r2
   2c240:	008003c4 	movi	r2,15
   2c244:	3007883a 	mov	r3,r6
   2c248:	34c03fcc 	andi	r19,r6,255
   2c24c:	11009036 	bltu	r2,r4,2c490 <__divdf3+0x31c>
   2c250:	200890ba 	slli	r4,r4,2
   2c254:	008000f4 	movhi	r2,3
   2c258:	10b09a04 	addi	r2,r2,-15768
   2c25c:	2089883a 	add	r4,r4,r2
   2c260:	20800017 	ldw	r2,0(r4)
   2c264:	1000683a 	jmp	r2
   2c268:	0002c490 	cmplti	zero,zero,2834
   2c26c:	0002c2e0 	cmpeqi	zero,zero,2827
   2c270:	0002c480 	call	2c48 <__alt_mem_onchip_memory2_0-0x1d3b8>
   2c274:	0002c2d4 	movui	zero,2827
   2c278:	0002c480 	call	2c48 <__alt_mem_onchip_memory2_0-0x1d3b8>
   2c27c:	0002c454 	movui	zero,2833
   2c280:	0002c480 	call	2c48 <__alt_mem_onchip_memory2_0-0x1d3b8>
   2c284:	0002c2d4 	movui	zero,2827
   2c288:	0002c2e0 	cmpeqi	zero,zero,2827
   2c28c:	0002c2e0 	cmpeqi	zero,zero,2827
   2c290:	0002c454 	movui	zero,2833
   2c294:	0002c2d4 	movui	zero,2827
   2c298:	0002c2c4 	movi	zero,2827
   2c29c:	0002c2c4 	movi	zero,2827
   2c2a0:	0002c2c4 	movi	zero,2827
   2c2a4:	0002c774 	movhi	zero,2845
   2c2a8:	2404b03a 	or	r2,r4,r16
   2c2ac:	1000661e 	bne	r2,zero,2c448 <__divdf3+0x2d4>
   2c2b0:	04c00204 	movi	r19,8
   2c2b4:	0021883a 	mov	r16,zero
   2c2b8:	0025883a 	mov	r18,zero
   2c2bc:	02400084 	movi	r9,2
   2c2c0:	003fca06 	br	2c1ec <__alt_data_end+0xfffec1ec>
   2c2c4:	8023883a 	mov	r17,r16
   2c2c8:	9011883a 	mov	r8,r18
   2c2cc:	e02f883a 	mov	r23,fp
   2c2d0:	480f883a 	mov	r7,r9
   2c2d4:	00800084 	movi	r2,2
   2c2d8:	3881311e 	bne	r7,r2,2c7a0 <__divdf3+0x62c>
   2c2dc:	b827883a 	mov	r19,r23
   2c2e0:	98c0004c 	andi	r3,r19,1
   2c2e4:	0081ffc4 	movi	r2,2047
   2c2e8:	000b883a 	mov	r5,zero
   2c2ec:	0025883a 	mov	r18,zero
   2c2f0:	1004953a 	slli	r2,r2,20
   2c2f4:	18c03fcc 	andi	r3,r3,255
   2c2f8:	04400434 	movhi	r17,16
   2c2fc:	8c7fffc4 	addi	r17,r17,-1
   2c300:	180697fa 	slli	r3,r3,31
   2c304:	2c4a703a 	and	r5,r5,r17
   2c308:	288ab03a 	or	r5,r5,r2
   2c30c:	28c6b03a 	or	r3,r5,r3
   2c310:	9005883a 	mov	r2,r18
   2c314:	dfc00d17 	ldw	ra,52(sp)
   2c318:	df000c17 	ldw	fp,48(sp)
   2c31c:	ddc00b17 	ldw	r23,44(sp)
   2c320:	dd800a17 	ldw	r22,40(sp)
   2c324:	dd400917 	ldw	r21,36(sp)
   2c328:	dd000817 	ldw	r20,32(sp)
   2c32c:	dcc00717 	ldw	r19,28(sp)
   2c330:	dc800617 	ldw	r18,24(sp)
   2c334:	dc400517 	ldw	r17,20(sp)
   2c338:	dc000417 	ldw	r16,16(sp)
   2c33c:	dec00e04 	addi	sp,sp,56
   2c340:	f800283a 	ret
   2c344:	2404b03a 	or	r2,r4,r16
   2c348:	2027883a 	mov	r19,r4
   2c34c:	10003926 	beq	r2,zero,2c434 <__divdf3+0x2c0>
   2c350:	80012e26 	beq	r16,zero,2c80c <__divdf3+0x698>
   2c354:	8009883a 	mov	r4,r16
   2c358:	d9800315 	stw	r6,12(sp)
   2c35c:	d9c00215 	stw	r7,8(sp)
   2c360:	00218340 	call	21834 <__clzsi2>
   2c364:	d9800317 	ldw	r6,12(sp)
   2c368:	d9c00217 	ldw	r7,8(sp)
   2c36c:	113ffd44 	addi	r4,r2,-11
   2c370:	00c00704 	movi	r3,28
   2c374:	19012116 	blt	r3,r4,2c7fc <__divdf3+0x688>
   2c378:	00c00744 	movi	r3,29
   2c37c:	147ffe04 	addi	r17,r2,-8
   2c380:	1907c83a 	sub	r3,r3,r4
   2c384:	8460983a 	sll	r16,r16,r17
   2c388:	98c6d83a 	srl	r3,r19,r3
   2c38c:	9c64983a 	sll	r18,r19,r17
   2c390:	1c20b03a 	or	r16,r3,r16
   2c394:	1080fcc4 	addi	r2,r2,1011
   2c398:	00abc83a 	sub	r21,zero,r2
   2c39c:	0027883a 	mov	r19,zero
   2c3a0:	0013883a 	mov	r9,zero
   2c3a4:	003f9106 	br	2c1ec <__alt_data_end+0xfffec1ec>
   2c3a8:	3446b03a 	or	r3,r6,r17
   2c3ac:	18001f1e 	bne	r3,zero,2c42c <__divdf3+0x2b8>
   2c3b0:	0023883a 	mov	r17,zero
   2c3b4:	0011883a 	mov	r8,zero
   2c3b8:	01c00084 	movi	r7,2
   2c3bc:	003f9d06 	br	2c234 <__alt_data_end+0xfffec234>
   2c3c0:	3446b03a 	or	r3,r6,r17
   2c3c4:	18001526 	beq	r3,zero,2c41c <__divdf3+0x2a8>
   2c3c8:	88011b26 	beq	r17,zero,2c838 <__divdf3+0x6c4>
   2c3cc:	8809883a 	mov	r4,r17
   2c3d0:	d9800315 	stw	r6,12(sp)
   2c3d4:	da400115 	stw	r9,4(sp)
   2c3d8:	00218340 	call	21834 <__clzsi2>
   2c3dc:	d9800317 	ldw	r6,12(sp)
   2c3e0:	da400117 	ldw	r9,4(sp)
   2c3e4:	113ffd44 	addi	r4,r2,-11
   2c3e8:	00c00704 	movi	r3,28
   2c3ec:	19010e16 	blt	r3,r4,2c828 <__divdf3+0x6b4>
   2c3f0:	00c00744 	movi	r3,29
   2c3f4:	123ffe04 	addi	r8,r2,-8
   2c3f8:	1907c83a 	sub	r3,r3,r4
   2c3fc:	8a22983a 	sll	r17,r17,r8
   2c400:	30c6d83a 	srl	r3,r6,r3
   2c404:	3210983a 	sll	r8,r6,r8
   2c408:	1c62b03a 	or	r17,r3,r17
   2c40c:	1080fcc4 	addi	r2,r2,1011
   2c410:	0085c83a 	sub	r2,zero,r2
   2c414:	000f883a 	mov	r7,zero
   2c418:	003f8606 	br	2c234 <__alt_data_end+0xfffec234>
   2c41c:	0023883a 	mov	r17,zero
   2c420:	0011883a 	mov	r8,zero
   2c424:	01c00044 	movi	r7,1
   2c428:	003f8206 	br	2c234 <__alt_data_end+0xfffec234>
   2c42c:	01c000c4 	movi	r7,3
   2c430:	003f8006 	br	2c234 <__alt_data_end+0xfffec234>
   2c434:	04c00104 	movi	r19,4
   2c438:	0021883a 	mov	r16,zero
   2c43c:	0025883a 	mov	r18,zero
   2c440:	02400044 	movi	r9,1
   2c444:	003f6906 	br	2c1ec <__alt_data_end+0xfffec1ec>
   2c448:	04c00304 	movi	r19,12
   2c44c:	024000c4 	movi	r9,3
   2c450:	003f6606 	br	2c1ec <__alt_data_end+0xfffec1ec>
   2c454:	01400434 	movhi	r5,16
   2c458:	0007883a 	mov	r3,zero
   2c45c:	297fffc4 	addi	r5,r5,-1
   2c460:	04bfffc4 	movi	r18,-1
   2c464:	0081ffc4 	movi	r2,2047
   2c468:	003fa106 	br	2c2f0 <__alt_data_end+0xfffec2f0>
   2c46c:	00c00044 	movi	r3,1
   2c470:	1887c83a 	sub	r3,r3,r2
   2c474:	01000e04 	movi	r4,56
   2c478:	20c1210e 	bge	r4,r3,2c900 <__divdf3+0x78c>
   2c47c:	98c0004c 	andi	r3,r19,1
   2c480:	0005883a 	mov	r2,zero
   2c484:	000b883a 	mov	r5,zero
   2c488:	0025883a 	mov	r18,zero
   2c48c:	003f9806 	br	2c2f0 <__alt_data_end+0xfffec2f0>
   2c490:	8c00fd36 	bltu	r17,r16,2c888 <__divdf3+0x714>
   2c494:	8440fb26 	beq	r16,r17,2c884 <__divdf3+0x710>
   2c498:	8007883a 	mov	r3,r16
   2c49c:	ad7fffc4 	addi	r21,r21,-1
   2c4a0:	0021883a 	mov	r16,zero
   2c4a4:	4004d63a 	srli	r2,r8,24
   2c4a8:	8822923a 	slli	r17,r17,8
   2c4ac:	1809883a 	mov	r4,r3
   2c4b0:	402c923a 	slli	r22,r8,8
   2c4b4:	88b8b03a 	or	fp,r17,r2
   2c4b8:	e028d43a 	srli	r20,fp,16
   2c4bc:	d8c00015 	stw	r3,0(sp)
   2c4c0:	e5ffffcc 	andi	r23,fp,65535
   2c4c4:	a00b883a 	mov	r5,r20
   2c4c8:	00205600 	call	20560 <__udivsi3>
   2c4cc:	d8c00017 	ldw	r3,0(sp)
   2c4d0:	a00b883a 	mov	r5,r20
   2c4d4:	d8800315 	stw	r2,12(sp)
   2c4d8:	1809883a 	mov	r4,r3
   2c4dc:	00205c40 	call	205c4 <__umodsi3>
   2c4e0:	d9800317 	ldw	r6,12(sp)
   2c4e4:	1006943a 	slli	r3,r2,16
   2c4e8:	9004d43a 	srli	r2,r18,16
   2c4ec:	b9a3383a 	mul	r17,r23,r6
   2c4f0:	10c4b03a 	or	r2,r2,r3
   2c4f4:	1440062e 	bgeu	r2,r17,2c510 <__divdf3+0x39c>
   2c4f8:	1705883a 	add	r2,r2,fp
   2c4fc:	30ffffc4 	addi	r3,r6,-1
   2c500:	1700ee36 	bltu	r2,fp,2c8bc <__divdf3+0x748>
   2c504:	1440ed2e 	bgeu	r2,r17,2c8bc <__divdf3+0x748>
   2c508:	31bfff84 	addi	r6,r6,-2
   2c50c:	1705883a 	add	r2,r2,fp
   2c510:	1463c83a 	sub	r17,r2,r17
   2c514:	a00b883a 	mov	r5,r20
   2c518:	8809883a 	mov	r4,r17
   2c51c:	d9800315 	stw	r6,12(sp)
   2c520:	00205600 	call	20560 <__udivsi3>
   2c524:	a00b883a 	mov	r5,r20
   2c528:	8809883a 	mov	r4,r17
   2c52c:	d8800215 	stw	r2,8(sp)
   2c530:	00205c40 	call	205c4 <__umodsi3>
   2c534:	d9c00217 	ldw	r7,8(sp)
   2c538:	1004943a 	slli	r2,r2,16
   2c53c:	94bfffcc 	andi	r18,r18,65535
   2c540:	b9d1383a 	mul	r8,r23,r7
   2c544:	90a4b03a 	or	r18,r18,r2
   2c548:	d9800317 	ldw	r6,12(sp)
   2c54c:	9200062e 	bgeu	r18,r8,2c568 <__divdf3+0x3f4>
   2c550:	9725883a 	add	r18,r18,fp
   2c554:	38bfffc4 	addi	r2,r7,-1
   2c558:	9700d636 	bltu	r18,fp,2c8b4 <__divdf3+0x740>
   2c55c:	9200d52e 	bgeu	r18,r8,2c8b4 <__divdf3+0x740>
   2c560:	39ffff84 	addi	r7,r7,-2
   2c564:	9725883a 	add	r18,r18,fp
   2c568:	3004943a 	slli	r2,r6,16
   2c56c:	b012d43a 	srli	r9,r22,16
   2c570:	b1bfffcc 	andi	r6,r22,65535
   2c574:	11e2b03a 	or	r17,r2,r7
   2c578:	8806d43a 	srli	r3,r17,16
   2c57c:	893fffcc 	andi	r4,r17,65535
   2c580:	218b383a 	mul	r5,r4,r6
   2c584:	30c5383a 	mul	r2,r6,r3
   2c588:	2249383a 	mul	r4,r4,r9
   2c58c:	280ed43a 	srli	r7,r5,16
   2c590:	9225c83a 	sub	r18,r18,r8
   2c594:	2089883a 	add	r4,r4,r2
   2c598:	3909883a 	add	r4,r7,r4
   2c59c:	1a47383a 	mul	r3,r3,r9
   2c5a0:	2080022e 	bgeu	r4,r2,2c5ac <__divdf3+0x438>
   2c5a4:	00800074 	movhi	r2,1
   2c5a8:	1887883a 	add	r3,r3,r2
   2c5ac:	2004d43a 	srli	r2,r4,16
   2c5b0:	2008943a 	slli	r4,r4,16
   2c5b4:	297fffcc 	andi	r5,r5,65535
   2c5b8:	10c7883a 	add	r3,r2,r3
   2c5bc:	2149883a 	add	r4,r4,r5
   2c5c0:	90c0a536 	bltu	r18,r3,2c858 <__divdf3+0x6e4>
   2c5c4:	90c0bf26 	beq	r18,r3,2c8c4 <__divdf3+0x750>
   2c5c8:	90c7c83a 	sub	r3,r18,r3
   2c5cc:	810fc83a 	sub	r7,r16,r4
   2c5d0:	81e5803a 	cmpltu	r18,r16,r7
   2c5d4:	1ca5c83a 	sub	r18,r3,r18
   2c5d8:	e480c126 	beq	fp,r18,2c8e0 <__divdf3+0x76c>
   2c5dc:	a00b883a 	mov	r5,r20
   2c5e0:	9009883a 	mov	r4,r18
   2c5e4:	d9800315 	stw	r6,12(sp)
   2c5e8:	d9c00215 	stw	r7,8(sp)
   2c5ec:	da400115 	stw	r9,4(sp)
   2c5f0:	00205600 	call	20560 <__udivsi3>
   2c5f4:	a00b883a 	mov	r5,r20
   2c5f8:	9009883a 	mov	r4,r18
   2c5fc:	d8800015 	stw	r2,0(sp)
   2c600:	00205c40 	call	205c4 <__umodsi3>
   2c604:	d9c00217 	ldw	r7,8(sp)
   2c608:	da000017 	ldw	r8,0(sp)
   2c60c:	1006943a 	slli	r3,r2,16
   2c610:	3804d43a 	srli	r2,r7,16
   2c614:	ba21383a 	mul	r16,r23,r8
   2c618:	d9800317 	ldw	r6,12(sp)
   2c61c:	10c4b03a 	or	r2,r2,r3
   2c620:	da400117 	ldw	r9,4(sp)
   2c624:	1400062e 	bgeu	r2,r16,2c640 <__divdf3+0x4cc>
   2c628:	1705883a 	add	r2,r2,fp
   2c62c:	40ffffc4 	addi	r3,r8,-1
   2c630:	1700ad36 	bltu	r2,fp,2c8e8 <__divdf3+0x774>
   2c634:	1400ac2e 	bgeu	r2,r16,2c8e8 <__divdf3+0x774>
   2c638:	423fff84 	addi	r8,r8,-2
   2c63c:	1705883a 	add	r2,r2,fp
   2c640:	1421c83a 	sub	r16,r2,r16
   2c644:	a00b883a 	mov	r5,r20
   2c648:	8009883a 	mov	r4,r16
   2c64c:	d9800315 	stw	r6,12(sp)
   2c650:	d9c00215 	stw	r7,8(sp)
   2c654:	da000015 	stw	r8,0(sp)
   2c658:	da400115 	stw	r9,4(sp)
   2c65c:	00205600 	call	20560 <__udivsi3>
   2c660:	8009883a 	mov	r4,r16
   2c664:	a00b883a 	mov	r5,r20
   2c668:	1025883a 	mov	r18,r2
   2c66c:	00205c40 	call	205c4 <__umodsi3>
   2c670:	d9c00217 	ldw	r7,8(sp)
   2c674:	1004943a 	slli	r2,r2,16
   2c678:	bcaf383a 	mul	r23,r23,r18
   2c67c:	393fffcc 	andi	r4,r7,65535
   2c680:	2088b03a 	or	r4,r4,r2
   2c684:	d9800317 	ldw	r6,12(sp)
   2c688:	da000017 	ldw	r8,0(sp)
   2c68c:	da400117 	ldw	r9,4(sp)
   2c690:	25c0062e 	bgeu	r4,r23,2c6ac <__divdf3+0x538>
   2c694:	2709883a 	add	r4,r4,fp
   2c698:	90bfffc4 	addi	r2,r18,-1
   2c69c:	27009436 	bltu	r4,fp,2c8f0 <__divdf3+0x77c>
   2c6a0:	25c0932e 	bgeu	r4,r23,2c8f0 <__divdf3+0x77c>
   2c6a4:	94bfff84 	addi	r18,r18,-2
   2c6a8:	2709883a 	add	r4,r4,fp
   2c6ac:	4004943a 	slli	r2,r8,16
   2c6b0:	25efc83a 	sub	r23,r4,r23
   2c6b4:	1490b03a 	or	r8,r2,r18
   2c6b8:	4008d43a 	srli	r4,r8,16
   2c6bc:	40ffffcc 	andi	r3,r8,65535
   2c6c0:	30c5383a 	mul	r2,r6,r3
   2c6c4:	1a47383a 	mul	r3,r3,r9
   2c6c8:	310d383a 	mul	r6,r6,r4
   2c6cc:	100ad43a 	srli	r5,r2,16
   2c6d0:	4913383a 	mul	r9,r9,r4
   2c6d4:	1987883a 	add	r3,r3,r6
   2c6d8:	28c7883a 	add	r3,r5,r3
   2c6dc:	1980022e 	bgeu	r3,r6,2c6e8 <__divdf3+0x574>
   2c6e0:	01000074 	movhi	r4,1
   2c6e4:	4913883a 	add	r9,r9,r4
   2c6e8:	1808d43a 	srli	r4,r3,16
   2c6ec:	1806943a 	slli	r3,r3,16
   2c6f0:	10bfffcc 	andi	r2,r2,65535
   2c6f4:	2253883a 	add	r9,r4,r9
   2c6f8:	1887883a 	add	r3,r3,r2
   2c6fc:	ba403836 	bltu	r23,r9,2c7e0 <__divdf3+0x66c>
   2c700:	ba403626 	beq	r23,r9,2c7dc <__divdf3+0x668>
   2c704:	42000054 	ori	r8,r8,1
   2c708:	a880ffc4 	addi	r2,r21,1023
   2c70c:	00bf570e 	bge	zero,r2,2c46c <__alt_data_end+0xfffec46c>
   2c710:	40c001cc 	andi	r3,r8,7
   2c714:	18000726 	beq	r3,zero,2c734 <__divdf3+0x5c0>
   2c718:	40c003cc 	andi	r3,r8,15
   2c71c:	01000104 	movi	r4,4
   2c720:	19000426 	beq	r3,r4,2c734 <__divdf3+0x5c0>
   2c724:	4107883a 	add	r3,r8,r4
   2c728:	1a11803a 	cmpltu	r8,r3,r8
   2c72c:	8a23883a 	add	r17,r17,r8
   2c730:	1811883a 	mov	r8,r3
   2c734:	88c0402c 	andhi	r3,r17,256
   2c738:	18000426 	beq	r3,zero,2c74c <__divdf3+0x5d8>
   2c73c:	00ffc034 	movhi	r3,65280
   2c740:	18ffffc4 	addi	r3,r3,-1
   2c744:	a8810004 	addi	r2,r21,1024
   2c748:	88e2703a 	and	r17,r17,r3
   2c74c:	00c1ff84 	movi	r3,2046
   2c750:	18bee316 	blt	r3,r2,2c2e0 <__alt_data_end+0xfffec2e0>
   2c754:	8824977a 	slli	r18,r17,29
   2c758:	4010d0fa 	srli	r8,r8,3
   2c75c:	8822927a 	slli	r17,r17,9
   2c760:	1081ffcc 	andi	r2,r2,2047
   2c764:	9224b03a 	or	r18,r18,r8
   2c768:	880ad33a 	srli	r5,r17,12
   2c76c:	98c0004c 	andi	r3,r19,1
   2c770:	003edf06 	br	2c2f0 <__alt_data_end+0xfffec2f0>
   2c774:	8080022c 	andhi	r2,r16,8
   2c778:	10001226 	beq	r2,zero,2c7c4 <__divdf3+0x650>
   2c77c:	8880022c 	andhi	r2,r17,8
   2c780:	1000101e 	bne	r2,zero,2c7c4 <__divdf3+0x650>
   2c784:	00800434 	movhi	r2,16
   2c788:	89400234 	orhi	r5,r17,8
   2c78c:	10bfffc4 	addi	r2,r2,-1
   2c790:	b007883a 	mov	r3,r22
   2c794:	288a703a 	and	r5,r5,r2
   2c798:	4025883a 	mov	r18,r8
   2c79c:	003f3106 	br	2c464 <__alt_data_end+0xfffec464>
   2c7a0:	008000c4 	movi	r2,3
   2c7a4:	3880a626 	beq	r7,r2,2ca40 <__divdf3+0x8cc>
   2c7a8:	00800044 	movi	r2,1
   2c7ac:	3880521e 	bne	r7,r2,2c8f8 <__divdf3+0x784>
   2c7b0:	b807883a 	mov	r3,r23
   2c7b4:	0005883a 	mov	r2,zero
   2c7b8:	000b883a 	mov	r5,zero
   2c7bc:	0025883a 	mov	r18,zero
   2c7c0:	003ecb06 	br	2c2f0 <__alt_data_end+0xfffec2f0>
   2c7c4:	00800434 	movhi	r2,16
   2c7c8:	81400234 	orhi	r5,r16,8
   2c7cc:	10bfffc4 	addi	r2,r2,-1
   2c7d0:	a007883a 	mov	r3,r20
   2c7d4:	288a703a 	and	r5,r5,r2
   2c7d8:	003f2206 	br	2c464 <__alt_data_end+0xfffec464>
   2c7dc:	183fca26 	beq	r3,zero,2c708 <__alt_data_end+0xfffec708>
   2c7e0:	e5ef883a 	add	r23,fp,r23
   2c7e4:	40bfffc4 	addi	r2,r8,-1
   2c7e8:	bf00392e 	bgeu	r23,fp,2c8d0 <__divdf3+0x75c>
   2c7ec:	1011883a 	mov	r8,r2
   2c7f0:	ba7fc41e 	bne	r23,r9,2c704 <__alt_data_end+0xfffec704>
   2c7f4:	b0ffc31e 	bne	r22,r3,2c704 <__alt_data_end+0xfffec704>
   2c7f8:	003fc306 	br	2c708 <__alt_data_end+0xfffec708>
   2c7fc:	143ff604 	addi	r16,r2,-40
   2c800:	9c20983a 	sll	r16,r19,r16
   2c804:	0025883a 	mov	r18,zero
   2c808:	003ee206 	br	2c394 <__alt_data_end+0xfffec394>
   2c80c:	d9800315 	stw	r6,12(sp)
   2c810:	d9c00215 	stw	r7,8(sp)
   2c814:	00218340 	call	21834 <__clzsi2>
   2c818:	10800804 	addi	r2,r2,32
   2c81c:	d9c00217 	ldw	r7,8(sp)
   2c820:	d9800317 	ldw	r6,12(sp)
   2c824:	003ed106 	br	2c36c <__alt_data_end+0xfffec36c>
   2c828:	147ff604 	addi	r17,r2,-40
   2c82c:	3462983a 	sll	r17,r6,r17
   2c830:	0011883a 	mov	r8,zero
   2c834:	003ef506 	br	2c40c <__alt_data_end+0xfffec40c>
   2c838:	3009883a 	mov	r4,r6
   2c83c:	d9800315 	stw	r6,12(sp)
   2c840:	da400115 	stw	r9,4(sp)
   2c844:	00218340 	call	21834 <__clzsi2>
   2c848:	10800804 	addi	r2,r2,32
   2c84c:	da400117 	ldw	r9,4(sp)
   2c850:	d9800317 	ldw	r6,12(sp)
   2c854:	003ee306 	br	2c3e4 <__alt_data_end+0xfffec3e4>
   2c858:	85a1883a 	add	r16,r16,r22
   2c85c:	8585803a 	cmpltu	r2,r16,r22
   2c860:	1705883a 	add	r2,r2,fp
   2c864:	14a5883a 	add	r18,r2,r18
   2c868:	88bfffc4 	addi	r2,r17,-1
   2c86c:	e4800c2e 	bgeu	fp,r18,2c8a0 <__divdf3+0x72c>
   2c870:	90c03e36 	bltu	r18,r3,2c96c <__divdf3+0x7f8>
   2c874:	1c806926 	beq	r3,r18,2ca1c <__divdf3+0x8a8>
   2c878:	90c7c83a 	sub	r3,r18,r3
   2c87c:	1023883a 	mov	r17,r2
   2c880:	003f5206 	br	2c5cc <__alt_data_end+0xfffec5cc>
   2c884:	923f0436 	bltu	r18,r8,2c498 <__alt_data_end+0xfffec498>
   2c888:	800897fa 	slli	r4,r16,31
   2c88c:	9004d07a 	srli	r2,r18,1
   2c890:	8006d07a 	srli	r3,r16,1
   2c894:	902097fa 	slli	r16,r18,31
   2c898:	20a4b03a 	or	r18,r4,r2
   2c89c:	003f0106 	br	2c4a4 <__alt_data_end+0xfffec4a4>
   2c8a0:	e4bff51e 	bne	fp,r18,2c878 <__alt_data_end+0xfffec878>
   2c8a4:	85bff22e 	bgeu	r16,r22,2c870 <__alt_data_end+0xfffec870>
   2c8a8:	e0c7c83a 	sub	r3,fp,r3
   2c8ac:	1023883a 	mov	r17,r2
   2c8b0:	003f4606 	br	2c5cc <__alt_data_end+0xfffec5cc>
   2c8b4:	100f883a 	mov	r7,r2
   2c8b8:	003f2b06 	br	2c568 <__alt_data_end+0xfffec568>
   2c8bc:	180d883a 	mov	r6,r3
   2c8c0:	003f1306 	br	2c510 <__alt_data_end+0xfffec510>
   2c8c4:	813fe436 	bltu	r16,r4,2c858 <__alt_data_end+0xfffec858>
   2c8c8:	0007883a 	mov	r3,zero
   2c8cc:	003f3f06 	br	2c5cc <__alt_data_end+0xfffec5cc>
   2c8d0:	ba402c36 	bltu	r23,r9,2c984 <__divdf3+0x810>
   2c8d4:	4dc05426 	beq	r9,r23,2ca28 <__divdf3+0x8b4>
   2c8d8:	1011883a 	mov	r8,r2
   2c8dc:	003f8906 	br	2c704 <__alt_data_end+0xfffec704>
   2c8e0:	023fffc4 	movi	r8,-1
   2c8e4:	003f8806 	br	2c708 <__alt_data_end+0xfffec708>
   2c8e8:	1811883a 	mov	r8,r3
   2c8ec:	003f5406 	br	2c640 <__alt_data_end+0xfffec640>
   2c8f0:	1025883a 	mov	r18,r2
   2c8f4:	003f6d06 	br	2c6ac <__alt_data_end+0xfffec6ac>
   2c8f8:	b827883a 	mov	r19,r23
   2c8fc:	003f8206 	br	2c708 <__alt_data_end+0xfffec708>
   2c900:	010007c4 	movi	r4,31
   2c904:	20c02616 	blt	r4,r3,2c9a0 <__divdf3+0x82c>
   2c908:	00800804 	movi	r2,32
   2c90c:	10c5c83a 	sub	r2,r2,r3
   2c910:	888a983a 	sll	r5,r17,r2
   2c914:	40c8d83a 	srl	r4,r8,r3
   2c918:	4084983a 	sll	r2,r8,r2
   2c91c:	88e2d83a 	srl	r17,r17,r3
   2c920:	2906b03a 	or	r3,r5,r4
   2c924:	1004c03a 	cmpne	r2,r2,zero
   2c928:	1886b03a 	or	r3,r3,r2
   2c92c:	188001cc 	andi	r2,r3,7
   2c930:	10000726 	beq	r2,zero,2c950 <__divdf3+0x7dc>
   2c934:	188003cc 	andi	r2,r3,15
   2c938:	01000104 	movi	r4,4
   2c93c:	11000426 	beq	r2,r4,2c950 <__divdf3+0x7dc>
   2c940:	1805883a 	mov	r2,r3
   2c944:	10c00104 	addi	r3,r2,4
   2c948:	1885803a 	cmpltu	r2,r3,r2
   2c94c:	88a3883a 	add	r17,r17,r2
   2c950:	8880202c 	andhi	r2,r17,128
   2c954:	10002726 	beq	r2,zero,2c9f4 <__divdf3+0x880>
   2c958:	98c0004c 	andi	r3,r19,1
   2c95c:	00800044 	movi	r2,1
   2c960:	000b883a 	mov	r5,zero
   2c964:	0025883a 	mov	r18,zero
   2c968:	003e6106 	br	2c2f0 <__alt_data_end+0xfffec2f0>
   2c96c:	85a1883a 	add	r16,r16,r22
   2c970:	8585803a 	cmpltu	r2,r16,r22
   2c974:	1705883a 	add	r2,r2,fp
   2c978:	14a5883a 	add	r18,r2,r18
   2c97c:	8c7fff84 	addi	r17,r17,-2
   2c980:	003f1106 	br	2c5c8 <__alt_data_end+0xfffec5c8>
   2c984:	b589883a 	add	r4,r22,r22
   2c988:	25ad803a 	cmpltu	r22,r4,r22
   2c98c:	b739883a 	add	fp,r22,fp
   2c990:	40bfff84 	addi	r2,r8,-2
   2c994:	bf2f883a 	add	r23,r23,fp
   2c998:	202d883a 	mov	r22,r4
   2c99c:	003f9306 	br	2c7ec <__alt_data_end+0xfffec7ec>
   2c9a0:	013ff844 	movi	r4,-31
   2c9a4:	2085c83a 	sub	r2,r4,r2
   2c9a8:	8888d83a 	srl	r4,r17,r2
   2c9ac:	00800804 	movi	r2,32
   2c9b0:	18802126 	beq	r3,r2,2ca38 <__divdf3+0x8c4>
   2c9b4:	00801004 	movi	r2,64
   2c9b8:	10c5c83a 	sub	r2,r2,r3
   2c9bc:	8884983a 	sll	r2,r17,r2
   2c9c0:	1204b03a 	or	r2,r2,r8
   2c9c4:	1004c03a 	cmpne	r2,r2,zero
   2c9c8:	2084b03a 	or	r2,r4,r2
   2c9cc:	144001cc 	andi	r17,r2,7
   2c9d0:	88000d1e 	bne	r17,zero,2ca08 <__divdf3+0x894>
   2c9d4:	000b883a 	mov	r5,zero
   2c9d8:	1024d0fa 	srli	r18,r2,3
   2c9dc:	98c0004c 	andi	r3,r19,1
   2c9e0:	0005883a 	mov	r2,zero
   2c9e4:	9464b03a 	or	r18,r18,r17
   2c9e8:	003e4106 	br	2c2f0 <__alt_data_end+0xfffec2f0>
   2c9ec:	1007883a 	mov	r3,r2
   2c9f0:	0023883a 	mov	r17,zero
   2c9f4:	880a927a 	slli	r5,r17,9
   2c9f8:	1805883a 	mov	r2,r3
   2c9fc:	8822977a 	slli	r17,r17,29
   2ca00:	280ad33a 	srli	r5,r5,12
   2ca04:	003ff406 	br	2c9d8 <__alt_data_end+0xfffec9d8>
   2ca08:	10c003cc 	andi	r3,r2,15
   2ca0c:	01000104 	movi	r4,4
   2ca10:	193ff626 	beq	r3,r4,2c9ec <__alt_data_end+0xfffec9ec>
   2ca14:	0023883a 	mov	r17,zero
   2ca18:	003fca06 	br	2c944 <__alt_data_end+0xfffec944>
   2ca1c:	813fd336 	bltu	r16,r4,2c96c <__alt_data_end+0xfffec96c>
   2ca20:	1023883a 	mov	r17,r2
   2ca24:	003fa806 	br	2c8c8 <__alt_data_end+0xfffec8c8>
   2ca28:	b0ffd636 	bltu	r22,r3,2c984 <__alt_data_end+0xfffec984>
   2ca2c:	1011883a 	mov	r8,r2
   2ca30:	b0ff341e 	bne	r22,r3,2c704 <__alt_data_end+0xfffec704>
   2ca34:	003f3406 	br	2c708 <__alt_data_end+0xfffec708>
   2ca38:	0005883a 	mov	r2,zero
   2ca3c:	003fe006 	br	2c9c0 <__alt_data_end+0xfffec9c0>
   2ca40:	00800434 	movhi	r2,16
   2ca44:	89400234 	orhi	r5,r17,8
   2ca48:	10bfffc4 	addi	r2,r2,-1
   2ca4c:	b807883a 	mov	r3,r23
   2ca50:	288a703a 	and	r5,r5,r2
   2ca54:	4025883a 	mov	r18,r8
   2ca58:	003e8206 	br	2c464 <__alt_data_end+0xfffec464>

0002ca5c <__eqdf2>:
   2ca5c:	2804d53a 	srli	r2,r5,20
   2ca60:	3806d53a 	srli	r3,r7,20
   2ca64:	02000434 	movhi	r8,16
   2ca68:	423fffc4 	addi	r8,r8,-1
   2ca6c:	1081ffcc 	andi	r2,r2,2047
   2ca70:	0281ffc4 	movi	r10,2047
   2ca74:	2a12703a 	and	r9,r5,r8
   2ca78:	18c1ffcc 	andi	r3,r3,2047
   2ca7c:	3a10703a 	and	r8,r7,r8
   2ca80:	280ad7fa 	srli	r5,r5,31
   2ca84:	380ed7fa 	srli	r7,r7,31
   2ca88:	12801026 	beq	r2,r10,2cacc <__eqdf2+0x70>
   2ca8c:	0281ffc4 	movi	r10,2047
   2ca90:	1a800a26 	beq	r3,r10,2cabc <__eqdf2+0x60>
   2ca94:	10c00226 	beq	r2,r3,2caa0 <__eqdf2+0x44>
   2ca98:	00800044 	movi	r2,1
   2ca9c:	f800283a 	ret
   2caa0:	4a3ffd1e 	bne	r9,r8,2ca98 <__alt_data_end+0xfffeca98>
   2caa4:	21bffc1e 	bne	r4,r6,2ca98 <__alt_data_end+0xfffeca98>
   2caa8:	29c00c26 	beq	r5,r7,2cadc <__eqdf2+0x80>
   2caac:	103ffa1e 	bne	r2,zero,2ca98 <__alt_data_end+0xfffeca98>
   2cab0:	2244b03a 	or	r2,r4,r9
   2cab4:	1004c03a 	cmpne	r2,r2,zero
   2cab8:	f800283a 	ret
   2cabc:	3214b03a 	or	r10,r6,r8
   2cac0:	503ff426 	beq	r10,zero,2ca94 <__alt_data_end+0xfffeca94>
   2cac4:	00800044 	movi	r2,1
   2cac8:	f800283a 	ret
   2cacc:	2254b03a 	or	r10,r4,r9
   2cad0:	503fee26 	beq	r10,zero,2ca8c <__alt_data_end+0xfffeca8c>
   2cad4:	00800044 	movi	r2,1
   2cad8:	f800283a 	ret
   2cadc:	0005883a 	mov	r2,zero
   2cae0:	f800283a 	ret

0002cae4 <__ledf2>:
   2cae4:	2804d53a 	srli	r2,r5,20
   2cae8:	3810d53a 	srli	r8,r7,20
   2caec:	00c00434 	movhi	r3,16
   2caf0:	18ffffc4 	addi	r3,r3,-1
   2caf4:	1081ffcc 	andi	r2,r2,2047
   2caf8:	0241ffc4 	movi	r9,2047
   2cafc:	28d4703a 	and	r10,r5,r3
   2cb00:	4201ffcc 	andi	r8,r8,2047
   2cb04:	38c6703a 	and	r3,r7,r3
   2cb08:	280ad7fa 	srli	r5,r5,31
   2cb0c:	380ed7fa 	srli	r7,r7,31
   2cb10:	12401f26 	beq	r2,r9,2cb90 <__ledf2+0xac>
   2cb14:	0241ffc4 	movi	r9,2047
   2cb18:	42401426 	beq	r8,r9,2cb6c <__ledf2+0x88>
   2cb1c:	1000091e 	bne	r2,zero,2cb44 <__ledf2+0x60>
   2cb20:	2296b03a 	or	r11,r4,r10
   2cb24:	5813003a 	cmpeq	r9,r11,zero
   2cb28:	29403fcc 	andi	r5,r5,255
   2cb2c:	40000a1e 	bne	r8,zero,2cb58 <__ledf2+0x74>
   2cb30:	30d8b03a 	or	r12,r6,r3
   2cb34:	6000081e 	bne	r12,zero,2cb58 <__ledf2+0x74>
   2cb38:	0005883a 	mov	r2,zero
   2cb3c:	5800111e 	bne	r11,zero,2cb84 <__ledf2+0xa0>
   2cb40:	f800283a 	ret
   2cb44:	29403fcc 	andi	r5,r5,255
   2cb48:	40000c1e 	bne	r8,zero,2cb7c <__ledf2+0x98>
   2cb4c:	30d2b03a 	or	r9,r6,r3
   2cb50:	48000c26 	beq	r9,zero,2cb84 <__ledf2+0xa0>
   2cb54:	0013883a 	mov	r9,zero
   2cb58:	39c03fcc 	andi	r7,r7,255
   2cb5c:	48000826 	beq	r9,zero,2cb80 <__ledf2+0x9c>
   2cb60:	38001126 	beq	r7,zero,2cba8 <__ledf2+0xc4>
   2cb64:	00800044 	movi	r2,1
   2cb68:	f800283a 	ret
   2cb6c:	30d2b03a 	or	r9,r6,r3
   2cb70:	483fea26 	beq	r9,zero,2cb1c <__alt_data_end+0xfffecb1c>
   2cb74:	00800084 	movi	r2,2
   2cb78:	f800283a 	ret
   2cb7c:	39c03fcc 	andi	r7,r7,255
   2cb80:	39400726 	beq	r7,r5,2cba0 <__ledf2+0xbc>
   2cb84:	2800081e 	bne	r5,zero,2cba8 <__ledf2+0xc4>
   2cb88:	00800044 	movi	r2,1
   2cb8c:	f800283a 	ret
   2cb90:	2292b03a 	or	r9,r4,r10
   2cb94:	483fdf26 	beq	r9,zero,2cb14 <__alt_data_end+0xfffecb14>
   2cb98:	00800084 	movi	r2,2
   2cb9c:	f800283a 	ret
   2cba0:	4080030e 	bge	r8,r2,2cbb0 <__ledf2+0xcc>
   2cba4:	383fef26 	beq	r7,zero,2cb64 <__alt_data_end+0xfffecb64>
   2cba8:	00bfffc4 	movi	r2,-1
   2cbac:	f800283a 	ret
   2cbb0:	123feb16 	blt	r2,r8,2cb60 <__alt_data_end+0xfffecb60>
   2cbb4:	1abff336 	bltu	r3,r10,2cb84 <__alt_data_end+0xfffecb84>
   2cbb8:	50c00326 	beq	r10,r3,2cbc8 <__ledf2+0xe4>
   2cbbc:	50c0042e 	bgeu	r10,r3,2cbd0 <__ledf2+0xec>
   2cbc0:	283fe81e 	bne	r5,zero,2cb64 <__alt_data_end+0xfffecb64>
   2cbc4:	003ff806 	br	2cba8 <__alt_data_end+0xfffecba8>
   2cbc8:	313fee36 	bltu	r6,r4,2cb84 <__alt_data_end+0xfffecb84>
   2cbcc:	21bffc36 	bltu	r4,r6,2cbc0 <__alt_data_end+0xfffecbc0>
   2cbd0:	0005883a 	mov	r2,zero
   2cbd4:	f800283a 	ret

0002cbd8 <__floatsidf>:
   2cbd8:	defffd04 	addi	sp,sp,-12
   2cbdc:	dfc00215 	stw	ra,8(sp)
   2cbe0:	dc400115 	stw	r17,4(sp)
   2cbe4:	dc000015 	stw	r16,0(sp)
   2cbe8:	20002b26 	beq	r4,zero,2cc98 <__floatsidf+0xc0>
   2cbec:	2023883a 	mov	r17,r4
   2cbf0:	2020d7fa 	srli	r16,r4,31
   2cbf4:	20002d16 	blt	r4,zero,2ccac <__floatsidf+0xd4>
   2cbf8:	8809883a 	mov	r4,r17
   2cbfc:	00218340 	call	21834 <__clzsi2>
   2cc00:	01410784 	movi	r5,1054
   2cc04:	288bc83a 	sub	r5,r5,r2
   2cc08:	01010cc4 	movi	r4,1075
   2cc0c:	2149c83a 	sub	r4,r4,r5
   2cc10:	00c007c4 	movi	r3,31
   2cc14:	1900160e 	bge	r3,r4,2cc70 <__floatsidf+0x98>
   2cc18:	00c104c4 	movi	r3,1043
   2cc1c:	1947c83a 	sub	r3,r3,r5
   2cc20:	88c6983a 	sll	r3,r17,r3
   2cc24:	00800434 	movhi	r2,16
   2cc28:	10bfffc4 	addi	r2,r2,-1
   2cc2c:	1886703a 	and	r3,r3,r2
   2cc30:	2941ffcc 	andi	r5,r5,2047
   2cc34:	800d883a 	mov	r6,r16
   2cc38:	0005883a 	mov	r2,zero
   2cc3c:	280a953a 	slli	r5,r5,20
   2cc40:	31803fcc 	andi	r6,r6,255
   2cc44:	01000434 	movhi	r4,16
   2cc48:	300c97fa 	slli	r6,r6,31
   2cc4c:	213fffc4 	addi	r4,r4,-1
   2cc50:	1906703a 	and	r3,r3,r4
   2cc54:	1946b03a 	or	r3,r3,r5
   2cc58:	1986b03a 	or	r3,r3,r6
   2cc5c:	dfc00217 	ldw	ra,8(sp)
   2cc60:	dc400117 	ldw	r17,4(sp)
   2cc64:	dc000017 	ldw	r16,0(sp)
   2cc68:	dec00304 	addi	sp,sp,12
   2cc6c:	f800283a 	ret
   2cc70:	00c002c4 	movi	r3,11
   2cc74:	1887c83a 	sub	r3,r3,r2
   2cc78:	88c6d83a 	srl	r3,r17,r3
   2cc7c:	8904983a 	sll	r2,r17,r4
   2cc80:	01000434 	movhi	r4,16
   2cc84:	213fffc4 	addi	r4,r4,-1
   2cc88:	2941ffcc 	andi	r5,r5,2047
   2cc8c:	1906703a 	and	r3,r3,r4
   2cc90:	800d883a 	mov	r6,r16
   2cc94:	003fe906 	br	2cc3c <__alt_data_end+0xfffecc3c>
   2cc98:	000d883a 	mov	r6,zero
   2cc9c:	000b883a 	mov	r5,zero
   2cca0:	0007883a 	mov	r3,zero
   2cca4:	0005883a 	mov	r2,zero
   2cca8:	003fe406 	br	2cc3c <__alt_data_end+0xfffecc3c>
   2ccac:	0123c83a 	sub	r17,zero,r4
   2ccb0:	003fd106 	br	2cbf8 <__alt_data_end+0xfffecbf8>

0002ccb4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ccb4:	defffe04 	addi	sp,sp,-8
   2ccb8:	dfc00115 	stw	ra,4(sp)
   2ccbc:	df000015 	stw	fp,0(sp)
   2ccc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ccc4:	d0a00b17 	ldw	r2,-32724(gp)
   2ccc8:	10000326 	beq	r2,zero,2ccd8 <alt_get_errno+0x24>
   2cccc:	d0a00b17 	ldw	r2,-32724(gp)
   2ccd0:	103ee83a 	callr	r2
   2ccd4:	00000106 	br	2ccdc <alt_get_errno+0x28>
   2ccd8:	d0a6d104 	addi	r2,gp,-25788
}
   2ccdc:	e037883a 	mov	sp,fp
   2cce0:	dfc00117 	ldw	ra,4(sp)
   2cce4:	df000017 	ldw	fp,0(sp)
   2cce8:	dec00204 	addi	sp,sp,8
   2ccec:	f800283a 	ret

0002ccf0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2ccf0:	defffb04 	addi	sp,sp,-20
   2ccf4:	dfc00415 	stw	ra,16(sp)
   2ccf8:	df000315 	stw	fp,12(sp)
   2ccfc:	df000304 	addi	fp,sp,12
   2cd00:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2cd04:	e0bfff17 	ldw	r2,-4(fp)
   2cd08:	10000616 	blt	r2,zero,2cd24 <close+0x34>
   2cd0c:	e0bfff17 	ldw	r2,-4(fp)
   2cd10:	10c00324 	muli	r3,r2,12
   2cd14:	008000f4 	movhi	r2,3
   2cd18:	10bfc804 	addi	r2,r2,-224
   2cd1c:	1885883a 	add	r2,r3,r2
   2cd20:	00000106 	br	2cd28 <close+0x38>
   2cd24:	0005883a 	mov	r2,zero
   2cd28:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2cd2c:	e0bffd17 	ldw	r2,-12(fp)
   2cd30:	10001926 	beq	r2,zero,2cd98 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2cd34:	e0bffd17 	ldw	r2,-12(fp)
   2cd38:	10800017 	ldw	r2,0(r2)
   2cd3c:	10800417 	ldw	r2,16(r2)
   2cd40:	10000626 	beq	r2,zero,2cd5c <close+0x6c>
   2cd44:	e0bffd17 	ldw	r2,-12(fp)
   2cd48:	10800017 	ldw	r2,0(r2)
   2cd4c:	10800417 	ldw	r2,16(r2)
   2cd50:	e13ffd17 	ldw	r4,-12(fp)
   2cd54:	103ee83a 	callr	r2
   2cd58:	00000106 	br	2cd60 <close+0x70>
   2cd5c:	0005883a 	mov	r2,zero
   2cd60:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2cd64:	e13fff17 	ldw	r4,-4(fp)
   2cd68:	002d3b00 	call	2d3b0 <alt_release_fd>
    if (rval < 0)
   2cd6c:	e0bffe17 	ldw	r2,-8(fp)
   2cd70:	1000070e 	bge	r2,zero,2cd90 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2cd74:	002ccb40 	call	2ccb4 <alt_get_errno>
   2cd78:	1007883a 	mov	r3,r2
   2cd7c:	e0bffe17 	ldw	r2,-8(fp)
   2cd80:	0085c83a 	sub	r2,zero,r2
   2cd84:	18800015 	stw	r2,0(r3)
      return -1;
   2cd88:	00bfffc4 	movi	r2,-1
   2cd8c:	00000706 	br	2cdac <close+0xbc>
    }
    return 0;
   2cd90:	0005883a 	mov	r2,zero
   2cd94:	00000506 	br	2cdac <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cd98:	002ccb40 	call	2ccb4 <alt_get_errno>
   2cd9c:	1007883a 	mov	r3,r2
   2cda0:	00801444 	movi	r2,81
   2cda4:	18800015 	stw	r2,0(r3)
    return -1;
   2cda8:	00bfffc4 	movi	r2,-1
  }
}
   2cdac:	e037883a 	mov	sp,fp
   2cdb0:	dfc00117 	ldw	ra,4(sp)
   2cdb4:	df000017 	ldw	fp,0(sp)
   2cdb8:	dec00204 	addi	sp,sp,8
   2cdbc:	f800283a 	ret

0002cdc0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2cdc0:	defffc04 	addi	sp,sp,-16
   2cdc4:	df000315 	stw	fp,12(sp)
   2cdc8:	df000304 	addi	fp,sp,12
   2cdcc:	e13ffd15 	stw	r4,-12(fp)
   2cdd0:	e17ffe15 	stw	r5,-8(fp)
   2cdd4:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2cdd8:	e0bfff17 	ldw	r2,-4(fp)
}
   2cddc:	e037883a 	mov	sp,fp
   2cde0:	df000017 	ldw	fp,0(sp)
   2cde4:	dec00104 	addi	sp,sp,4
   2cde8:	f800283a 	ret

0002cdec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cdec:	defffe04 	addi	sp,sp,-8
   2cdf0:	dfc00115 	stw	ra,4(sp)
   2cdf4:	df000015 	stw	fp,0(sp)
   2cdf8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cdfc:	d0a00b17 	ldw	r2,-32724(gp)
   2ce00:	10000326 	beq	r2,zero,2ce10 <alt_get_errno+0x24>
   2ce04:	d0a00b17 	ldw	r2,-32724(gp)
   2ce08:	103ee83a 	callr	r2
   2ce0c:	00000106 	br	2ce14 <alt_get_errno+0x28>
   2ce10:	d0a6d104 	addi	r2,gp,-25788
}
   2ce14:	e037883a 	mov	sp,fp
   2ce18:	dfc00117 	ldw	ra,4(sp)
   2ce1c:	df000017 	ldw	fp,0(sp)
   2ce20:	dec00204 	addi	sp,sp,8
   2ce24:	f800283a 	ret

0002ce28 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2ce28:	defffb04 	addi	sp,sp,-20
   2ce2c:	dfc00415 	stw	ra,16(sp)
   2ce30:	df000315 	stw	fp,12(sp)
   2ce34:	df000304 	addi	fp,sp,12
   2ce38:	e13ffe15 	stw	r4,-8(fp)
   2ce3c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ce40:	e0bffe17 	ldw	r2,-8(fp)
   2ce44:	10000616 	blt	r2,zero,2ce60 <fstat+0x38>
   2ce48:	e0bffe17 	ldw	r2,-8(fp)
   2ce4c:	10c00324 	muli	r3,r2,12
   2ce50:	008000f4 	movhi	r2,3
   2ce54:	10bfc804 	addi	r2,r2,-224
   2ce58:	1885883a 	add	r2,r3,r2
   2ce5c:	00000106 	br	2ce64 <fstat+0x3c>
   2ce60:	0005883a 	mov	r2,zero
   2ce64:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2ce68:	e0bffd17 	ldw	r2,-12(fp)
   2ce6c:	10001026 	beq	r2,zero,2ceb0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2ce70:	e0bffd17 	ldw	r2,-12(fp)
   2ce74:	10800017 	ldw	r2,0(r2)
   2ce78:	10800817 	ldw	r2,32(r2)
   2ce7c:	10000726 	beq	r2,zero,2ce9c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2ce80:	e0bffd17 	ldw	r2,-12(fp)
   2ce84:	10800017 	ldw	r2,0(r2)
   2ce88:	10800817 	ldw	r2,32(r2)
   2ce8c:	e17fff17 	ldw	r5,-4(fp)
   2ce90:	e13ffd17 	ldw	r4,-12(fp)
   2ce94:	103ee83a 	callr	r2
   2ce98:	00000a06 	br	2cec4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2ce9c:	e0bfff17 	ldw	r2,-4(fp)
   2cea0:	00c80004 	movi	r3,8192
   2cea4:	10c00115 	stw	r3,4(r2)
      return 0;
   2cea8:	0005883a 	mov	r2,zero
   2ceac:	00000506 	br	2cec4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2ceb0:	002cdec0 	call	2cdec <alt_get_errno>
   2ceb4:	1007883a 	mov	r3,r2
   2ceb8:	00801444 	movi	r2,81
   2cebc:	18800015 	stw	r2,0(r3)
    return -1;
   2cec0:	00bfffc4 	movi	r2,-1
  }
}
   2cec4:	e037883a 	mov	sp,fp
   2cec8:	dfc00117 	ldw	ra,4(sp)
   2cecc:	df000017 	ldw	fp,0(sp)
   2ced0:	dec00204 	addi	sp,sp,8
   2ced4:	f800283a 	ret

0002ced8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ced8:	defffe04 	addi	sp,sp,-8
   2cedc:	dfc00115 	stw	ra,4(sp)
   2cee0:	df000015 	stw	fp,0(sp)
   2cee4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cee8:	d0a00b17 	ldw	r2,-32724(gp)
   2ceec:	10000326 	beq	r2,zero,2cefc <alt_get_errno+0x24>
   2cef0:	d0a00b17 	ldw	r2,-32724(gp)
   2cef4:	103ee83a 	callr	r2
   2cef8:	00000106 	br	2cf00 <alt_get_errno+0x28>
   2cefc:	d0a6d104 	addi	r2,gp,-25788
}
   2cf00:	e037883a 	mov	sp,fp
   2cf04:	dfc00117 	ldw	ra,4(sp)
   2cf08:	df000017 	ldw	fp,0(sp)
   2cf0c:	dec00204 	addi	sp,sp,8
   2cf10:	f800283a 	ret

0002cf14 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2cf14:	deffed04 	addi	sp,sp,-76
   2cf18:	dfc01215 	stw	ra,72(sp)
   2cf1c:	df001115 	stw	fp,68(sp)
   2cf20:	df001104 	addi	fp,sp,68
   2cf24:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2cf28:	e0bfff17 	ldw	r2,-4(fp)
   2cf2c:	10000616 	blt	r2,zero,2cf48 <isatty+0x34>
   2cf30:	e0bfff17 	ldw	r2,-4(fp)
   2cf34:	10c00324 	muli	r3,r2,12
   2cf38:	008000f4 	movhi	r2,3
   2cf3c:	10bfc804 	addi	r2,r2,-224
   2cf40:	1885883a 	add	r2,r3,r2
   2cf44:	00000106 	br	2cf4c <isatty+0x38>
   2cf48:	0005883a 	mov	r2,zero
   2cf4c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2cf50:	e0bfef17 	ldw	r2,-68(fp)
   2cf54:	10000e26 	beq	r2,zero,2cf90 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2cf58:	e0bfef17 	ldw	r2,-68(fp)
   2cf5c:	10800017 	ldw	r2,0(r2)
   2cf60:	10800817 	ldw	r2,32(r2)
   2cf64:	1000021e 	bne	r2,zero,2cf70 <isatty+0x5c>
    {
      return 1;
   2cf68:	00800044 	movi	r2,1
   2cf6c:	00000d06 	br	2cfa4 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2cf70:	e0bff004 	addi	r2,fp,-64
   2cf74:	100b883a 	mov	r5,r2
   2cf78:	e13fff17 	ldw	r4,-4(fp)
   2cf7c:	002ce280 	call	2ce28 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2cf80:	e0bff117 	ldw	r2,-60(fp)
   2cf84:	10880020 	cmpeqi	r2,r2,8192
   2cf88:	10803fcc 	andi	r2,r2,255
   2cf8c:	00000506 	br	2cfa4 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cf90:	002ced80 	call	2ced8 <alt_get_errno>
   2cf94:	1007883a 	mov	r3,r2
   2cf98:	00801444 	movi	r2,81
   2cf9c:	18800015 	stw	r2,0(r3)
    return 0;
   2cfa0:	0005883a 	mov	r2,zero
  }
}
   2cfa4:	e037883a 	mov	sp,fp
   2cfa8:	dfc00117 	ldw	ra,4(sp)
   2cfac:	df000017 	ldw	fp,0(sp)
   2cfb0:	dec00204 	addi	sp,sp,8
   2cfb4:	f800283a 	ret

0002cfb8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2cfb8:	defffc04 	addi	sp,sp,-16
   2cfbc:	df000315 	stw	fp,12(sp)
   2cfc0:	df000304 	addi	fp,sp,12
   2cfc4:	e13ffd15 	stw	r4,-12(fp)
   2cfc8:	e17ffe15 	stw	r5,-8(fp)
   2cfcc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2cfd0:	e0fffe17 	ldw	r3,-8(fp)
   2cfd4:	e0bffd17 	ldw	r2,-12(fp)
   2cfd8:	18800c26 	beq	r3,r2,2d00c <alt_load_section+0x54>
  {
    while( to != end )
   2cfdc:	00000806 	br	2d000 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2cfe0:	e0bffe17 	ldw	r2,-8(fp)
   2cfe4:	10c00104 	addi	r3,r2,4
   2cfe8:	e0fffe15 	stw	r3,-8(fp)
   2cfec:	e0fffd17 	ldw	r3,-12(fp)
   2cff0:	19000104 	addi	r4,r3,4
   2cff4:	e13ffd15 	stw	r4,-12(fp)
   2cff8:	18c00017 	ldw	r3,0(r3)
   2cffc:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2d000:	e0fffe17 	ldw	r3,-8(fp)
   2d004:	e0bfff17 	ldw	r2,-4(fp)
   2d008:	18bff51e 	bne	r3,r2,2cfe0 <__alt_data_end+0xfffecfe0>
    {
      *to++ = *from++;
    }
  }
}
   2d00c:	0001883a 	nop
   2d010:	e037883a 	mov	sp,fp
   2d014:	df000017 	ldw	fp,0(sp)
   2d018:	dec00104 	addi	sp,sp,4
   2d01c:	f800283a 	ret

0002d020 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d020:	defffe04 	addi	sp,sp,-8
   2d024:	dfc00115 	stw	ra,4(sp)
   2d028:	df000015 	stw	fp,0(sp)
   2d02c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d030:	018000f4 	movhi	r6,3
   2d034:	31845004 	addi	r6,r6,4416
   2d038:	014000f4 	movhi	r5,3
   2d03c:	297d9504 	addi	r5,r5,-2476
   2d040:	010000f4 	movhi	r4,3
   2d044:	21045004 	addi	r4,r4,4416
   2d048:	002cfb80 	call	2cfb8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d04c:	018000b4 	movhi	r6,2
   2d050:	31809104 	addi	r6,r6,580
   2d054:	014000b4 	movhi	r5,2
   2d058:	29400804 	addi	r5,r5,32
   2d05c:	010000b4 	movhi	r4,2
   2d060:	21000804 	addi	r4,r4,32
   2d064:	002cfb80 	call	2cfb8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d068:	018000f4 	movhi	r6,3
   2d06c:	31bd9504 	addi	r6,r6,-2476
   2d070:	014000f4 	movhi	r5,3
   2d074:	297cd504 	addi	r5,r5,-3244
   2d078:	010000f4 	movhi	r4,3
   2d07c:	213cd504 	addi	r4,r4,-3244
   2d080:	002cfb80 	call	2cfb8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d084:	002e2400 	call	2e240 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d088:	002e4280 	call	2e428 <alt_icache_flush_all>
}
   2d08c:	0001883a 	nop
   2d090:	e037883a 	mov	sp,fp
   2d094:	dfc00117 	ldw	ra,4(sp)
   2d098:	df000017 	ldw	fp,0(sp)
   2d09c:	dec00204 	addi	sp,sp,8
   2d0a0:	f800283a 	ret

0002d0a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d0a4:	defffe04 	addi	sp,sp,-8
   2d0a8:	dfc00115 	stw	ra,4(sp)
   2d0ac:	df000015 	stw	fp,0(sp)
   2d0b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d0b4:	d0a00b17 	ldw	r2,-32724(gp)
   2d0b8:	10000326 	beq	r2,zero,2d0c8 <alt_get_errno+0x24>
   2d0bc:	d0a00b17 	ldw	r2,-32724(gp)
   2d0c0:	103ee83a 	callr	r2
   2d0c4:	00000106 	br	2d0cc <alt_get_errno+0x28>
   2d0c8:	d0a6d104 	addi	r2,gp,-25788
}
   2d0cc:	e037883a 	mov	sp,fp
   2d0d0:	dfc00117 	ldw	ra,4(sp)
   2d0d4:	df000017 	ldw	fp,0(sp)
   2d0d8:	dec00204 	addi	sp,sp,8
   2d0dc:	f800283a 	ret

0002d0e0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2d0e0:	defff904 	addi	sp,sp,-28
   2d0e4:	dfc00615 	stw	ra,24(sp)
   2d0e8:	df000515 	stw	fp,20(sp)
   2d0ec:	df000504 	addi	fp,sp,20
   2d0f0:	e13ffd15 	stw	r4,-12(fp)
   2d0f4:	e17ffe15 	stw	r5,-8(fp)
   2d0f8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2d0fc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d100:	e0bffd17 	ldw	r2,-12(fp)
   2d104:	10000616 	blt	r2,zero,2d120 <lseek+0x40>
   2d108:	e0bffd17 	ldw	r2,-12(fp)
   2d10c:	10c00324 	muli	r3,r2,12
   2d110:	008000f4 	movhi	r2,3
   2d114:	10bfc804 	addi	r2,r2,-224
   2d118:	1885883a 	add	r2,r3,r2
   2d11c:	00000106 	br	2d124 <lseek+0x44>
   2d120:	0005883a 	mov	r2,zero
   2d124:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2d128:	e0bffc17 	ldw	r2,-16(fp)
   2d12c:	10001026 	beq	r2,zero,2d170 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2d130:	e0bffc17 	ldw	r2,-16(fp)
   2d134:	10800017 	ldw	r2,0(r2)
   2d138:	10800717 	ldw	r2,28(r2)
   2d13c:	10000926 	beq	r2,zero,2d164 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2d140:	e0bffc17 	ldw	r2,-16(fp)
   2d144:	10800017 	ldw	r2,0(r2)
   2d148:	10800717 	ldw	r2,28(r2)
   2d14c:	e1bfff17 	ldw	r6,-4(fp)
   2d150:	e17ffe17 	ldw	r5,-8(fp)
   2d154:	e13ffc17 	ldw	r4,-16(fp)
   2d158:	103ee83a 	callr	r2
   2d15c:	e0bffb15 	stw	r2,-20(fp)
   2d160:	00000506 	br	2d178 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2d164:	00bfde84 	movi	r2,-134
   2d168:	e0bffb15 	stw	r2,-20(fp)
   2d16c:	00000206 	br	2d178 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2d170:	00bfebc4 	movi	r2,-81
   2d174:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2d178:	e0bffb17 	ldw	r2,-20(fp)
   2d17c:	1000070e 	bge	r2,zero,2d19c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2d180:	002d0a40 	call	2d0a4 <alt_get_errno>
   2d184:	1007883a 	mov	r3,r2
   2d188:	e0bffb17 	ldw	r2,-20(fp)
   2d18c:	0085c83a 	sub	r2,zero,r2
   2d190:	18800015 	stw	r2,0(r3)
    rc = -1;
   2d194:	00bfffc4 	movi	r2,-1
   2d198:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2d19c:	e0bffb17 	ldw	r2,-20(fp)
}
   2d1a0:	e037883a 	mov	sp,fp
   2d1a4:	dfc00117 	ldw	ra,4(sp)
   2d1a8:	df000017 	ldw	fp,0(sp)
   2d1ac:	dec00204 	addi	sp,sp,8
   2d1b0:	f800283a 	ret

0002d1b4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2d1b4:	defffd04 	addi	sp,sp,-12
   2d1b8:	dfc00215 	stw	ra,8(sp)
   2d1bc:	df000115 	stw	fp,4(sp)
   2d1c0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2d1c4:	0009883a 	mov	r4,zero
   2d1c8:	002d62c0 	call	2d62c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2d1cc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2d1d0:	002d6640 	call	2d664 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2d1d4:	018000f4 	movhi	r6,3
   2d1d8:	31bd8b04 	addi	r6,r6,-2516
   2d1dc:	014000f4 	movhi	r5,3
   2d1e0:	297d8b04 	addi	r5,r5,-2516
   2d1e4:	010000f4 	movhi	r4,3
   2d1e8:	213d8b04 	addi	r4,r4,-2516
   2d1ec:	002e7c00 	call	2e7c0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2d1f0:	002e3680 	call	2e368 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2d1f4:	010000f4 	movhi	r4,3
   2d1f8:	2138f204 	addi	r4,r4,-7224
   2d1fc:	002efc00 	call	2efc0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2d200:	d0a6d217 	ldw	r2,-25784(gp)
   2d204:	d0e6d317 	ldw	r3,-25780(gp)
   2d208:	d126d417 	ldw	r4,-25776(gp)
   2d20c:	200d883a 	mov	r6,r4
   2d210:	180b883a 	mov	r5,r3
   2d214:	1009883a 	mov	r4,r2
   2d218:	00203640 	call	20364 <main>
   2d21c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2d220:	01000044 	movi	r4,1
   2d224:	002ccf00 	call	2ccf0 <close>
  exit (result);
   2d228:	e13fff17 	ldw	r4,-4(fp)
   2d22c:	002efd40 	call	2efd4 <exit>

0002d230 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2d230:	defffe04 	addi	sp,sp,-8
   2d234:	df000115 	stw	fp,4(sp)
   2d238:	df000104 	addi	fp,sp,4
   2d23c:	e13fff15 	stw	r4,-4(fp)
}
   2d240:	0001883a 	nop
   2d244:	e037883a 	mov	sp,fp
   2d248:	df000017 	ldw	fp,0(sp)
   2d24c:	dec00104 	addi	sp,sp,4
   2d250:	f800283a 	ret

0002d254 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2d254:	defffe04 	addi	sp,sp,-8
   2d258:	df000115 	stw	fp,4(sp)
   2d25c:	df000104 	addi	fp,sp,4
   2d260:	e13fff15 	stw	r4,-4(fp)
}
   2d264:	0001883a 	nop
   2d268:	e037883a 	mov	sp,fp
   2d26c:	df000017 	ldw	fp,0(sp)
   2d270:	dec00104 	addi	sp,sp,4
   2d274:	f800283a 	ret

0002d278 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d278:	defffe04 	addi	sp,sp,-8
   2d27c:	dfc00115 	stw	ra,4(sp)
   2d280:	df000015 	stw	fp,0(sp)
   2d284:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d288:	d0a00b17 	ldw	r2,-32724(gp)
   2d28c:	10000326 	beq	r2,zero,2d29c <alt_get_errno+0x24>
   2d290:	d0a00b17 	ldw	r2,-32724(gp)
   2d294:	103ee83a 	callr	r2
   2d298:	00000106 	br	2d2a0 <alt_get_errno+0x28>
   2d29c:	d0a6d104 	addi	r2,gp,-25788
}
   2d2a0:	e037883a 	mov	sp,fp
   2d2a4:	dfc00117 	ldw	ra,4(sp)
   2d2a8:	df000017 	ldw	fp,0(sp)
   2d2ac:	dec00204 	addi	sp,sp,8
   2d2b0:	f800283a 	ret

0002d2b4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2d2b4:	defff904 	addi	sp,sp,-28
   2d2b8:	dfc00615 	stw	ra,24(sp)
   2d2bc:	df000515 	stw	fp,20(sp)
   2d2c0:	df000504 	addi	fp,sp,20
   2d2c4:	e13ffd15 	stw	r4,-12(fp)
   2d2c8:	e17ffe15 	stw	r5,-8(fp)
   2d2cc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d2d0:	e0bffd17 	ldw	r2,-12(fp)
   2d2d4:	10000616 	blt	r2,zero,2d2f0 <read+0x3c>
   2d2d8:	e0bffd17 	ldw	r2,-12(fp)
   2d2dc:	10c00324 	muli	r3,r2,12
   2d2e0:	008000f4 	movhi	r2,3
   2d2e4:	10bfc804 	addi	r2,r2,-224
   2d2e8:	1885883a 	add	r2,r3,r2
   2d2ec:	00000106 	br	2d2f4 <read+0x40>
   2d2f0:	0005883a 	mov	r2,zero
   2d2f4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d2f8:	e0bffb17 	ldw	r2,-20(fp)
   2d2fc:	10002226 	beq	r2,zero,2d388 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d300:	e0bffb17 	ldw	r2,-20(fp)
   2d304:	10800217 	ldw	r2,8(r2)
   2d308:	108000cc 	andi	r2,r2,3
   2d30c:	10800060 	cmpeqi	r2,r2,1
   2d310:	1000181e 	bne	r2,zero,2d374 <read+0xc0>
        (fd->dev->read))
   2d314:	e0bffb17 	ldw	r2,-20(fp)
   2d318:	10800017 	ldw	r2,0(r2)
   2d31c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d320:	10001426 	beq	r2,zero,2d374 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2d324:	e0bffb17 	ldw	r2,-20(fp)
   2d328:	10800017 	ldw	r2,0(r2)
   2d32c:	10800517 	ldw	r2,20(r2)
   2d330:	e0ffff17 	ldw	r3,-4(fp)
   2d334:	180d883a 	mov	r6,r3
   2d338:	e17ffe17 	ldw	r5,-8(fp)
   2d33c:	e13ffb17 	ldw	r4,-20(fp)
   2d340:	103ee83a 	callr	r2
   2d344:	e0bffc15 	stw	r2,-16(fp)
   2d348:	e0bffc17 	ldw	r2,-16(fp)
   2d34c:	1000070e 	bge	r2,zero,2d36c <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2d350:	002d2780 	call	2d278 <alt_get_errno>
   2d354:	1007883a 	mov	r3,r2
   2d358:	e0bffc17 	ldw	r2,-16(fp)
   2d35c:	0085c83a 	sub	r2,zero,r2
   2d360:	18800015 	stw	r2,0(r3)
          return -1;
   2d364:	00bfffc4 	movi	r2,-1
   2d368:	00000c06 	br	2d39c <read+0xe8>
        }
        return rval;
   2d36c:	e0bffc17 	ldw	r2,-16(fp)
   2d370:	00000a06 	br	2d39c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2d374:	002d2780 	call	2d278 <alt_get_errno>
   2d378:	1007883a 	mov	r3,r2
   2d37c:	00800344 	movi	r2,13
   2d380:	18800015 	stw	r2,0(r3)
   2d384:	00000406 	br	2d398 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2d388:	002d2780 	call	2d278 <alt_get_errno>
   2d38c:	1007883a 	mov	r3,r2
   2d390:	00801444 	movi	r2,81
   2d394:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d398:	00bfffc4 	movi	r2,-1
}
   2d39c:	e037883a 	mov	sp,fp
   2d3a0:	dfc00117 	ldw	ra,4(sp)
   2d3a4:	df000017 	ldw	fp,0(sp)
   2d3a8:	dec00204 	addi	sp,sp,8
   2d3ac:	f800283a 	ret

0002d3b0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2d3b0:	defffe04 	addi	sp,sp,-8
   2d3b4:	df000115 	stw	fp,4(sp)
   2d3b8:	df000104 	addi	fp,sp,4
   2d3bc:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2d3c0:	e0bfff17 	ldw	r2,-4(fp)
   2d3c4:	108000d0 	cmplti	r2,r2,3
   2d3c8:	10000d1e 	bne	r2,zero,2d400 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2d3cc:	008000f4 	movhi	r2,3
   2d3d0:	10bfc804 	addi	r2,r2,-224
   2d3d4:	e0ffff17 	ldw	r3,-4(fp)
   2d3d8:	18c00324 	muli	r3,r3,12
   2d3dc:	10c5883a 	add	r2,r2,r3
   2d3e0:	10800204 	addi	r2,r2,8
   2d3e4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2d3e8:	008000f4 	movhi	r2,3
   2d3ec:	10bfc804 	addi	r2,r2,-224
   2d3f0:	e0ffff17 	ldw	r3,-4(fp)
   2d3f4:	18c00324 	muli	r3,r3,12
   2d3f8:	10c5883a 	add	r2,r2,r3
   2d3fc:	10000015 	stw	zero,0(r2)
  }
}
   2d400:	0001883a 	nop
   2d404:	e037883a 	mov	sp,fp
   2d408:	df000017 	ldw	fp,0(sp)
   2d40c:	dec00104 	addi	sp,sp,4
   2d410:	f800283a 	ret

0002d414 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2d414:	defff904 	addi	sp,sp,-28
   2d418:	df000615 	stw	fp,24(sp)
   2d41c:	df000604 	addi	fp,sp,24
   2d420:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2d424:	0005303a 	rdctl	r2,status
   2d428:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d42c:	e0fffe17 	ldw	r3,-8(fp)
   2d430:	00bfff84 	movi	r2,-2
   2d434:	1884703a 	and	r2,r3,r2
   2d438:	1001703a 	wrctl	status,r2
  
  return context;
   2d43c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2d440:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2d444:	d0a00c17 	ldw	r2,-32720(gp)
   2d448:	10c000c4 	addi	r3,r2,3
   2d44c:	00bfff04 	movi	r2,-4
   2d450:	1884703a 	and	r2,r3,r2
   2d454:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2d458:	d0e00c17 	ldw	r3,-32720(gp)
   2d45c:	e0bfff17 	ldw	r2,-4(fp)
   2d460:	1887883a 	add	r3,r3,r2
   2d464:	00800134 	movhi	r2,4
   2d468:	10800004 	addi	r2,r2,0
   2d46c:	10c0062e 	bgeu	r2,r3,2d488 <sbrk+0x74>
   2d470:	e0bffb17 	ldw	r2,-20(fp)
   2d474:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2d478:	e0bffa17 	ldw	r2,-24(fp)
   2d47c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2d480:	00bfffc4 	movi	r2,-1
   2d484:	00000b06 	br	2d4b4 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2d488:	d0a00c17 	ldw	r2,-32720(gp)
   2d48c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2d490:	d0e00c17 	ldw	r3,-32720(gp)
   2d494:	e0bfff17 	ldw	r2,-4(fp)
   2d498:	1885883a 	add	r2,r3,r2
   2d49c:	d0a00c15 	stw	r2,-32720(gp)
   2d4a0:	e0bffb17 	ldw	r2,-20(fp)
   2d4a4:	e0bffc15 	stw	r2,-16(fp)
   2d4a8:	e0bffc17 	ldw	r2,-16(fp)
   2d4ac:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2d4b0:	e0bffd17 	ldw	r2,-12(fp)
} 
   2d4b4:	e037883a 	mov	sp,fp
   2d4b8:	df000017 	ldw	fp,0(sp)
   2d4bc:	dec00104 	addi	sp,sp,4
   2d4c0:	f800283a 	ret

0002d4c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d4c4:	defffe04 	addi	sp,sp,-8
   2d4c8:	dfc00115 	stw	ra,4(sp)
   2d4cc:	df000015 	stw	fp,0(sp)
   2d4d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d4d4:	d0a00b17 	ldw	r2,-32724(gp)
   2d4d8:	10000326 	beq	r2,zero,2d4e8 <alt_get_errno+0x24>
   2d4dc:	d0a00b17 	ldw	r2,-32724(gp)
   2d4e0:	103ee83a 	callr	r2
   2d4e4:	00000106 	br	2d4ec <alt_get_errno+0x28>
   2d4e8:	d0a6d104 	addi	r2,gp,-25788
}
   2d4ec:	e037883a 	mov	sp,fp
   2d4f0:	dfc00117 	ldw	ra,4(sp)
   2d4f4:	df000017 	ldw	fp,0(sp)
   2d4f8:	dec00204 	addi	sp,sp,8
   2d4fc:	f800283a 	ret

0002d500 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2d500:	defff904 	addi	sp,sp,-28
   2d504:	dfc00615 	stw	ra,24(sp)
   2d508:	df000515 	stw	fp,20(sp)
   2d50c:	df000504 	addi	fp,sp,20
   2d510:	e13ffd15 	stw	r4,-12(fp)
   2d514:	e17ffe15 	stw	r5,-8(fp)
   2d518:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d51c:	e0bffd17 	ldw	r2,-12(fp)
   2d520:	10000616 	blt	r2,zero,2d53c <write+0x3c>
   2d524:	e0bffd17 	ldw	r2,-12(fp)
   2d528:	10c00324 	muli	r3,r2,12
   2d52c:	008000f4 	movhi	r2,3
   2d530:	10bfc804 	addi	r2,r2,-224
   2d534:	1885883a 	add	r2,r3,r2
   2d538:	00000106 	br	2d540 <write+0x40>
   2d53c:	0005883a 	mov	r2,zero
   2d540:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d544:	e0bffb17 	ldw	r2,-20(fp)
   2d548:	10002126 	beq	r2,zero,2d5d0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2d54c:	e0bffb17 	ldw	r2,-20(fp)
   2d550:	10800217 	ldw	r2,8(r2)
   2d554:	108000cc 	andi	r2,r2,3
   2d558:	10001826 	beq	r2,zero,2d5bc <write+0xbc>
   2d55c:	e0bffb17 	ldw	r2,-20(fp)
   2d560:	10800017 	ldw	r2,0(r2)
   2d564:	10800617 	ldw	r2,24(r2)
   2d568:	10001426 	beq	r2,zero,2d5bc <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2d56c:	e0bffb17 	ldw	r2,-20(fp)
   2d570:	10800017 	ldw	r2,0(r2)
   2d574:	10800617 	ldw	r2,24(r2)
   2d578:	e0ffff17 	ldw	r3,-4(fp)
   2d57c:	180d883a 	mov	r6,r3
   2d580:	e17ffe17 	ldw	r5,-8(fp)
   2d584:	e13ffb17 	ldw	r4,-20(fp)
   2d588:	103ee83a 	callr	r2
   2d58c:	e0bffc15 	stw	r2,-16(fp)
   2d590:	e0bffc17 	ldw	r2,-16(fp)
   2d594:	1000070e 	bge	r2,zero,2d5b4 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2d598:	002d4c40 	call	2d4c4 <alt_get_errno>
   2d59c:	1007883a 	mov	r3,r2
   2d5a0:	e0bffc17 	ldw	r2,-16(fp)
   2d5a4:	0085c83a 	sub	r2,zero,r2
   2d5a8:	18800015 	stw	r2,0(r3)
        return -1;
   2d5ac:	00bfffc4 	movi	r2,-1
   2d5b0:	00000c06 	br	2d5e4 <write+0xe4>
      }
      return rval;
   2d5b4:	e0bffc17 	ldw	r2,-16(fp)
   2d5b8:	00000a06 	br	2d5e4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2d5bc:	002d4c40 	call	2d4c4 <alt_get_errno>
   2d5c0:	1007883a 	mov	r3,r2
   2d5c4:	00800344 	movi	r2,13
   2d5c8:	18800015 	stw	r2,0(r3)
   2d5cc:	00000406 	br	2d5e0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2d5d0:	002d4c40 	call	2d4c4 <alt_get_errno>
   2d5d4:	1007883a 	mov	r3,r2
   2d5d8:	00801444 	movi	r2,81
   2d5dc:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d5e0:	00bfffc4 	movi	r2,-1
}
   2d5e4:	e037883a 	mov	sp,fp
   2d5e8:	dfc00117 	ldw	ra,4(sp)
   2d5ec:	df000017 	ldw	fp,0(sp)
   2d5f0:	dec00204 	addi	sp,sp,8
   2d5f4:	f800283a 	ret

0002d5f8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2d5f8:	defffd04 	addi	sp,sp,-12
   2d5fc:	dfc00215 	stw	ra,8(sp)
   2d600:	df000115 	stw	fp,4(sp)
   2d604:	df000104 	addi	fp,sp,4
   2d608:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2d60c:	d1600804 	addi	r5,gp,-32736
   2d610:	e13fff17 	ldw	r4,-4(fp)
   2d614:	002e2c40 	call	2e2c4 <alt_dev_llist_insert>
}
   2d618:	e037883a 	mov	sp,fp
   2d61c:	dfc00117 	ldw	ra,4(sp)
   2d620:	df000017 	ldw	fp,0(sp)
   2d624:	dec00204 	addi	sp,sp,8
   2d628:	f800283a 	ret

0002d62c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2d62c:	defffd04 	addi	sp,sp,-12
   2d630:	dfc00215 	stw	ra,8(sp)
   2d634:	df000115 	stw	fp,4(sp)
   2d638:	df000104 	addi	fp,sp,4
   2d63c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2d640:	002ec340 	call	2ec34 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2d644:	00800044 	movi	r2,1
   2d648:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2d64c:	0001883a 	nop
   2d650:	e037883a 	mov	sp,fp
   2d654:	dfc00117 	ldw	ra,4(sp)
   2d658:	df000017 	ldw	fp,0(sp)
   2d65c:	dec00204 	addi	sp,sp,8
   2d660:	f800283a 	ret

0002d664 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2d664:	defffe04 	addi	sp,sp,-8
   2d668:	dfc00115 	stw	ra,4(sp)
   2d66c:	df000015 	stw	fp,0(sp)
   2d670:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2d674:	000d883a 	mov	r6,zero
   2d678:	000b883a 	mov	r5,zero
   2d67c:	010000f4 	movhi	r4,3
   2d680:	21003204 	addi	r4,r4,200
   2d684:	002d8100 	call	2d810 <altera_avalon_jtag_uart_init>
   2d688:	010000f4 	movhi	r4,3
   2d68c:	21002804 	addi	r4,r4,160
   2d690:	002d5f80 	call	2d5f8 <alt_dev_reg>
}
   2d694:	0001883a 	nop
   2d698:	e037883a 	mov	sp,fp
   2d69c:	dfc00117 	ldw	ra,4(sp)
   2d6a0:	df000017 	ldw	fp,0(sp)
   2d6a4:	dec00204 	addi	sp,sp,8
   2d6a8:	f800283a 	ret

0002d6ac <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2d6ac:	defffa04 	addi	sp,sp,-24
   2d6b0:	dfc00515 	stw	ra,20(sp)
   2d6b4:	df000415 	stw	fp,16(sp)
   2d6b8:	df000404 	addi	fp,sp,16
   2d6bc:	e13ffd15 	stw	r4,-12(fp)
   2d6c0:	e17ffe15 	stw	r5,-8(fp)
   2d6c4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d6c8:	e0bffd17 	ldw	r2,-12(fp)
   2d6cc:	10800017 	ldw	r2,0(r2)
   2d6d0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2d6d4:	e0bffc17 	ldw	r2,-16(fp)
   2d6d8:	10c00a04 	addi	r3,r2,40
   2d6dc:	e0bffd17 	ldw	r2,-12(fp)
   2d6e0:	10800217 	ldw	r2,8(r2)
   2d6e4:	100f883a 	mov	r7,r2
   2d6e8:	e1bfff17 	ldw	r6,-4(fp)
   2d6ec:	e17ffe17 	ldw	r5,-8(fp)
   2d6f0:	1809883a 	mov	r4,r3
   2d6f4:	002dcd40 	call	2dcd4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2d6f8:	e037883a 	mov	sp,fp
   2d6fc:	dfc00117 	ldw	ra,4(sp)
   2d700:	df000017 	ldw	fp,0(sp)
   2d704:	dec00204 	addi	sp,sp,8
   2d708:	f800283a 	ret

0002d70c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2d70c:	defffa04 	addi	sp,sp,-24
   2d710:	dfc00515 	stw	ra,20(sp)
   2d714:	df000415 	stw	fp,16(sp)
   2d718:	df000404 	addi	fp,sp,16
   2d71c:	e13ffd15 	stw	r4,-12(fp)
   2d720:	e17ffe15 	stw	r5,-8(fp)
   2d724:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d728:	e0bffd17 	ldw	r2,-12(fp)
   2d72c:	10800017 	ldw	r2,0(r2)
   2d730:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2d734:	e0bffc17 	ldw	r2,-16(fp)
   2d738:	10c00a04 	addi	r3,r2,40
   2d73c:	e0bffd17 	ldw	r2,-12(fp)
   2d740:	10800217 	ldw	r2,8(r2)
   2d744:	100f883a 	mov	r7,r2
   2d748:	e1bfff17 	ldw	r6,-4(fp)
   2d74c:	e17ffe17 	ldw	r5,-8(fp)
   2d750:	1809883a 	mov	r4,r3
   2d754:	002def00 	call	2def0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2d758:	e037883a 	mov	sp,fp
   2d75c:	dfc00117 	ldw	ra,4(sp)
   2d760:	df000017 	ldw	fp,0(sp)
   2d764:	dec00204 	addi	sp,sp,8
   2d768:	f800283a 	ret

0002d76c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2d76c:	defffc04 	addi	sp,sp,-16
   2d770:	dfc00315 	stw	ra,12(sp)
   2d774:	df000215 	stw	fp,8(sp)
   2d778:	df000204 	addi	fp,sp,8
   2d77c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d780:	e0bfff17 	ldw	r2,-4(fp)
   2d784:	10800017 	ldw	r2,0(r2)
   2d788:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2d78c:	e0bffe17 	ldw	r2,-8(fp)
   2d790:	10c00a04 	addi	r3,r2,40
   2d794:	e0bfff17 	ldw	r2,-4(fp)
   2d798:	10800217 	ldw	r2,8(r2)
   2d79c:	100b883a 	mov	r5,r2
   2d7a0:	1809883a 	mov	r4,r3
   2d7a4:	002db7c0 	call	2db7c <altera_avalon_jtag_uart_close>
}
   2d7a8:	e037883a 	mov	sp,fp
   2d7ac:	dfc00117 	ldw	ra,4(sp)
   2d7b0:	df000017 	ldw	fp,0(sp)
   2d7b4:	dec00204 	addi	sp,sp,8
   2d7b8:	f800283a 	ret

0002d7bc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2d7bc:	defffa04 	addi	sp,sp,-24
   2d7c0:	dfc00515 	stw	ra,20(sp)
   2d7c4:	df000415 	stw	fp,16(sp)
   2d7c8:	df000404 	addi	fp,sp,16
   2d7cc:	e13ffd15 	stw	r4,-12(fp)
   2d7d0:	e17ffe15 	stw	r5,-8(fp)
   2d7d4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2d7d8:	e0bffd17 	ldw	r2,-12(fp)
   2d7dc:	10800017 	ldw	r2,0(r2)
   2d7e0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2d7e4:	e0bffc17 	ldw	r2,-16(fp)
   2d7e8:	10800a04 	addi	r2,r2,40
   2d7ec:	e1bfff17 	ldw	r6,-4(fp)
   2d7f0:	e17ffe17 	ldw	r5,-8(fp)
   2d7f4:	1009883a 	mov	r4,r2
   2d7f8:	002dbe40 	call	2dbe4 <altera_avalon_jtag_uart_ioctl>
}
   2d7fc:	e037883a 	mov	sp,fp
   2d800:	dfc00117 	ldw	ra,4(sp)
   2d804:	df000017 	ldw	fp,0(sp)
   2d808:	dec00204 	addi	sp,sp,8
   2d80c:	f800283a 	ret

0002d810 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2d810:	defffa04 	addi	sp,sp,-24
   2d814:	dfc00515 	stw	ra,20(sp)
   2d818:	df000415 	stw	fp,16(sp)
   2d81c:	df000404 	addi	fp,sp,16
   2d820:	e13ffd15 	stw	r4,-12(fp)
   2d824:	e17ffe15 	stw	r5,-8(fp)
   2d828:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2d82c:	e0bffd17 	ldw	r2,-12(fp)
   2d830:	00c00044 	movi	r3,1
   2d834:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2d838:	e0bffd17 	ldw	r2,-12(fp)
   2d83c:	10800017 	ldw	r2,0(r2)
   2d840:	10800104 	addi	r2,r2,4
   2d844:	1007883a 	mov	r3,r2
   2d848:	e0bffd17 	ldw	r2,-12(fp)
   2d84c:	10800817 	ldw	r2,32(r2)
   2d850:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2d854:	e0bffe17 	ldw	r2,-8(fp)
   2d858:	e0ffff17 	ldw	r3,-4(fp)
   2d85c:	d8000015 	stw	zero,0(sp)
   2d860:	e1fffd17 	ldw	r7,-12(fp)
   2d864:	018000f4 	movhi	r6,3
   2d868:	31b63404 	addi	r6,r6,-10032
   2d86c:	180b883a 	mov	r5,r3
   2d870:	1009883a 	mov	r4,r2
   2d874:	002e45c0 	call	2e45c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2d878:	e0bffd17 	ldw	r2,-12(fp)
   2d87c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2d880:	e0bffd17 	ldw	r2,-12(fp)
   2d884:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2d888:	d0e6d617 	ldw	r3,-25768(gp)
   2d88c:	e1fffd17 	ldw	r7,-12(fp)
   2d890:	018000f4 	movhi	r6,3
   2d894:	31b6b704 	addi	r6,r6,-9508
   2d898:	180b883a 	mov	r5,r3
   2d89c:	1009883a 	mov	r4,r2
   2d8a0:	002e1140 	call	2e114 <alt_alarm_start>
   2d8a4:	1000040e 	bge	r2,zero,2d8b8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2d8a8:	e0fffd17 	ldw	r3,-12(fp)
   2d8ac:	00a00034 	movhi	r2,32768
   2d8b0:	10bfffc4 	addi	r2,r2,-1
   2d8b4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2d8b8:	0001883a 	nop
   2d8bc:	e037883a 	mov	sp,fp
   2d8c0:	dfc00117 	ldw	ra,4(sp)
   2d8c4:	df000017 	ldw	fp,0(sp)
   2d8c8:	dec00204 	addi	sp,sp,8
   2d8cc:	f800283a 	ret

0002d8d0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2d8d0:	defff804 	addi	sp,sp,-32
   2d8d4:	df000715 	stw	fp,28(sp)
   2d8d8:	df000704 	addi	fp,sp,28
   2d8dc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2d8e0:	e0bfff17 	ldw	r2,-4(fp)
   2d8e4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2d8e8:	e0bffb17 	ldw	r2,-20(fp)
   2d8ec:	10800017 	ldw	r2,0(r2)
   2d8f0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2d8f4:	e0bffc17 	ldw	r2,-16(fp)
   2d8f8:	10800104 	addi	r2,r2,4
   2d8fc:	10800037 	ldwio	r2,0(r2)
   2d900:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2d904:	e0bffd17 	ldw	r2,-12(fp)
   2d908:	1080c00c 	andi	r2,r2,768
   2d90c:	10006d26 	beq	r2,zero,2dac4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2d910:	e0bffd17 	ldw	r2,-12(fp)
   2d914:	1080400c 	andi	r2,r2,256
   2d918:	10003526 	beq	r2,zero,2d9f0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2d91c:	00800074 	movhi	r2,1
   2d920:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d924:	e0bffb17 	ldw	r2,-20(fp)
   2d928:	10800a17 	ldw	r2,40(r2)
   2d92c:	10800044 	addi	r2,r2,1
   2d930:	1081ffcc 	andi	r2,r2,2047
   2d934:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2d938:	e0bffb17 	ldw	r2,-20(fp)
   2d93c:	10c00b17 	ldw	r3,44(r2)
   2d940:	e0bffe17 	ldw	r2,-8(fp)
   2d944:	18801526 	beq	r3,r2,2d99c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2d948:	e0bffc17 	ldw	r2,-16(fp)
   2d94c:	10800037 	ldwio	r2,0(r2)
   2d950:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2d954:	e0bff917 	ldw	r2,-28(fp)
   2d958:	10a0000c 	andi	r2,r2,32768
   2d95c:	10001126 	beq	r2,zero,2d9a4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2d960:	e0bffb17 	ldw	r2,-20(fp)
   2d964:	10800a17 	ldw	r2,40(r2)
   2d968:	e0fff917 	ldw	r3,-28(fp)
   2d96c:	1809883a 	mov	r4,r3
   2d970:	e0fffb17 	ldw	r3,-20(fp)
   2d974:	1885883a 	add	r2,r3,r2
   2d978:	10800e04 	addi	r2,r2,56
   2d97c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d980:	e0bffb17 	ldw	r2,-20(fp)
   2d984:	10800a17 	ldw	r2,40(r2)
   2d988:	10800044 	addi	r2,r2,1
   2d98c:	10c1ffcc 	andi	r3,r2,2047
   2d990:	e0bffb17 	ldw	r2,-20(fp)
   2d994:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2d998:	003fe206 	br	2d924 <__alt_data_end+0xfffed924>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2d99c:	0001883a 	nop
   2d9a0:	00000106 	br	2d9a8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2d9a4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2d9a8:	e0bff917 	ldw	r2,-28(fp)
   2d9ac:	10bfffec 	andhi	r2,r2,65535
   2d9b0:	10000f26 	beq	r2,zero,2d9f0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2d9b4:	e0bffb17 	ldw	r2,-20(fp)
   2d9b8:	10c00817 	ldw	r3,32(r2)
   2d9bc:	00bfff84 	movi	r2,-2
   2d9c0:	1886703a 	and	r3,r3,r2
   2d9c4:	e0bffb17 	ldw	r2,-20(fp)
   2d9c8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2d9cc:	e0bffc17 	ldw	r2,-16(fp)
   2d9d0:	10800104 	addi	r2,r2,4
   2d9d4:	1007883a 	mov	r3,r2
   2d9d8:	e0bffb17 	ldw	r2,-20(fp)
   2d9dc:	10800817 	ldw	r2,32(r2)
   2d9e0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2d9e4:	e0bffc17 	ldw	r2,-16(fp)
   2d9e8:	10800104 	addi	r2,r2,4
   2d9ec:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2d9f0:	e0bffd17 	ldw	r2,-12(fp)
   2d9f4:	1080800c 	andi	r2,r2,512
   2d9f8:	103fbe26 	beq	r2,zero,2d8f4 <__alt_data_end+0xfffed8f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2d9fc:	e0bffd17 	ldw	r2,-12(fp)
   2da00:	1004d43a 	srli	r2,r2,16
   2da04:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2da08:	00001406 	br	2da5c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2da0c:	e0bffc17 	ldw	r2,-16(fp)
   2da10:	e0fffb17 	ldw	r3,-20(fp)
   2da14:	18c00d17 	ldw	r3,52(r3)
   2da18:	e13ffb17 	ldw	r4,-20(fp)
   2da1c:	20c7883a 	add	r3,r4,r3
   2da20:	18c20e04 	addi	r3,r3,2104
   2da24:	18c00003 	ldbu	r3,0(r3)
   2da28:	18c03fcc 	andi	r3,r3,255
   2da2c:	18c0201c 	xori	r3,r3,128
   2da30:	18ffe004 	addi	r3,r3,-128
   2da34:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2da38:	e0bffb17 	ldw	r2,-20(fp)
   2da3c:	10800d17 	ldw	r2,52(r2)
   2da40:	10800044 	addi	r2,r2,1
   2da44:	10c1ffcc 	andi	r3,r2,2047
   2da48:	e0bffb17 	ldw	r2,-20(fp)
   2da4c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2da50:	e0bffa17 	ldw	r2,-24(fp)
   2da54:	10bfffc4 	addi	r2,r2,-1
   2da58:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2da5c:	e0bffa17 	ldw	r2,-24(fp)
   2da60:	10000526 	beq	r2,zero,2da78 <altera_avalon_jtag_uart_irq+0x1a8>
   2da64:	e0bffb17 	ldw	r2,-20(fp)
   2da68:	10c00d17 	ldw	r3,52(r2)
   2da6c:	e0bffb17 	ldw	r2,-20(fp)
   2da70:	10800c17 	ldw	r2,48(r2)
   2da74:	18bfe51e 	bne	r3,r2,2da0c <__alt_data_end+0xfffeda0c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2da78:	e0bffa17 	ldw	r2,-24(fp)
   2da7c:	103f9d26 	beq	r2,zero,2d8f4 <__alt_data_end+0xfffed8f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2da80:	e0bffb17 	ldw	r2,-20(fp)
   2da84:	10c00817 	ldw	r3,32(r2)
   2da88:	00bfff44 	movi	r2,-3
   2da8c:	1886703a 	and	r3,r3,r2
   2da90:	e0bffb17 	ldw	r2,-20(fp)
   2da94:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2da98:	e0bffb17 	ldw	r2,-20(fp)
   2da9c:	10800017 	ldw	r2,0(r2)
   2daa0:	10800104 	addi	r2,r2,4
   2daa4:	1007883a 	mov	r3,r2
   2daa8:	e0bffb17 	ldw	r2,-20(fp)
   2daac:	10800817 	ldw	r2,32(r2)
   2dab0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2dab4:	e0bffc17 	ldw	r2,-16(fp)
   2dab8:	10800104 	addi	r2,r2,4
   2dabc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2dac0:	003f8c06 	br	2d8f4 <__alt_data_end+0xfffed8f4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2dac4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2dac8:	0001883a 	nop
   2dacc:	e037883a 	mov	sp,fp
   2dad0:	df000017 	ldw	fp,0(sp)
   2dad4:	dec00104 	addi	sp,sp,4
   2dad8:	f800283a 	ret

0002dadc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2dadc:	defff804 	addi	sp,sp,-32
   2dae0:	df000715 	stw	fp,28(sp)
   2dae4:	df000704 	addi	fp,sp,28
   2dae8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2daec:	e0bffb17 	ldw	r2,-20(fp)
   2daf0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2daf4:	e0bff917 	ldw	r2,-28(fp)
   2daf8:	10800017 	ldw	r2,0(r2)
   2dafc:	10800104 	addi	r2,r2,4
   2db00:	10800037 	ldwio	r2,0(r2)
   2db04:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2db08:	e0bffa17 	ldw	r2,-24(fp)
   2db0c:	1081000c 	andi	r2,r2,1024
   2db10:	10000b26 	beq	r2,zero,2db40 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2db14:	e0bff917 	ldw	r2,-28(fp)
   2db18:	10800017 	ldw	r2,0(r2)
   2db1c:	10800104 	addi	r2,r2,4
   2db20:	1007883a 	mov	r3,r2
   2db24:	e0bff917 	ldw	r2,-28(fp)
   2db28:	10800817 	ldw	r2,32(r2)
   2db2c:	10810014 	ori	r2,r2,1024
   2db30:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2db34:	e0bff917 	ldw	r2,-28(fp)
   2db38:	10000915 	stw	zero,36(r2)
   2db3c:	00000a06 	br	2db68 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2db40:	e0bff917 	ldw	r2,-28(fp)
   2db44:	10c00917 	ldw	r3,36(r2)
   2db48:	00a00034 	movhi	r2,32768
   2db4c:	10bfff04 	addi	r2,r2,-4
   2db50:	10c00536 	bltu	r2,r3,2db68 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2db54:	e0bff917 	ldw	r2,-28(fp)
   2db58:	10800917 	ldw	r2,36(r2)
   2db5c:	10c00044 	addi	r3,r2,1
   2db60:	e0bff917 	ldw	r2,-28(fp)
   2db64:	10c00915 	stw	r3,36(r2)
   2db68:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2db6c:	e037883a 	mov	sp,fp
   2db70:	df000017 	ldw	fp,0(sp)
   2db74:	dec00104 	addi	sp,sp,4
   2db78:	f800283a 	ret

0002db7c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2db7c:	defffd04 	addi	sp,sp,-12
   2db80:	df000215 	stw	fp,8(sp)
   2db84:	df000204 	addi	fp,sp,8
   2db88:	e13ffe15 	stw	r4,-8(fp)
   2db8c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2db90:	00000506 	br	2dba8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2db94:	e0bfff17 	ldw	r2,-4(fp)
   2db98:	1090000c 	andi	r2,r2,16384
   2db9c:	10000226 	beq	r2,zero,2dba8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2dba0:	00bffd44 	movi	r2,-11
   2dba4:	00000b06 	br	2dbd4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2dba8:	e0bffe17 	ldw	r2,-8(fp)
   2dbac:	10c00d17 	ldw	r3,52(r2)
   2dbb0:	e0bffe17 	ldw	r2,-8(fp)
   2dbb4:	10800c17 	ldw	r2,48(r2)
   2dbb8:	18800526 	beq	r3,r2,2dbd0 <altera_avalon_jtag_uart_close+0x54>
   2dbbc:	e0bffe17 	ldw	r2,-8(fp)
   2dbc0:	10c00917 	ldw	r3,36(r2)
   2dbc4:	e0bffe17 	ldw	r2,-8(fp)
   2dbc8:	10800117 	ldw	r2,4(r2)
   2dbcc:	18bff136 	bltu	r3,r2,2db94 <__alt_data_end+0xfffedb94>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2dbd0:	0005883a 	mov	r2,zero
}
   2dbd4:	e037883a 	mov	sp,fp
   2dbd8:	df000017 	ldw	fp,0(sp)
   2dbdc:	dec00104 	addi	sp,sp,4
   2dbe0:	f800283a 	ret

0002dbe4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2dbe4:	defffa04 	addi	sp,sp,-24
   2dbe8:	df000515 	stw	fp,20(sp)
   2dbec:	df000504 	addi	fp,sp,20
   2dbf0:	e13ffd15 	stw	r4,-12(fp)
   2dbf4:	e17ffe15 	stw	r5,-8(fp)
   2dbf8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2dbfc:	00bff9c4 	movi	r2,-25
   2dc00:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2dc04:	e0bffe17 	ldw	r2,-8(fp)
   2dc08:	10da8060 	cmpeqi	r3,r2,27137
   2dc0c:	1800031e 	bne	r3,zero,2dc1c <altera_avalon_jtag_uart_ioctl+0x38>
   2dc10:	109a80a0 	cmpeqi	r2,r2,27138
   2dc14:	1000181e 	bne	r2,zero,2dc78 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2dc18:	00002906 	br	2dcc0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2dc1c:	e0bffd17 	ldw	r2,-12(fp)
   2dc20:	10c00117 	ldw	r3,4(r2)
   2dc24:	00a00034 	movhi	r2,32768
   2dc28:	10bfffc4 	addi	r2,r2,-1
   2dc2c:	18802126 	beq	r3,r2,2dcb4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2dc30:	e0bfff17 	ldw	r2,-4(fp)
   2dc34:	10800017 	ldw	r2,0(r2)
   2dc38:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2dc3c:	e0bffc17 	ldw	r2,-16(fp)
   2dc40:	10800090 	cmplti	r2,r2,2
   2dc44:	1000061e 	bne	r2,zero,2dc60 <altera_avalon_jtag_uart_ioctl+0x7c>
   2dc48:	e0fffc17 	ldw	r3,-16(fp)
   2dc4c:	00a00034 	movhi	r2,32768
   2dc50:	10bfffc4 	addi	r2,r2,-1
   2dc54:	18800226 	beq	r3,r2,2dc60 <altera_avalon_jtag_uart_ioctl+0x7c>
   2dc58:	e0bffc17 	ldw	r2,-16(fp)
   2dc5c:	00000206 	br	2dc68 <altera_avalon_jtag_uart_ioctl+0x84>
   2dc60:	00a00034 	movhi	r2,32768
   2dc64:	10bfff84 	addi	r2,r2,-2
   2dc68:	e0fffd17 	ldw	r3,-12(fp)
   2dc6c:	18800115 	stw	r2,4(r3)
      rc = 0;
   2dc70:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2dc74:	00000f06 	br	2dcb4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2dc78:	e0bffd17 	ldw	r2,-12(fp)
   2dc7c:	10c00117 	ldw	r3,4(r2)
   2dc80:	00a00034 	movhi	r2,32768
   2dc84:	10bfffc4 	addi	r2,r2,-1
   2dc88:	18800c26 	beq	r3,r2,2dcbc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2dc8c:	e0bffd17 	ldw	r2,-12(fp)
   2dc90:	10c00917 	ldw	r3,36(r2)
   2dc94:	e0bffd17 	ldw	r2,-12(fp)
   2dc98:	10800117 	ldw	r2,4(r2)
   2dc9c:	1885803a 	cmpltu	r2,r3,r2
   2dca0:	10c03fcc 	andi	r3,r2,255
   2dca4:	e0bfff17 	ldw	r2,-4(fp)
   2dca8:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2dcac:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2dcb0:	00000206 	br	2dcbc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2dcb4:	0001883a 	nop
   2dcb8:	00000106 	br	2dcc0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2dcbc:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2dcc0:	e0bffb17 	ldw	r2,-20(fp)
}
   2dcc4:	e037883a 	mov	sp,fp
   2dcc8:	df000017 	ldw	fp,0(sp)
   2dccc:	dec00104 	addi	sp,sp,4
   2dcd0:	f800283a 	ret

0002dcd4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2dcd4:	defff304 	addi	sp,sp,-52
   2dcd8:	dfc00c15 	stw	ra,48(sp)
   2dcdc:	df000b15 	stw	fp,44(sp)
   2dce0:	df000b04 	addi	fp,sp,44
   2dce4:	e13ffc15 	stw	r4,-16(fp)
   2dce8:	e17ffd15 	stw	r5,-12(fp)
   2dcec:	e1bffe15 	stw	r6,-8(fp)
   2dcf0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2dcf4:	e0bffd17 	ldw	r2,-12(fp)
   2dcf8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2dcfc:	00004706 	br	2de1c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2dd00:	e0bffc17 	ldw	r2,-16(fp)
   2dd04:	10800a17 	ldw	r2,40(r2)
   2dd08:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2dd0c:	e0bffc17 	ldw	r2,-16(fp)
   2dd10:	10800b17 	ldw	r2,44(r2)
   2dd14:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2dd18:	e0fff717 	ldw	r3,-36(fp)
   2dd1c:	e0bff817 	ldw	r2,-32(fp)
   2dd20:	18800536 	bltu	r3,r2,2dd38 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2dd24:	e0fff717 	ldw	r3,-36(fp)
   2dd28:	e0bff817 	ldw	r2,-32(fp)
   2dd2c:	1885c83a 	sub	r2,r3,r2
   2dd30:	e0bff615 	stw	r2,-40(fp)
   2dd34:	00000406 	br	2dd48 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2dd38:	00c20004 	movi	r3,2048
   2dd3c:	e0bff817 	ldw	r2,-32(fp)
   2dd40:	1885c83a 	sub	r2,r3,r2
   2dd44:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2dd48:	e0bff617 	ldw	r2,-40(fp)
   2dd4c:	10001e26 	beq	r2,zero,2ddc8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2dd50:	e0fffe17 	ldw	r3,-8(fp)
   2dd54:	e0bff617 	ldw	r2,-40(fp)
   2dd58:	1880022e 	bgeu	r3,r2,2dd64 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2dd5c:	e0bffe17 	ldw	r2,-8(fp)
   2dd60:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2dd64:	e0bffc17 	ldw	r2,-16(fp)
   2dd68:	10c00e04 	addi	r3,r2,56
   2dd6c:	e0bff817 	ldw	r2,-32(fp)
   2dd70:	1885883a 	add	r2,r3,r2
   2dd74:	e1bff617 	ldw	r6,-40(fp)
   2dd78:	100b883a 	mov	r5,r2
   2dd7c:	e13ff517 	ldw	r4,-44(fp)
   2dd80:	0026d3c0 	call	26d3c <memcpy>
      ptr   += n;
   2dd84:	e0fff517 	ldw	r3,-44(fp)
   2dd88:	e0bff617 	ldw	r2,-40(fp)
   2dd8c:	1885883a 	add	r2,r3,r2
   2dd90:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2dd94:	e0fffe17 	ldw	r3,-8(fp)
   2dd98:	e0bff617 	ldw	r2,-40(fp)
   2dd9c:	1885c83a 	sub	r2,r3,r2
   2dda0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2dda4:	e0fff817 	ldw	r3,-32(fp)
   2dda8:	e0bff617 	ldw	r2,-40(fp)
   2ddac:	1885883a 	add	r2,r3,r2
   2ddb0:	10c1ffcc 	andi	r3,r2,2047
   2ddb4:	e0bffc17 	ldw	r2,-16(fp)
   2ddb8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2ddbc:	e0bffe17 	ldw	r2,-8(fp)
   2ddc0:	00bfcf16 	blt	zero,r2,2dd00 <__alt_data_end+0xfffedd00>
   2ddc4:	00000106 	br	2ddcc <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2ddc8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2ddcc:	e0fff517 	ldw	r3,-44(fp)
   2ddd0:	e0bffd17 	ldw	r2,-12(fp)
   2ddd4:	1880141e 	bne	r3,r2,2de28 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2ddd8:	e0bfff17 	ldw	r2,-4(fp)
   2dddc:	1090000c 	andi	r2,r2,16384
   2dde0:	1000131e 	bne	r2,zero,2de30 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2dde4:	0001883a 	nop
   2dde8:	e0bffc17 	ldw	r2,-16(fp)
   2ddec:	10c00a17 	ldw	r3,40(r2)
   2ddf0:	e0bff717 	ldw	r2,-36(fp)
   2ddf4:	1880051e 	bne	r3,r2,2de0c <altera_avalon_jtag_uart_read+0x138>
   2ddf8:	e0bffc17 	ldw	r2,-16(fp)
   2ddfc:	10c00917 	ldw	r3,36(r2)
   2de00:	e0bffc17 	ldw	r2,-16(fp)
   2de04:	10800117 	ldw	r2,4(r2)
   2de08:	18bff736 	bltu	r3,r2,2dde8 <__alt_data_end+0xfffedde8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2de0c:	e0bffc17 	ldw	r2,-16(fp)
   2de10:	10c00a17 	ldw	r3,40(r2)
   2de14:	e0bff717 	ldw	r2,-36(fp)
   2de18:	18800726 	beq	r3,r2,2de38 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2de1c:	e0bffe17 	ldw	r2,-8(fp)
   2de20:	00bfb716 	blt	zero,r2,2dd00 <__alt_data_end+0xfffedd00>
   2de24:	00000506 	br	2de3c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2de28:	0001883a 	nop
   2de2c:	00000306 	br	2de3c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2de30:	0001883a 	nop
   2de34:	00000106 	br	2de3c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2de38:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2de3c:	e0fff517 	ldw	r3,-44(fp)
   2de40:	e0bffd17 	ldw	r2,-12(fp)
   2de44:	18801826 	beq	r3,r2,2dea8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2de48:	0005303a 	rdctl	r2,status
   2de4c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2de50:	e0fffb17 	ldw	r3,-20(fp)
   2de54:	00bfff84 	movi	r2,-2
   2de58:	1884703a 	and	r2,r3,r2
   2de5c:	1001703a 	wrctl	status,r2
  
  return context;
   2de60:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2de64:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2de68:	e0bffc17 	ldw	r2,-16(fp)
   2de6c:	10800817 	ldw	r2,32(r2)
   2de70:	10c00054 	ori	r3,r2,1
   2de74:	e0bffc17 	ldw	r2,-16(fp)
   2de78:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2de7c:	e0bffc17 	ldw	r2,-16(fp)
   2de80:	10800017 	ldw	r2,0(r2)
   2de84:	10800104 	addi	r2,r2,4
   2de88:	1007883a 	mov	r3,r2
   2de8c:	e0bffc17 	ldw	r2,-16(fp)
   2de90:	10800817 	ldw	r2,32(r2)
   2de94:	18800035 	stwio	r2,0(r3)
   2de98:	e0bffa17 	ldw	r2,-24(fp)
   2de9c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2dea0:	e0bff917 	ldw	r2,-28(fp)
   2dea4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2dea8:	e0fff517 	ldw	r3,-44(fp)
   2deac:	e0bffd17 	ldw	r2,-12(fp)
   2deb0:	18800426 	beq	r3,r2,2dec4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2deb4:	e0fff517 	ldw	r3,-44(fp)
   2deb8:	e0bffd17 	ldw	r2,-12(fp)
   2debc:	1885c83a 	sub	r2,r3,r2
   2dec0:	00000606 	br	2dedc <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2dec4:	e0bfff17 	ldw	r2,-4(fp)
   2dec8:	1090000c 	andi	r2,r2,16384
   2decc:	10000226 	beq	r2,zero,2ded8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2ded0:	00bffd44 	movi	r2,-11
   2ded4:	00000106 	br	2dedc <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2ded8:	00bffec4 	movi	r2,-5
}
   2dedc:	e037883a 	mov	sp,fp
   2dee0:	dfc00117 	ldw	ra,4(sp)
   2dee4:	df000017 	ldw	fp,0(sp)
   2dee8:	dec00204 	addi	sp,sp,8
   2deec:	f800283a 	ret

0002def0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2def0:	defff304 	addi	sp,sp,-52
   2def4:	dfc00c15 	stw	ra,48(sp)
   2def8:	df000b15 	stw	fp,44(sp)
   2defc:	df000b04 	addi	fp,sp,44
   2df00:	e13ffc15 	stw	r4,-16(fp)
   2df04:	e17ffd15 	stw	r5,-12(fp)
   2df08:	e1bffe15 	stw	r6,-8(fp)
   2df0c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2df10:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2df14:	e0bffd17 	ldw	r2,-12(fp)
   2df18:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2df1c:	00003706 	br	2dffc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2df20:	e0bffc17 	ldw	r2,-16(fp)
   2df24:	10800c17 	ldw	r2,48(r2)
   2df28:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2df2c:	e0bffc17 	ldw	r2,-16(fp)
   2df30:	10800d17 	ldw	r2,52(r2)
   2df34:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2df38:	e0fff917 	ldw	r3,-28(fp)
   2df3c:	e0bff517 	ldw	r2,-44(fp)
   2df40:	1880062e 	bgeu	r3,r2,2df5c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2df44:	e0fff517 	ldw	r3,-44(fp)
   2df48:	e0bff917 	ldw	r2,-28(fp)
   2df4c:	1885c83a 	sub	r2,r3,r2
   2df50:	10bfffc4 	addi	r2,r2,-1
   2df54:	e0bff615 	stw	r2,-40(fp)
   2df58:	00000b06 	br	2df88 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2df5c:	e0bff517 	ldw	r2,-44(fp)
   2df60:	10000526 	beq	r2,zero,2df78 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2df64:	00c20004 	movi	r3,2048
   2df68:	e0bff917 	ldw	r2,-28(fp)
   2df6c:	1885c83a 	sub	r2,r3,r2
   2df70:	e0bff615 	stw	r2,-40(fp)
   2df74:	00000406 	br	2df88 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2df78:	00c1ffc4 	movi	r3,2047
   2df7c:	e0bff917 	ldw	r2,-28(fp)
   2df80:	1885c83a 	sub	r2,r3,r2
   2df84:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2df88:	e0bff617 	ldw	r2,-40(fp)
   2df8c:	10001e26 	beq	r2,zero,2e008 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2df90:	e0fffe17 	ldw	r3,-8(fp)
   2df94:	e0bff617 	ldw	r2,-40(fp)
   2df98:	1880022e 	bgeu	r3,r2,2dfa4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2df9c:	e0bffe17 	ldw	r2,-8(fp)
   2dfa0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2dfa4:	e0bffc17 	ldw	r2,-16(fp)
   2dfa8:	10c20e04 	addi	r3,r2,2104
   2dfac:	e0bff917 	ldw	r2,-28(fp)
   2dfb0:	1885883a 	add	r2,r3,r2
   2dfb4:	e1bff617 	ldw	r6,-40(fp)
   2dfb8:	e17ffd17 	ldw	r5,-12(fp)
   2dfbc:	1009883a 	mov	r4,r2
   2dfc0:	0026d3c0 	call	26d3c <memcpy>
      ptr   += n;
   2dfc4:	e0fffd17 	ldw	r3,-12(fp)
   2dfc8:	e0bff617 	ldw	r2,-40(fp)
   2dfcc:	1885883a 	add	r2,r3,r2
   2dfd0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2dfd4:	e0fffe17 	ldw	r3,-8(fp)
   2dfd8:	e0bff617 	ldw	r2,-40(fp)
   2dfdc:	1885c83a 	sub	r2,r3,r2
   2dfe0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2dfe4:	e0fff917 	ldw	r3,-28(fp)
   2dfe8:	e0bff617 	ldw	r2,-40(fp)
   2dfec:	1885883a 	add	r2,r3,r2
   2dff0:	10c1ffcc 	andi	r3,r2,2047
   2dff4:	e0bffc17 	ldw	r2,-16(fp)
   2dff8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2dffc:	e0bffe17 	ldw	r2,-8(fp)
   2e000:	00bfc716 	blt	zero,r2,2df20 <__alt_data_end+0xfffedf20>
   2e004:	00000106 	br	2e00c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2e008:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e00c:	0005303a 	rdctl	r2,status
   2e010:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e014:	e0fffb17 	ldw	r3,-20(fp)
   2e018:	00bfff84 	movi	r2,-2
   2e01c:	1884703a 	and	r2,r3,r2
   2e020:	1001703a 	wrctl	status,r2
  
  return context;
   2e024:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2e028:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e02c:	e0bffc17 	ldw	r2,-16(fp)
   2e030:	10800817 	ldw	r2,32(r2)
   2e034:	10c00094 	ori	r3,r2,2
   2e038:	e0bffc17 	ldw	r2,-16(fp)
   2e03c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e040:	e0bffc17 	ldw	r2,-16(fp)
   2e044:	10800017 	ldw	r2,0(r2)
   2e048:	10800104 	addi	r2,r2,4
   2e04c:	1007883a 	mov	r3,r2
   2e050:	e0bffc17 	ldw	r2,-16(fp)
   2e054:	10800817 	ldw	r2,32(r2)
   2e058:	18800035 	stwio	r2,0(r3)
   2e05c:	e0bffa17 	ldw	r2,-24(fp)
   2e060:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e064:	e0bff817 	ldw	r2,-32(fp)
   2e068:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2e06c:	e0bffe17 	ldw	r2,-8(fp)
   2e070:	0080100e 	bge	zero,r2,2e0b4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2e074:	e0bfff17 	ldw	r2,-4(fp)
   2e078:	1090000c 	andi	r2,r2,16384
   2e07c:	1000101e 	bne	r2,zero,2e0c0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2e080:	0001883a 	nop
   2e084:	e0bffc17 	ldw	r2,-16(fp)
   2e088:	10c00d17 	ldw	r3,52(r2)
   2e08c:	e0bff517 	ldw	r2,-44(fp)
   2e090:	1880051e 	bne	r3,r2,2e0a8 <altera_avalon_jtag_uart_write+0x1b8>
   2e094:	e0bffc17 	ldw	r2,-16(fp)
   2e098:	10c00917 	ldw	r3,36(r2)
   2e09c:	e0bffc17 	ldw	r2,-16(fp)
   2e0a0:	10800117 	ldw	r2,4(r2)
   2e0a4:	18bff736 	bltu	r3,r2,2e084 <__alt_data_end+0xfffee084>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2e0a8:	e0bffc17 	ldw	r2,-16(fp)
   2e0ac:	10800917 	ldw	r2,36(r2)
   2e0b0:	1000051e 	bne	r2,zero,2e0c8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2e0b4:	e0bffe17 	ldw	r2,-8(fp)
   2e0b8:	00bfd016 	blt	zero,r2,2dffc <__alt_data_end+0xfffedffc>
   2e0bc:	00000306 	br	2e0cc <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2e0c0:	0001883a 	nop
   2e0c4:	00000106 	br	2e0cc <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2e0c8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2e0cc:	e0fffd17 	ldw	r3,-12(fp)
   2e0d0:	e0bff717 	ldw	r2,-36(fp)
   2e0d4:	18800426 	beq	r3,r2,2e0e8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2e0d8:	e0fffd17 	ldw	r3,-12(fp)
   2e0dc:	e0bff717 	ldw	r2,-36(fp)
   2e0e0:	1885c83a 	sub	r2,r3,r2
   2e0e4:	00000606 	br	2e100 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2e0e8:	e0bfff17 	ldw	r2,-4(fp)
   2e0ec:	1090000c 	andi	r2,r2,16384
   2e0f0:	10000226 	beq	r2,zero,2e0fc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2e0f4:	00bffd44 	movi	r2,-11
   2e0f8:	00000106 	br	2e100 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2e0fc:	00bffec4 	movi	r2,-5
}
   2e100:	e037883a 	mov	sp,fp
   2e104:	dfc00117 	ldw	ra,4(sp)
   2e108:	df000017 	ldw	fp,0(sp)
   2e10c:	dec00204 	addi	sp,sp,8
   2e110:	f800283a 	ret

0002e114 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2e114:	defff504 	addi	sp,sp,-44
   2e118:	df000a15 	stw	fp,40(sp)
   2e11c:	df000a04 	addi	fp,sp,40
   2e120:	e13ffc15 	stw	r4,-16(fp)
   2e124:	e17ffd15 	stw	r5,-12(fp)
   2e128:	e1bffe15 	stw	r6,-8(fp)
   2e12c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2e130:	e03ff615 	stw	zero,-40(fp)
   2e134:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
   2e138:	10003c26 	beq	r2,zero,2e22c <alt_alarm_start+0x118>
  {
    if (alarm)
   2e13c:	e0bffc17 	ldw	r2,-16(fp)
   2e140:	10003826 	beq	r2,zero,2e224 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2e144:	e0bffc17 	ldw	r2,-16(fp)
   2e148:	e0fffe17 	ldw	r3,-8(fp)
   2e14c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2e150:	e0bffc17 	ldw	r2,-16(fp)
   2e154:	e0ffff17 	ldw	r3,-4(fp)
   2e158:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e15c:	0005303a 	rdctl	r2,status
   2e160:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e164:	e0fff917 	ldw	r3,-28(fp)
   2e168:	00bfff84 	movi	r2,-2
   2e16c:	1884703a 	and	r2,r3,r2
   2e170:	1001703a 	wrctl	status,r2
  
  return context;
   2e174:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2e178:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2e17c:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
   2e180:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2e184:	e0fffd17 	ldw	r3,-12(fp)
   2e188:	e0bff617 	ldw	r2,-40(fp)
   2e18c:	1885883a 	add	r2,r3,r2
   2e190:	10c00044 	addi	r3,r2,1
   2e194:	e0bffc17 	ldw	r2,-16(fp)
   2e198:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2e19c:	e0bffc17 	ldw	r2,-16(fp)
   2e1a0:	10c00217 	ldw	r3,8(r2)
   2e1a4:	e0bff617 	ldw	r2,-40(fp)
   2e1a8:	1880042e 	bgeu	r3,r2,2e1bc <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2e1ac:	e0bffc17 	ldw	r2,-16(fp)
   2e1b0:	00c00044 	movi	r3,1
   2e1b4:	10c00405 	stb	r3,16(r2)
   2e1b8:	00000206 	br	2e1c4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2e1bc:	e0bffc17 	ldw	r2,-16(fp)
   2e1c0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2e1c4:	e0bffc17 	ldw	r2,-16(fp)
   2e1c8:	d0e00e04 	addi	r3,gp,-32712
   2e1cc:	e0fffa15 	stw	r3,-24(fp)
   2e1d0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e1d4:	e0bffb17 	ldw	r2,-20(fp)
   2e1d8:	e0fffa17 	ldw	r3,-24(fp)
   2e1dc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e1e0:	e0bffa17 	ldw	r2,-24(fp)
   2e1e4:	10c00017 	ldw	r3,0(r2)
   2e1e8:	e0bffb17 	ldw	r2,-20(fp)
   2e1ec:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e1f0:	e0bffa17 	ldw	r2,-24(fp)
   2e1f4:	10800017 	ldw	r2,0(r2)
   2e1f8:	e0fffb17 	ldw	r3,-20(fp)
   2e1fc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e200:	e0bffa17 	ldw	r2,-24(fp)
   2e204:	e0fffb17 	ldw	r3,-20(fp)
   2e208:	10c00015 	stw	r3,0(r2)
   2e20c:	e0bff817 	ldw	r2,-32(fp)
   2e210:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e214:	e0bff717 	ldw	r2,-36(fp)
   2e218:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2e21c:	0005883a 	mov	r2,zero
   2e220:	00000306 	br	2e230 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2e224:	00bffa84 	movi	r2,-22
   2e228:	00000106 	br	2e230 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2e22c:	00bfde84 	movi	r2,-134
  }
}
   2e230:	e037883a 	mov	sp,fp
   2e234:	df000017 	ldw	fp,0(sp)
   2e238:	dec00104 	addi	sp,sp,4
   2e23c:	f800283a 	ret

0002e240 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2e240:	defffe04 	addi	sp,sp,-8
   2e244:	df000115 	stw	fp,4(sp)
   2e248:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e24c:	e03fff15 	stw	zero,-4(fp)
   2e250:	00000506 	br	2e268 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2e254:	e0bfff17 	ldw	r2,-4(fp)
   2e258:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e25c:	e0bfff17 	ldw	r2,-4(fp)
   2e260:	10800804 	addi	r2,r2,32
   2e264:	e0bfff15 	stw	r2,-4(fp)
   2e268:	e0bfff17 	ldw	r2,-4(fp)
   2e26c:	10820030 	cmpltui	r2,r2,2048
   2e270:	103ff81e 	bne	r2,zero,2e254 <__alt_data_end+0xfffee254>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2e274:	0001883a 	nop
   2e278:	e037883a 	mov	sp,fp
   2e27c:	df000017 	ldw	fp,0(sp)
   2e280:	dec00104 	addi	sp,sp,4
   2e284:	f800283a 	ret

0002e288 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e288:	defffe04 	addi	sp,sp,-8
   2e28c:	dfc00115 	stw	ra,4(sp)
   2e290:	df000015 	stw	fp,0(sp)
   2e294:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e298:	d0a00b17 	ldw	r2,-32724(gp)
   2e29c:	10000326 	beq	r2,zero,2e2ac <alt_get_errno+0x24>
   2e2a0:	d0a00b17 	ldw	r2,-32724(gp)
   2e2a4:	103ee83a 	callr	r2
   2e2a8:	00000106 	br	2e2b0 <alt_get_errno+0x28>
   2e2ac:	d0a6d104 	addi	r2,gp,-25788
}
   2e2b0:	e037883a 	mov	sp,fp
   2e2b4:	dfc00117 	ldw	ra,4(sp)
   2e2b8:	df000017 	ldw	fp,0(sp)
   2e2bc:	dec00204 	addi	sp,sp,8
   2e2c0:	f800283a 	ret

0002e2c4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2e2c4:	defffa04 	addi	sp,sp,-24
   2e2c8:	dfc00515 	stw	ra,20(sp)
   2e2cc:	df000415 	stw	fp,16(sp)
   2e2d0:	df000404 	addi	fp,sp,16
   2e2d4:	e13ffe15 	stw	r4,-8(fp)
   2e2d8:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2e2dc:	e0bffe17 	ldw	r2,-8(fp)
   2e2e0:	10000326 	beq	r2,zero,2e2f0 <alt_dev_llist_insert+0x2c>
   2e2e4:	e0bffe17 	ldw	r2,-8(fp)
   2e2e8:	10800217 	ldw	r2,8(r2)
   2e2ec:	1000061e 	bne	r2,zero,2e308 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2e2f0:	002e2880 	call	2e288 <alt_get_errno>
   2e2f4:	1007883a 	mov	r3,r2
   2e2f8:	00800584 	movi	r2,22
   2e2fc:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2e300:	00bffa84 	movi	r2,-22
   2e304:	00001306 	br	2e354 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2e308:	e0bffe17 	ldw	r2,-8(fp)
   2e30c:	e0ffff17 	ldw	r3,-4(fp)
   2e310:	e0fffc15 	stw	r3,-16(fp)
   2e314:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e318:	e0bffd17 	ldw	r2,-12(fp)
   2e31c:	e0fffc17 	ldw	r3,-16(fp)
   2e320:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e324:	e0bffc17 	ldw	r2,-16(fp)
   2e328:	10c00017 	ldw	r3,0(r2)
   2e32c:	e0bffd17 	ldw	r2,-12(fp)
   2e330:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e334:	e0bffc17 	ldw	r2,-16(fp)
   2e338:	10800017 	ldw	r2,0(r2)
   2e33c:	e0fffd17 	ldw	r3,-12(fp)
   2e340:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e344:	e0bffc17 	ldw	r2,-16(fp)
   2e348:	e0fffd17 	ldw	r3,-12(fp)
   2e34c:	10c00015 	stw	r3,0(r2)

  return 0;  
   2e350:	0005883a 	mov	r2,zero
}
   2e354:	e037883a 	mov	sp,fp
   2e358:	dfc00117 	ldw	ra,4(sp)
   2e35c:	df000017 	ldw	fp,0(sp)
   2e360:	dec00204 	addi	sp,sp,8
   2e364:	f800283a 	ret

0002e368 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2e368:	defffd04 	addi	sp,sp,-12
   2e36c:	dfc00215 	stw	ra,8(sp)
   2e370:	df000115 	stw	fp,4(sp)
   2e374:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e378:	008000f4 	movhi	r2,3
   2e37c:	10bcd404 	addi	r2,r2,-3248
   2e380:	e0bfff15 	stw	r2,-4(fp)
   2e384:	00000606 	br	2e3a0 <_do_ctors+0x38>
        (*ctor) (); 
   2e388:	e0bfff17 	ldw	r2,-4(fp)
   2e38c:	10800017 	ldw	r2,0(r2)
   2e390:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e394:	e0bfff17 	ldw	r2,-4(fp)
   2e398:	10bfff04 	addi	r2,r2,-4
   2e39c:	e0bfff15 	stw	r2,-4(fp)
   2e3a0:	e0ffff17 	ldw	r3,-4(fp)
   2e3a4:	008000f4 	movhi	r2,3
   2e3a8:	10bcd504 	addi	r2,r2,-3244
   2e3ac:	18bff62e 	bgeu	r3,r2,2e388 <__alt_data_end+0xfffee388>
        (*ctor) (); 
}
   2e3b0:	0001883a 	nop
   2e3b4:	e037883a 	mov	sp,fp
   2e3b8:	dfc00117 	ldw	ra,4(sp)
   2e3bc:	df000017 	ldw	fp,0(sp)
   2e3c0:	dec00204 	addi	sp,sp,8
   2e3c4:	f800283a 	ret

0002e3c8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2e3c8:	defffd04 	addi	sp,sp,-12
   2e3cc:	dfc00215 	stw	ra,8(sp)
   2e3d0:	df000115 	stw	fp,4(sp)
   2e3d4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e3d8:	008000f4 	movhi	r2,3
   2e3dc:	10bcd404 	addi	r2,r2,-3248
   2e3e0:	e0bfff15 	stw	r2,-4(fp)
   2e3e4:	00000606 	br	2e400 <_do_dtors+0x38>
        (*dtor) (); 
   2e3e8:	e0bfff17 	ldw	r2,-4(fp)
   2e3ec:	10800017 	ldw	r2,0(r2)
   2e3f0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e3f4:	e0bfff17 	ldw	r2,-4(fp)
   2e3f8:	10bfff04 	addi	r2,r2,-4
   2e3fc:	e0bfff15 	stw	r2,-4(fp)
   2e400:	e0ffff17 	ldw	r3,-4(fp)
   2e404:	008000f4 	movhi	r2,3
   2e408:	10bcd504 	addi	r2,r2,-3244
   2e40c:	18bff62e 	bgeu	r3,r2,2e3e8 <__alt_data_end+0xfffee3e8>
        (*dtor) (); 
}
   2e410:	0001883a 	nop
   2e414:	e037883a 	mov	sp,fp
   2e418:	dfc00117 	ldw	ra,4(sp)
   2e41c:	df000017 	ldw	fp,0(sp)
   2e420:	dec00204 	addi	sp,sp,8
   2e424:	f800283a 	ret

0002e428 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2e428:	defffe04 	addi	sp,sp,-8
   2e42c:	dfc00115 	stw	ra,4(sp)
   2e430:	df000015 	stw	fp,0(sp)
   2e434:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2e438:	01440004 	movi	r5,4096
   2e43c:	0009883a 	mov	r4,zero
   2e440:	002ee940 	call	2ee94 <alt_icache_flush>
#endif
}
   2e444:	0001883a 	nop
   2e448:	e037883a 	mov	sp,fp
   2e44c:	dfc00117 	ldw	ra,4(sp)
   2e450:	df000017 	ldw	fp,0(sp)
   2e454:	dec00204 	addi	sp,sp,8
   2e458:	f800283a 	ret

0002e45c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e45c:	defff904 	addi	sp,sp,-28
   2e460:	dfc00615 	stw	ra,24(sp)
   2e464:	df000515 	stw	fp,20(sp)
   2e468:	df000504 	addi	fp,sp,20
   2e46c:	e13ffc15 	stw	r4,-16(fp)
   2e470:	e17ffd15 	stw	r5,-12(fp)
   2e474:	e1bffe15 	stw	r6,-8(fp)
   2e478:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2e47c:	e0800217 	ldw	r2,8(fp)
   2e480:	d8800015 	stw	r2,0(sp)
   2e484:	e1ffff17 	ldw	r7,-4(fp)
   2e488:	e1bffe17 	ldw	r6,-8(fp)
   2e48c:	e17ffd17 	ldw	r5,-12(fp)
   2e490:	e13ffc17 	ldw	r4,-16(fp)
   2e494:	002e60c0 	call	2e60c <alt_iic_isr_register>
}  
   2e498:	e037883a 	mov	sp,fp
   2e49c:	dfc00117 	ldw	ra,4(sp)
   2e4a0:	df000017 	ldw	fp,0(sp)
   2e4a4:	dec00204 	addi	sp,sp,8
   2e4a8:	f800283a 	ret

0002e4ac <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2e4ac:	defff904 	addi	sp,sp,-28
   2e4b0:	df000615 	stw	fp,24(sp)
   2e4b4:	df000604 	addi	fp,sp,24
   2e4b8:	e13ffe15 	stw	r4,-8(fp)
   2e4bc:	e17fff15 	stw	r5,-4(fp)
   2e4c0:	e0bfff17 	ldw	r2,-4(fp)
   2e4c4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e4c8:	0005303a 	rdctl	r2,status
   2e4cc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e4d0:	e0fffb17 	ldw	r3,-20(fp)
   2e4d4:	00bfff84 	movi	r2,-2
   2e4d8:	1884703a 	and	r2,r3,r2
   2e4dc:	1001703a 	wrctl	status,r2
  
  return context;
   2e4e0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e4e4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   2e4e8:	00c00044 	movi	r3,1
   2e4ec:	e0bffa17 	ldw	r2,-24(fp)
   2e4f0:	1884983a 	sll	r2,r3,r2
   2e4f4:	1007883a 	mov	r3,r2
   2e4f8:	d0a6d517 	ldw	r2,-25772(gp)
   2e4fc:	1884b03a 	or	r2,r3,r2
   2e500:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e504:	d0a6d517 	ldw	r2,-25772(gp)
   2e508:	100170fa 	wrctl	ienable,r2
   2e50c:	e0bffc17 	ldw	r2,-16(fp)
   2e510:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e514:	e0bffd17 	ldw	r2,-12(fp)
   2e518:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e51c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   2e520:	0001883a 	nop
}
   2e524:	e037883a 	mov	sp,fp
   2e528:	df000017 	ldw	fp,0(sp)
   2e52c:	dec00104 	addi	sp,sp,4
   2e530:	f800283a 	ret

0002e534 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2e534:	defff904 	addi	sp,sp,-28
   2e538:	df000615 	stw	fp,24(sp)
   2e53c:	df000604 	addi	fp,sp,24
   2e540:	e13ffe15 	stw	r4,-8(fp)
   2e544:	e17fff15 	stw	r5,-4(fp)
   2e548:	e0bfff17 	ldw	r2,-4(fp)
   2e54c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e550:	0005303a 	rdctl	r2,status
   2e554:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e558:	e0fffb17 	ldw	r3,-20(fp)
   2e55c:	00bfff84 	movi	r2,-2
   2e560:	1884703a 	and	r2,r3,r2
   2e564:	1001703a 	wrctl	status,r2
  
  return context;
   2e568:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e56c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   2e570:	00c00044 	movi	r3,1
   2e574:	e0bffa17 	ldw	r2,-24(fp)
   2e578:	1884983a 	sll	r2,r3,r2
   2e57c:	0084303a 	nor	r2,zero,r2
   2e580:	1007883a 	mov	r3,r2
   2e584:	d0a6d517 	ldw	r2,-25772(gp)
   2e588:	1884703a 	and	r2,r3,r2
   2e58c:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e590:	d0a6d517 	ldw	r2,-25772(gp)
   2e594:	100170fa 	wrctl	ienable,r2
   2e598:	e0bffc17 	ldw	r2,-16(fp)
   2e59c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e5a0:	e0bffd17 	ldw	r2,-12(fp)
   2e5a4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e5a8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   2e5ac:	0001883a 	nop
}
   2e5b0:	e037883a 	mov	sp,fp
   2e5b4:	df000017 	ldw	fp,0(sp)
   2e5b8:	dec00104 	addi	sp,sp,4
   2e5bc:	f800283a 	ret

0002e5c0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2e5c0:	defffc04 	addi	sp,sp,-16
   2e5c4:	df000315 	stw	fp,12(sp)
   2e5c8:	df000304 	addi	fp,sp,12
   2e5cc:	e13ffe15 	stw	r4,-8(fp)
   2e5d0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2e5d4:	000530fa 	rdctl	r2,ienable
   2e5d8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2e5dc:	00c00044 	movi	r3,1
   2e5e0:	e0bfff17 	ldw	r2,-4(fp)
   2e5e4:	1884983a 	sll	r2,r3,r2
   2e5e8:	1007883a 	mov	r3,r2
   2e5ec:	e0bffd17 	ldw	r2,-12(fp)
   2e5f0:	1884703a 	and	r2,r3,r2
   2e5f4:	1004c03a 	cmpne	r2,r2,zero
   2e5f8:	10803fcc 	andi	r2,r2,255
}
   2e5fc:	e037883a 	mov	sp,fp
   2e600:	df000017 	ldw	fp,0(sp)
   2e604:	dec00104 	addi	sp,sp,4
   2e608:	f800283a 	ret

0002e60c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e60c:	defff504 	addi	sp,sp,-44
   2e610:	dfc00a15 	stw	ra,40(sp)
   2e614:	df000915 	stw	fp,36(sp)
   2e618:	df000904 	addi	fp,sp,36
   2e61c:	e13ffc15 	stw	r4,-16(fp)
   2e620:	e17ffd15 	stw	r5,-12(fp)
   2e624:	e1bffe15 	stw	r6,-8(fp)
   2e628:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   2e62c:	00bffa84 	movi	r2,-22
   2e630:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2e634:	e0bffd17 	ldw	r2,-12(fp)
   2e638:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2e63c:	e0bff817 	ldw	r2,-32(fp)
   2e640:	10800808 	cmpgei	r2,r2,32
   2e644:	1000271e 	bne	r2,zero,2e6e4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e648:	0005303a 	rdctl	r2,status
   2e64c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e650:	e0fffb17 	ldw	r3,-20(fp)
   2e654:	00bfff84 	movi	r2,-2
   2e658:	1884703a 	and	r2,r3,r2
   2e65c:	1001703a 	wrctl	status,r2
  
  return context;
   2e660:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2e664:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   2e668:	008000f4 	movhi	r2,3
   2e66c:	108b2304 	addi	r2,r2,11404
   2e670:	e0fff817 	ldw	r3,-32(fp)
   2e674:	180690fa 	slli	r3,r3,3
   2e678:	10c5883a 	add	r2,r2,r3
   2e67c:	e0fffe17 	ldw	r3,-8(fp)
   2e680:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   2e684:	008000f4 	movhi	r2,3
   2e688:	108b2304 	addi	r2,r2,11404
   2e68c:	e0fff817 	ldw	r3,-32(fp)
   2e690:	180690fa 	slli	r3,r3,3
   2e694:	10c5883a 	add	r2,r2,r3
   2e698:	10800104 	addi	r2,r2,4
   2e69c:	e0ffff17 	ldw	r3,-4(fp)
   2e6a0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2e6a4:	e0bffe17 	ldw	r2,-8(fp)
   2e6a8:	10000526 	beq	r2,zero,2e6c0 <alt_iic_isr_register+0xb4>
   2e6ac:	e0bff817 	ldw	r2,-32(fp)
   2e6b0:	100b883a 	mov	r5,r2
   2e6b4:	e13ffc17 	ldw	r4,-16(fp)
   2e6b8:	002e4ac0 	call	2e4ac <alt_ic_irq_enable>
   2e6bc:	00000406 	br	2e6d0 <alt_iic_isr_register+0xc4>
   2e6c0:	e0bff817 	ldw	r2,-32(fp)
   2e6c4:	100b883a 	mov	r5,r2
   2e6c8:	e13ffc17 	ldw	r4,-16(fp)
   2e6cc:	002e5340 	call	2e534 <alt_ic_irq_disable>
   2e6d0:	e0bff715 	stw	r2,-36(fp)
   2e6d4:	e0bffa17 	ldw	r2,-24(fp)
   2e6d8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e6dc:	e0bff917 	ldw	r2,-28(fp)
   2e6e0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2e6e4:	e0bff717 	ldw	r2,-36(fp)
}
   2e6e8:	e037883a 	mov	sp,fp
   2e6ec:	dfc00117 	ldw	ra,4(sp)
   2e6f0:	df000017 	ldw	fp,0(sp)
   2e6f4:	dec00204 	addi	sp,sp,8
   2e6f8:	f800283a 	ret

0002e6fc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2e6fc:	defff904 	addi	sp,sp,-28
   2e700:	dfc00615 	stw	ra,24(sp)
   2e704:	df000515 	stw	fp,20(sp)
   2e708:	df000504 	addi	fp,sp,20
   2e70c:	e13ffc15 	stw	r4,-16(fp)
   2e710:	e17ffd15 	stw	r5,-12(fp)
   2e714:	e1bffe15 	stw	r6,-8(fp)
   2e718:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2e71c:	e1bfff17 	ldw	r6,-4(fp)
   2e720:	e17ffe17 	ldw	r5,-8(fp)
   2e724:	e13ffd17 	ldw	r4,-12(fp)
   2e728:	002e93c0 	call	2e93c <open>
   2e72c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2e730:	e0bffb17 	ldw	r2,-20(fp)
   2e734:	10001c16 	blt	r2,zero,2e7a8 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   2e738:	008000f4 	movhi	r2,3
   2e73c:	10bfc804 	addi	r2,r2,-224
   2e740:	e0fffb17 	ldw	r3,-20(fp)
   2e744:	18c00324 	muli	r3,r3,12
   2e748:	10c5883a 	add	r2,r2,r3
   2e74c:	10c00017 	ldw	r3,0(r2)
   2e750:	e0bffc17 	ldw	r2,-16(fp)
   2e754:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2e758:	008000f4 	movhi	r2,3
   2e75c:	10bfc804 	addi	r2,r2,-224
   2e760:	e0fffb17 	ldw	r3,-20(fp)
   2e764:	18c00324 	muli	r3,r3,12
   2e768:	10c5883a 	add	r2,r2,r3
   2e76c:	10800104 	addi	r2,r2,4
   2e770:	10c00017 	ldw	r3,0(r2)
   2e774:	e0bffc17 	ldw	r2,-16(fp)
   2e778:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2e77c:	008000f4 	movhi	r2,3
   2e780:	10bfc804 	addi	r2,r2,-224
   2e784:	e0fffb17 	ldw	r3,-20(fp)
   2e788:	18c00324 	muli	r3,r3,12
   2e78c:	10c5883a 	add	r2,r2,r3
   2e790:	10800204 	addi	r2,r2,8
   2e794:	10c00017 	ldw	r3,0(r2)
   2e798:	e0bffc17 	ldw	r2,-16(fp)
   2e79c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2e7a0:	e13ffb17 	ldw	r4,-20(fp)
   2e7a4:	002d3b00 	call	2d3b0 <alt_release_fd>
  }
} 
   2e7a8:	0001883a 	nop
   2e7ac:	e037883a 	mov	sp,fp
   2e7b0:	dfc00117 	ldw	ra,4(sp)
   2e7b4:	df000017 	ldw	fp,0(sp)
   2e7b8:	dec00204 	addi	sp,sp,8
   2e7bc:	f800283a 	ret

0002e7c0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2e7c0:	defffb04 	addi	sp,sp,-20
   2e7c4:	dfc00415 	stw	ra,16(sp)
   2e7c8:	df000315 	stw	fp,12(sp)
   2e7cc:	df000304 	addi	fp,sp,12
   2e7d0:	e13ffd15 	stw	r4,-12(fp)
   2e7d4:	e17ffe15 	stw	r5,-8(fp)
   2e7d8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2e7dc:	01c07fc4 	movi	r7,511
   2e7e0:	01800044 	movi	r6,1
   2e7e4:	e17ffd17 	ldw	r5,-12(fp)
   2e7e8:	010000f4 	movhi	r4,3
   2e7ec:	213fcb04 	addi	r4,r4,-212
   2e7f0:	002e6fc0 	call	2e6fc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2e7f4:	01c07fc4 	movi	r7,511
   2e7f8:	000d883a 	mov	r6,zero
   2e7fc:	e17ffe17 	ldw	r5,-8(fp)
   2e800:	010000f4 	movhi	r4,3
   2e804:	213fc804 	addi	r4,r4,-224
   2e808:	002e6fc0 	call	2e6fc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2e80c:	01c07fc4 	movi	r7,511
   2e810:	01800044 	movi	r6,1
   2e814:	e17fff17 	ldw	r5,-4(fp)
   2e818:	010000f4 	movhi	r4,3
   2e81c:	213fce04 	addi	r4,r4,-200
   2e820:	002e6fc0 	call	2e6fc <alt_open_fd>
}  
   2e824:	0001883a 	nop
   2e828:	e037883a 	mov	sp,fp
   2e82c:	dfc00117 	ldw	ra,4(sp)
   2e830:	df000017 	ldw	fp,0(sp)
   2e834:	dec00204 	addi	sp,sp,8
   2e838:	f800283a 	ret

0002e83c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e83c:	defffe04 	addi	sp,sp,-8
   2e840:	dfc00115 	stw	ra,4(sp)
   2e844:	df000015 	stw	fp,0(sp)
   2e848:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e84c:	d0a00b17 	ldw	r2,-32724(gp)
   2e850:	10000326 	beq	r2,zero,2e860 <alt_get_errno+0x24>
   2e854:	d0a00b17 	ldw	r2,-32724(gp)
   2e858:	103ee83a 	callr	r2
   2e85c:	00000106 	br	2e864 <alt_get_errno+0x28>
   2e860:	d0a6d104 	addi	r2,gp,-25788
}
   2e864:	e037883a 	mov	sp,fp
   2e868:	dfc00117 	ldw	ra,4(sp)
   2e86c:	df000017 	ldw	fp,0(sp)
   2e870:	dec00204 	addi	sp,sp,8
   2e874:	f800283a 	ret

0002e878 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2e878:	defffd04 	addi	sp,sp,-12
   2e87c:	df000215 	stw	fp,8(sp)
   2e880:	df000204 	addi	fp,sp,8
   2e884:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2e888:	e0bfff17 	ldw	r2,-4(fp)
   2e88c:	10800217 	ldw	r2,8(r2)
   2e890:	10d00034 	orhi	r3,r2,16384
   2e894:	e0bfff17 	ldw	r2,-4(fp)
   2e898:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e89c:	e03ffe15 	stw	zero,-8(fp)
   2e8a0:	00001d06 	br	2e918 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e8a4:	008000f4 	movhi	r2,3
   2e8a8:	10bfc804 	addi	r2,r2,-224
   2e8ac:	e0fffe17 	ldw	r3,-8(fp)
   2e8b0:	18c00324 	muli	r3,r3,12
   2e8b4:	10c5883a 	add	r2,r2,r3
   2e8b8:	10c00017 	ldw	r3,0(r2)
   2e8bc:	e0bfff17 	ldw	r2,-4(fp)
   2e8c0:	10800017 	ldw	r2,0(r2)
   2e8c4:	1880111e 	bne	r3,r2,2e90c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e8c8:	008000f4 	movhi	r2,3
   2e8cc:	10bfc804 	addi	r2,r2,-224
   2e8d0:	e0fffe17 	ldw	r3,-8(fp)
   2e8d4:	18c00324 	muli	r3,r3,12
   2e8d8:	10c5883a 	add	r2,r2,r3
   2e8dc:	10800204 	addi	r2,r2,8
   2e8e0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e8e4:	1000090e 	bge	r2,zero,2e90c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2e8e8:	e0bffe17 	ldw	r2,-8(fp)
   2e8ec:	10c00324 	muli	r3,r2,12
   2e8f0:	008000f4 	movhi	r2,3
   2e8f4:	10bfc804 	addi	r2,r2,-224
   2e8f8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e8fc:	e0bfff17 	ldw	r2,-4(fp)
   2e900:	18800226 	beq	r3,r2,2e90c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2e904:	00bffcc4 	movi	r2,-13
   2e908:	00000806 	br	2e92c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e90c:	e0bffe17 	ldw	r2,-8(fp)
   2e910:	10800044 	addi	r2,r2,1
   2e914:	e0bffe15 	stw	r2,-8(fp)
   2e918:	d0a00a17 	ldw	r2,-32728(gp)
   2e91c:	1007883a 	mov	r3,r2
   2e920:	e0bffe17 	ldw	r2,-8(fp)
   2e924:	18bfdf2e 	bgeu	r3,r2,2e8a4 <__alt_data_end+0xfffee8a4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2e928:	0005883a 	mov	r2,zero
}
   2e92c:	e037883a 	mov	sp,fp
   2e930:	df000017 	ldw	fp,0(sp)
   2e934:	dec00104 	addi	sp,sp,4
   2e938:	f800283a 	ret

0002e93c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2e93c:	defff604 	addi	sp,sp,-40
   2e940:	dfc00915 	stw	ra,36(sp)
   2e944:	df000815 	stw	fp,32(sp)
   2e948:	df000804 	addi	fp,sp,32
   2e94c:	e13ffd15 	stw	r4,-12(fp)
   2e950:	e17ffe15 	stw	r5,-8(fp)
   2e954:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2e958:	00bfffc4 	movi	r2,-1
   2e95c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2e960:	00bffb44 	movi	r2,-19
   2e964:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2e968:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2e96c:	d1600804 	addi	r5,gp,-32736
   2e970:	e13ffd17 	ldw	r4,-12(fp)
   2e974:	002ec580 	call	2ec58 <alt_find_dev>
   2e978:	e0bff815 	stw	r2,-32(fp)
   2e97c:	e0bff817 	ldw	r2,-32(fp)
   2e980:	1000051e 	bne	r2,zero,2e998 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2e984:	e13ffd17 	ldw	r4,-12(fp)
   2e988:	002ece80 	call	2ece8 <alt_find_file>
   2e98c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2e990:	00800044 	movi	r2,1
   2e994:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2e998:	e0bff817 	ldw	r2,-32(fp)
   2e99c:	10002926 	beq	r2,zero,2ea44 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2e9a0:	e13ff817 	ldw	r4,-32(fp)
   2e9a4:	002edf00 	call	2edf0 <alt_get_fd>
   2e9a8:	e0bff915 	stw	r2,-28(fp)
   2e9ac:	e0bff917 	ldw	r2,-28(fp)
   2e9b0:	1000030e 	bge	r2,zero,2e9c0 <open+0x84>
    {
      status = index;
   2e9b4:	e0bff917 	ldw	r2,-28(fp)
   2e9b8:	e0bffa15 	stw	r2,-24(fp)
   2e9bc:	00002306 	br	2ea4c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2e9c0:	e0bff917 	ldw	r2,-28(fp)
   2e9c4:	10c00324 	muli	r3,r2,12
   2e9c8:	008000f4 	movhi	r2,3
   2e9cc:	10bfc804 	addi	r2,r2,-224
   2e9d0:	1885883a 	add	r2,r3,r2
   2e9d4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2e9d8:	e0fffe17 	ldw	r3,-8(fp)
   2e9dc:	00900034 	movhi	r2,16384
   2e9e0:	10bfffc4 	addi	r2,r2,-1
   2e9e4:	1886703a 	and	r3,r3,r2
   2e9e8:	e0bffc17 	ldw	r2,-16(fp)
   2e9ec:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2e9f0:	e0bffb17 	ldw	r2,-20(fp)
   2e9f4:	1000051e 	bne	r2,zero,2ea0c <open+0xd0>
   2e9f8:	e13ffc17 	ldw	r4,-16(fp)
   2e9fc:	002e8780 	call	2e878 <alt_file_locked>
   2ea00:	e0bffa15 	stw	r2,-24(fp)
   2ea04:	e0bffa17 	ldw	r2,-24(fp)
   2ea08:	10001016 	blt	r2,zero,2ea4c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2ea0c:	e0bff817 	ldw	r2,-32(fp)
   2ea10:	10800317 	ldw	r2,12(r2)
   2ea14:	10000826 	beq	r2,zero,2ea38 <open+0xfc>
   2ea18:	e0bff817 	ldw	r2,-32(fp)
   2ea1c:	10800317 	ldw	r2,12(r2)
   2ea20:	e1ffff17 	ldw	r7,-4(fp)
   2ea24:	e1bffe17 	ldw	r6,-8(fp)
   2ea28:	e17ffd17 	ldw	r5,-12(fp)
   2ea2c:	e13ffc17 	ldw	r4,-16(fp)
   2ea30:	103ee83a 	callr	r2
   2ea34:	00000106 	br	2ea3c <open+0x100>
   2ea38:	0005883a 	mov	r2,zero
   2ea3c:	e0bffa15 	stw	r2,-24(fp)
   2ea40:	00000206 	br	2ea4c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2ea44:	00bffb44 	movi	r2,-19
   2ea48:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2ea4c:	e0bffa17 	ldw	r2,-24(fp)
   2ea50:	1000090e 	bge	r2,zero,2ea78 <open+0x13c>
  {
    alt_release_fd (index);  
   2ea54:	e13ff917 	ldw	r4,-28(fp)
   2ea58:	002d3b00 	call	2d3b0 <alt_release_fd>
    ALT_ERRNO = -status;
   2ea5c:	002e83c0 	call	2e83c <alt_get_errno>
   2ea60:	1007883a 	mov	r3,r2
   2ea64:	e0bffa17 	ldw	r2,-24(fp)
   2ea68:	0085c83a 	sub	r2,zero,r2
   2ea6c:	18800015 	stw	r2,0(r3)
    return -1;
   2ea70:	00bfffc4 	movi	r2,-1
   2ea74:	00000106 	br	2ea7c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2ea78:	e0bff917 	ldw	r2,-28(fp)
}
   2ea7c:	e037883a 	mov	sp,fp
   2ea80:	dfc00117 	ldw	ra,4(sp)
   2ea84:	df000017 	ldw	fp,0(sp)
   2ea88:	dec00204 	addi	sp,sp,8
   2ea8c:	f800283a 	ret

0002ea90 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2ea90:	defffa04 	addi	sp,sp,-24
   2ea94:	df000515 	stw	fp,20(sp)
   2ea98:	df000504 	addi	fp,sp,20
   2ea9c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eaa0:	0005303a 	rdctl	r2,status
   2eaa4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eaa8:	e0fffc17 	ldw	r3,-16(fp)
   2eaac:	00bfff84 	movi	r2,-2
   2eab0:	1884703a 	and	r2,r3,r2
   2eab4:	1001703a 	wrctl	status,r2
  
  return context;
   2eab8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2eabc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2eac0:	e0bfff17 	ldw	r2,-4(fp)
   2eac4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2eac8:	e0bffd17 	ldw	r2,-12(fp)
   2eacc:	10800017 	ldw	r2,0(r2)
   2ead0:	e0fffd17 	ldw	r3,-12(fp)
   2ead4:	18c00117 	ldw	r3,4(r3)
   2ead8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2eadc:	e0bffd17 	ldw	r2,-12(fp)
   2eae0:	10800117 	ldw	r2,4(r2)
   2eae4:	e0fffd17 	ldw	r3,-12(fp)
   2eae8:	18c00017 	ldw	r3,0(r3)
   2eaec:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2eaf0:	e0bffd17 	ldw	r2,-12(fp)
   2eaf4:	e0fffd17 	ldw	r3,-12(fp)
   2eaf8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2eafc:	e0bffd17 	ldw	r2,-12(fp)
   2eb00:	e0fffd17 	ldw	r3,-12(fp)
   2eb04:	10c00015 	stw	r3,0(r2)
   2eb08:	e0bffb17 	ldw	r2,-20(fp)
   2eb0c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2eb10:	e0bffe17 	ldw	r2,-8(fp)
   2eb14:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2eb18:	0001883a 	nop
   2eb1c:	e037883a 	mov	sp,fp
   2eb20:	df000017 	ldw	fp,0(sp)
   2eb24:	dec00104 	addi	sp,sp,4
   2eb28:	f800283a 	ret

0002eb2c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2eb2c:	defffb04 	addi	sp,sp,-20
   2eb30:	dfc00415 	stw	ra,16(sp)
   2eb34:	df000315 	stw	fp,12(sp)
   2eb38:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2eb3c:	d0a00e17 	ldw	r2,-32712(gp)
   2eb40:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2eb44:	d0a6d717 	ldw	r2,-25764(gp)
   2eb48:	10800044 	addi	r2,r2,1
   2eb4c:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2eb50:	00002e06 	br	2ec0c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2eb54:	e0bffd17 	ldw	r2,-12(fp)
   2eb58:	10800017 	ldw	r2,0(r2)
   2eb5c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2eb60:	e0bffd17 	ldw	r2,-12(fp)
   2eb64:	10800403 	ldbu	r2,16(r2)
   2eb68:	10803fcc 	andi	r2,r2,255
   2eb6c:	10000426 	beq	r2,zero,2eb80 <alt_tick+0x54>
   2eb70:	d0a6d717 	ldw	r2,-25764(gp)
   2eb74:	1000021e 	bne	r2,zero,2eb80 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2eb78:	e0bffd17 	ldw	r2,-12(fp)
   2eb7c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2eb80:	e0bffd17 	ldw	r2,-12(fp)
   2eb84:	10800217 	ldw	r2,8(r2)
   2eb88:	d0e6d717 	ldw	r3,-25764(gp)
   2eb8c:	18801d36 	bltu	r3,r2,2ec04 <alt_tick+0xd8>
   2eb90:	e0bffd17 	ldw	r2,-12(fp)
   2eb94:	10800403 	ldbu	r2,16(r2)
   2eb98:	10803fcc 	andi	r2,r2,255
   2eb9c:	1000191e 	bne	r2,zero,2ec04 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2eba0:	e0bffd17 	ldw	r2,-12(fp)
   2eba4:	10800317 	ldw	r2,12(r2)
   2eba8:	e0fffd17 	ldw	r3,-12(fp)
   2ebac:	18c00517 	ldw	r3,20(r3)
   2ebb0:	1809883a 	mov	r4,r3
   2ebb4:	103ee83a 	callr	r2
   2ebb8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2ebbc:	e0bfff17 	ldw	r2,-4(fp)
   2ebc0:	1000031e 	bne	r2,zero,2ebd0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2ebc4:	e13ffd17 	ldw	r4,-12(fp)
   2ebc8:	002ea900 	call	2ea90 <alt_alarm_stop>
   2ebcc:	00000d06 	br	2ec04 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2ebd0:	e0bffd17 	ldw	r2,-12(fp)
   2ebd4:	10c00217 	ldw	r3,8(r2)
   2ebd8:	e0bfff17 	ldw	r2,-4(fp)
   2ebdc:	1887883a 	add	r3,r3,r2
   2ebe0:	e0bffd17 	ldw	r2,-12(fp)
   2ebe4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2ebe8:	e0bffd17 	ldw	r2,-12(fp)
   2ebec:	10c00217 	ldw	r3,8(r2)
   2ebf0:	d0a6d717 	ldw	r2,-25764(gp)
   2ebf4:	1880032e 	bgeu	r3,r2,2ec04 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2ebf8:	e0bffd17 	ldw	r2,-12(fp)
   2ebfc:	00c00044 	movi	r3,1
   2ec00:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2ec04:	e0bffe17 	ldw	r2,-8(fp)
   2ec08:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2ec0c:	e0fffd17 	ldw	r3,-12(fp)
   2ec10:	d0a00e04 	addi	r2,gp,-32712
   2ec14:	18bfcf1e 	bne	r3,r2,2eb54 <__alt_data_end+0xfffeeb54>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2ec18:	0001883a 	nop
}
   2ec1c:	0001883a 	nop
   2ec20:	e037883a 	mov	sp,fp
   2ec24:	dfc00117 	ldw	ra,4(sp)
   2ec28:	df000017 	ldw	fp,0(sp)
   2ec2c:	dec00204 	addi	sp,sp,8
   2ec30:	f800283a 	ret

0002ec34 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2ec34:	deffff04 	addi	sp,sp,-4
   2ec38:	df000015 	stw	fp,0(sp)
   2ec3c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2ec40:	000170fa 	wrctl	ienable,zero
}
   2ec44:	0001883a 	nop
   2ec48:	e037883a 	mov	sp,fp
   2ec4c:	df000017 	ldw	fp,0(sp)
   2ec50:	dec00104 	addi	sp,sp,4
   2ec54:	f800283a 	ret

0002ec58 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2ec58:	defffa04 	addi	sp,sp,-24
   2ec5c:	dfc00515 	stw	ra,20(sp)
   2ec60:	df000415 	stw	fp,16(sp)
   2ec64:	df000404 	addi	fp,sp,16
   2ec68:	e13ffe15 	stw	r4,-8(fp)
   2ec6c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2ec70:	e0bfff17 	ldw	r2,-4(fp)
   2ec74:	10800017 	ldw	r2,0(r2)
   2ec78:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2ec7c:	e13ffe17 	ldw	r4,-8(fp)
   2ec80:	00282880 	call	28288 <strlen>
   2ec84:	10800044 	addi	r2,r2,1
   2ec88:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2ec8c:	00000d06 	br	2ecc4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2ec90:	e0bffc17 	ldw	r2,-16(fp)
   2ec94:	10800217 	ldw	r2,8(r2)
   2ec98:	e0fffd17 	ldw	r3,-12(fp)
   2ec9c:	180d883a 	mov	r6,r3
   2eca0:	e17ffe17 	ldw	r5,-8(fp)
   2eca4:	1009883a 	mov	r4,r2
   2eca8:	002f00c0 	call	2f00c <memcmp>
   2ecac:	1000021e 	bne	r2,zero,2ecb8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2ecb0:	e0bffc17 	ldw	r2,-16(fp)
   2ecb4:	00000706 	br	2ecd4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2ecb8:	e0bffc17 	ldw	r2,-16(fp)
   2ecbc:	10800017 	ldw	r2,0(r2)
   2ecc0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2ecc4:	e0fffc17 	ldw	r3,-16(fp)
   2ecc8:	e0bfff17 	ldw	r2,-4(fp)
   2eccc:	18bff01e 	bne	r3,r2,2ec90 <__alt_data_end+0xfffeec90>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2ecd0:	0005883a 	mov	r2,zero
}
   2ecd4:	e037883a 	mov	sp,fp
   2ecd8:	dfc00117 	ldw	ra,4(sp)
   2ecdc:	df000017 	ldw	fp,0(sp)
   2ece0:	dec00204 	addi	sp,sp,8
   2ece4:	f800283a 	ret

0002ece8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2ece8:	defffb04 	addi	sp,sp,-20
   2ecec:	dfc00415 	stw	ra,16(sp)
   2ecf0:	df000315 	stw	fp,12(sp)
   2ecf4:	df000304 	addi	fp,sp,12
   2ecf8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2ecfc:	d0a00617 	ldw	r2,-32744(gp)
   2ed00:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2ed04:	00003106 	br	2edcc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2ed08:	e0bffd17 	ldw	r2,-12(fp)
   2ed0c:	10800217 	ldw	r2,8(r2)
   2ed10:	1009883a 	mov	r4,r2
   2ed14:	00282880 	call	28288 <strlen>
   2ed18:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2ed1c:	e0bffd17 	ldw	r2,-12(fp)
   2ed20:	10c00217 	ldw	r3,8(r2)
   2ed24:	e0bffe17 	ldw	r2,-8(fp)
   2ed28:	10bfffc4 	addi	r2,r2,-1
   2ed2c:	1885883a 	add	r2,r3,r2
   2ed30:	10800003 	ldbu	r2,0(r2)
   2ed34:	10803fcc 	andi	r2,r2,255
   2ed38:	1080201c 	xori	r2,r2,128
   2ed3c:	10bfe004 	addi	r2,r2,-128
   2ed40:	10800bd8 	cmpnei	r2,r2,47
   2ed44:	1000031e 	bne	r2,zero,2ed54 <alt_find_file+0x6c>
    {
      len -= 1;
   2ed48:	e0bffe17 	ldw	r2,-8(fp)
   2ed4c:	10bfffc4 	addi	r2,r2,-1
   2ed50:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2ed54:	e0bffe17 	ldw	r2,-8(fp)
   2ed58:	e0ffff17 	ldw	r3,-4(fp)
   2ed5c:	1885883a 	add	r2,r3,r2
   2ed60:	10800003 	ldbu	r2,0(r2)
   2ed64:	10803fcc 	andi	r2,r2,255
   2ed68:	1080201c 	xori	r2,r2,128
   2ed6c:	10bfe004 	addi	r2,r2,-128
   2ed70:	10800be0 	cmpeqi	r2,r2,47
   2ed74:	1000081e 	bne	r2,zero,2ed98 <alt_find_file+0xb0>
   2ed78:	e0bffe17 	ldw	r2,-8(fp)
   2ed7c:	e0ffff17 	ldw	r3,-4(fp)
   2ed80:	1885883a 	add	r2,r3,r2
   2ed84:	10800003 	ldbu	r2,0(r2)
   2ed88:	10803fcc 	andi	r2,r2,255
   2ed8c:	1080201c 	xori	r2,r2,128
   2ed90:	10bfe004 	addi	r2,r2,-128
   2ed94:	10000a1e 	bne	r2,zero,2edc0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2ed98:	e0bffd17 	ldw	r2,-12(fp)
   2ed9c:	10800217 	ldw	r2,8(r2)
   2eda0:	e0fffe17 	ldw	r3,-8(fp)
   2eda4:	180d883a 	mov	r6,r3
   2eda8:	e17fff17 	ldw	r5,-4(fp)
   2edac:	1009883a 	mov	r4,r2
   2edb0:	002f00c0 	call	2f00c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2edb4:	1000021e 	bne	r2,zero,2edc0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2edb8:	e0bffd17 	ldw	r2,-12(fp)
   2edbc:	00000706 	br	2eddc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2edc0:	e0bffd17 	ldw	r2,-12(fp)
   2edc4:	10800017 	ldw	r2,0(r2)
   2edc8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2edcc:	e0fffd17 	ldw	r3,-12(fp)
   2edd0:	d0a00604 	addi	r2,gp,-32744
   2edd4:	18bfcc1e 	bne	r3,r2,2ed08 <__alt_data_end+0xfffeed08>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2edd8:	0005883a 	mov	r2,zero
}
   2eddc:	e037883a 	mov	sp,fp
   2ede0:	dfc00117 	ldw	ra,4(sp)
   2ede4:	df000017 	ldw	fp,0(sp)
   2ede8:	dec00204 	addi	sp,sp,8
   2edec:	f800283a 	ret

0002edf0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2edf0:	defffc04 	addi	sp,sp,-16
   2edf4:	df000315 	stw	fp,12(sp)
   2edf8:	df000304 	addi	fp,sp,12
   2edfc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2ee00:	00bffa04 	movi	r2,-24
   2ee04:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2ee08:	e03ffd15 	stw	zero,-12(fp)
   2ee0c:	00001906 	br	2ee74 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   2ee10:	008000f4 	movhi	r2,3
   2ee14:	10bfc804 	addi	r2,r2,-224
   2ee18:	e0fffd17 	ldw	r3,-12(fp)
   2ee1c:	18c00324 	muli	r3,r3,12
   2ee20:	10c5883a 	add	r2,r2,r3
   2ee24:	10800017 	ldw	r2,0(r2)
   2ee28:	10000f1e 	bne	r2,zero,2ee68 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   2ee2c:	008000f4 	movhi	r2,3
   2ee30:	10bfc804 	addi	r2,r2,-224
   2ee34:	e0fffd17 	ldw	r3,-12(fp)
   2ee38:	18c00324 	muli	r3,r3,12
   2ee3c:	10c5883a 	add	r2,r2,r3
   2ee40:	e0ffff17 	ldw	r3,-4(fp)
   2ee44:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2ee48:	d0e00a17 	ldw	r3,-32728(gp)
   2ee4c:	e0bffd17 	ldw	r2,-12(fp)
   2ee50:	1880020e 	bge	r3,r2,2ee5c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   2ee54:	e0bffd17 	ldw	r2,-12(fp)
   2ee58:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   2ee5c:	e0bffd17 	ldw	r2,-12(fp)
   2ee60:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2ee64:	00000606 	br	2ee80 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2ee68:	e0bffd17 	ldw	r2,-12(fp)
   2ee6c:	10800044 	addi	r2,r2,1
   2ee70:	e0bffd15 	stw	r2,-12(fp)
   2ee74:	e0bffd17 	ldw	r2,-12(fp)
   2ee78:	10800810 	cmplti	r2,r2,32
   2ee7c:	103fe41e 	bne	r2,zero,2ee10 <__alt_data_end+0xfffeee10>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2ee80:	e0bffe17 	ldw	r2,-8(fp)
}
   2ee84:	e037883a 	mov	sp,fp
   2ee88:	df000017 	ldw	fp,0(sp)
   2ee8c:	dec00104 	addi	sp,sp,4
   2ee90:	f800283a 	ret

0002ee94 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2ee94:	defffb04 	addi	sp,sp,-20
   2ee98:	df000415 	stw	fp,16(sp)
   2ee9c:	df000404 	addi	fp,sp,16
   2eea0:	e13ffe15 	stw	r4,-8(fp)
   2eea4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2eea8:	e0bfff17 	ldw	r2,-4(fp)
   2eeac:	10840070 	cmpltui	r2,r2,4097
   2eeb0:	1000021e 	bne	r2,zero,2eebc <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2eeb4:	00840004 	movi	r2,4096
   2eeb8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2eebc:	e0fffe17 	ldw	r3,-8(fp)
   2eec0:	e0bfff17 	ldw	r2,-4(fp)
   2eec4:	1885883a 	add	r2,r3,r2
   2eec8:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2eecc:	e0bffe17 	ldw	r2,-8(fp)
   2eed0:	e0bffc15 	stw	r2,-16(fp)
   2eed4:	00000506 	br	2eeec <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2eed8:	e0bffc17 	ldw	r2,-16(fp)
   2eedc:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2eee0:	e0bffc17 	ldw	r2,-16(fp)
   2eee4:	10800804 	addi	r2,r2,32
   2eee8:	e0bffc15 	stw	r2,-16(fp)
   2eeec:	e0fffc17 	ldw	r3,-16(fp)
   2eef0:	e0bffd17 	ldw	r2,-12(fp)
   2eef4:	18bff836 	bltu	r3,r2,2eed8 <__alt_data_end+0xfffeeed8>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2eef8:	e0bffe17 	ldw	r2,-8(fp)
   2eefc:	108007cc 	andi	r2,r2,31
   2ef00:	10000226 	beq	r2,zero,2ef0c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2ef04:	e0bffc17 	ldw	r2,-16(fp)
   2ef08:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2ef0c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2ef10:	0001883a 	nop
   2ef14:	e037883a 	mov	sp,fp
   2ef18:	df000017 	ldw	fp,0(sp)
   2ef1c:	dec00104 	addi	sp,sp,4
   2ef20:	f800283a 	ret

0002ef24 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2ef24:	defffe04 	addi	sp,sp,-8
   2ef28:	df000115 	stw	fp,4(sp)
   2ef2c:	df000104 	addi	fp,sp,4
   2ef30:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2ef34:	e0bfff17 	ldw	r2,-4(fp)
   2ef38:	10bffe84 	addi	r2,r2,-6
   2ef3c:	10c00428 	cmpgeui	r3,r2,16
   2ef40:	18001a1e 	bne	r3,zero,2efac <alt_exception_cause_generated_bad_addr+0x88>
   2ef44:	100690ba 	slli	r3,r2,2
   2ef48:	008000f4 	movhi	r2,3
   2ef4c:	10bbd704 	addi	r2,r2,-4260
   2ef50:	1885883a 	add	r2,r3,r2
   2ef54:	10800017 	ldw	r2,0(r2)
   2ef58:	1000683a 	jmp	r2
   2ef5c:	0002ef9c 	xori	zero,zero,3006
   2ef60:	0002ef9c 	xori	zero,zero,3006
   2ef64:	0002efac 	andhi	zero,zero,3006
   2ef68:	0002efac 	andhi	zero,zero,3006
   2ef6c:	0002efac 	andhi	zero,zero,3006
   2ef70:	0002ef9c 	xori	zero,zero,3006
   2ef74:	0002efa4 	muli	zero,zero,3006
   2ef78:	0002efac 	andhi	zero,zero,3006
   2ef7c:	0002ef9c 	xori	zero,zero,3006
   2ef80:	0002ef9c 	xori	zero,zero,3006
   2ef84:	0002efac 	andhi	zero,zero,3006
   2ef88:	0002ef9c 	xori	zero,zero,3006
   2ef8c:	0002efa4 	muli	zero,zero,3006
   2ef90:	0002efac 	andhi	zero,zero,3006
   2ef94:	0002efac 	andhi	zero,zero,3006
   2ef98:	0002ef9c 	xori	zero,zero,3006
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2ef9c:	00800044 	movi	r2,1
   2efa0:	00000306 	br	2efb0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2efa4:	0005883a 	mov	r2,zero
   2efa8:	00000106 	br	2efb0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   2efac:	0005883a 	mov	r2,zero
  }
}
   2efb0:	e037883a 	mov	sp,fp
   2efb4:	df000017 	ldw	fp,0(sp)
   2efb8:	dec00104 	addi	sp,sp,4
   2efbc:	f800283a 	ret

0002efc0 <atexit>:
   2efc0:	200b883a 	mov	r5,r4
   2efc4:	000f883a 	mov	r7,zero
   2efc8:	000d883a 	mov	r6,zero
   2efcc:	0009883a 	mov	r4,zero
   2efd0:	002f0881 	jmpi	2f088 <__register_exitproc>

0002efd4 <exit>:
   2efd4:	defffe04 	addi	sp,sp,-8
   2efd8:	000b883a 	mov	r5,zero
   2efdc:	dc000015 	stw	r16,0(sp)
   2efe0:	dfc00115 	stw	ra,4(sp)
   2efe4:	2021883a 	mov	r16,r4
   2efe8:	002f1a00 	call	2f1a0 <__call_exitprocs>
   2efec:	008000f4 	movhi	r2,3
   2eff0:	10844004 	addi	r2,r2,4352
   2eff4:	11000017 	ldw	r4,0(r2)
   2eff8:	20800f17 	ldw	r2,60(r4)
   2effc:	10000126 	beq	r2,zero,2f004 <exit+0x30>
   2f000:	103ee83a 	callr	r2
   2f004:	8009883a 	mov	r4,r16
   2f008:	002f3200 	call	2f320 <_exit>

0002f00c <memcmp>:
   2f00c:	01c000c4 	movi	r7,3
   2f010:	3980192e 	bgeu	r7,r6,2f078 <memcmp+0x6c>
   2f014:	2144b03a 	or	r2,r4,r5
   2f018:	11c4703a 	and	r2,r2,r7
   2f01c:	10000f26 	beq	r2,zero,2f05c <memcmp+0x50>
   2f020:	20800003 	ldbu	r2,0(r4)
   2f024:	28c00003 	ldbu	r3,0(r5)
   2f028:	10c0151e 	bne	r2,r3,2f080 <memcmp+0x74>
   2f02c:	31bfff84 	addi	r6,r6,-2
   2f030:	01ffffc4 	movi	r7,-1
   2f034:	00000406 	br	2f048 <memcmp+0x3c>
   2f038:	20800003 	ldbu	r2,0(r4)
   2f03c:	28c00003 	ldbu	r3,0(r5)
   2f040:	31bfffc4 	addi	r6,r6,-1
   2f044:	10c00e1e 	bne	r2,r3,2f080 <memcmp+0x74>
   2f048:	21000044 	addi	r4,r4,1
   2f04c:	29400044 	addi	r5,r5,1
   2f050:	31fff91e 	bne	r6,r7,2f038 <__alt_data_end+0xfffef038>
   2f054:	0005883a 	mov	r2,zero
   2f058:	f800283a 	ret
   2f05c:	20c00017 	ldw	r3,0(r4)
   2f060:	28800017 	ldw	r2,0(r5)
   2f064:	18bfee1e 	bne	r3,r2,2f020 <__alt_data_end+0xfffef020>
   2f068:	31bfff04 	addi	r6,r6,-4
   2f06c:	21000104 	addi	r4,r4,4
   2f070:	29400104 	addi	r5,r5,4
   2f074:	39bff936 	bltu	r7,r6,2f05c <__alt_data_end+0xfffef05c>
   2f078:	303fe91e 	bne	r6,zero,2f020 <__alt_data_end+0xfffef020>
   2f07c:	003ff506 	br	2f054 <__alt_data_end+0xfffef054>
   2f080:	10c5c83a 	sub	r2,r2,r3
   2f084:	f800283a 	ret

0002f088 <__register_exitproc>:
   2f088:	defffa04 	addi	sp,sp,-24
   2f08c:	dc000315 	stw	r16,12(sp)
   2f090:	040000f4 	movhi	r16,3
   2f094:	84044004 	addi	r16,r16,4352
   2f098:	80c00017 	ldw	r3,0(r16)
   2f09c:	dc400415 	stw	r17,16(sp)
   2f0a0:	dfc00515 	stw	ra,20(sp)
   2f0a4:	18805217 	ldw	r2,328(r3)
   2f0a8:	2023883a 	mov	r17,r4
   2f0ac:	10003726 	beq	r2,zero,2f18c <__register_exitproc+0x104>
   2f0b0:	10c00117 	ldw	r3,4(r2)
   2f0b4:	010007c4 	movi	r4,31
   2f0b8:	20c00e16 	blt	r4,r3,2f0f4 <__register_exitproc+0x6c>
   2f0bc:	1a000044 	addi	r8,r3,1
   2f0c0:	8800221e 	bne	r17,zero,2f14c <__register_exitproc+0xc4>
   2f0c4:	18c00084 	addi	r3,r3,2
   2f0c8:	18c7883a 	add	r3,r3,r3
   2f0cc:	18c7883a 	add	r3,r3,r3
   2f0d0:	12000115 	stw	r8,4(r2)
   2f0d4:	10c7883a 	add	r3,r2,r3
   2f0d8:	19400015 	stw	r5,0(r3)
   2f0dc:	0005883a 	mov	r2,zero
   2f0e0:	dfc00517 	ldw	ra,20(sp)
   2f0e4:	dc400417 	ldw	r17,16(sp)
   2f0e8:	dc000317 	ldw	r16,12(sp)
   2f0ec:	dec00604 	addi	sp,sp,24
   2f0f0:	f800283a 	ret
   2f0f4:	00800034 	movhi	r2,0
   2f0f8:	10800004 	addi	r2,r2,0
   2f0fc:	10002626 	beq	r2,zero,2f198 <__register_exitproc+0x110>
   2f100:	01006404 	movi	r4,400
   2f104:	d9400015 	stw	r5,0(sp)
   2f108:	d9800115 	stw	r6,4(sp)
   2f10c:	d9c00215 	stw	r7,8(sp)
   2f110:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2f114:	d9400017 	ldw	r5,0(sp)
   2f118:	d9800117 	ldw	r6,4(sp)
   2f11c:	d9c00217 	ldw	r7,8(sp)
   2f120:	10001d26 	beq	r2,zero,2f198 <__register_exitproc+0x110>
   2f124:	81000017 	ldw	r4,0(r16)
   2f128:	10000115 	stw	zero,4(r2)
   2f12c:	02000044 	movi	r8,1
   2f130:	22405217 	ldw	r9,328(r4)
   2f134:	0007883a 	mov	r3,zero
   2f138:	12400015 	stw	r9,0(r2)
   2f13c:	20805215 	stw	r2,328(r4)
   2f140:	10006215 	stw	zero,392(r2)
   2f144:	10006315 	stw	zero,396(r2)
   2f148:	883fde26 	beq	r17,zero,2f0c4 <__alt_data_end+0xfffef0c4>
   2f14c:	18c9883a 	add	r4,r3,r3
   2f150:	2109883a 	add	r4,r4,r4
   2f154:	1109883a 	add	r4,r2,r4
   2f158:	21802215 	stw	r6,136(r4)
   2f15c:	01800044 	movi	r6,1
   2f160:	12406217 	ldw	r9,392(r2)
   2f164:	30cc983a 	sll	r6,r6,r3
   2f168:	4992b03a 	or	r9,r9,r6
   2f16c:	12406215 	stw	r9,392(r2)
   2f170:	21c04215 	stw	r7,264(r4)
   2f174:	01000084 	movi	r4,2
   2f178:	893fd21e 	bne	r17,r4,2f0c4 <__alt_data_end+0xfffef0c4>
   2f17c:	11006317 	ldw	r4,396(r2)
   2f180:	218cb03a 	or	r6,r4,r6
   2f184:	11806315 	stw	r6,396(r2)
   2f188:	003fce06 	br	2f0c4 <__alt_data_end+0xfffef0c4>
   2f18c:	18805304 	addi	r2,r3,332
   2f190:	18805215 	stw	r2,328(r3)
   2f194:	003fc606 	br	2f0b0 <__alt_data_end+0xfffef0b0>
   2f198:	00bfffc4 	movi	r2,-1
   2f19c:	003fd006 	br	2f0e0 <__alt_data_end+0xfffef0e0>

0002f1a0 <__call_exitprocs>:
   2f1a0:	defff504 	addi	sp,sp,-44
   2f1a4:	df000915 	stw	fp,36(sp)
   2f1a8:	dd400615 	stw	r21,24(sp)
   2f1ac:	dc800315 	stw	r18,12(sp)
   2f1b0:	dfc00a15 	stw	ra,40(sp)
   2f1b4:	ddc00815 	stw	r23,32(sp)
   2f1b8:	dd800715 	stw	r22,28(sp)
   2f1bc:	dd000515 	stw	r20,20(sp)
   2f1c0:	dcc00415 	stw	r19,16(sp)
   2f1c4:	dc400215 	stw	r17,8(sp)
   2f1c8:	dc000115 	stw	r16,4(sp)
   2f1cc:	d9000015 	stw	r4,0(sp)
   2f1d0:	2839883a 	mov	fp,r5
   2f1d4:	04800044 	movi	r18,1
   2f1d8:	057fffc4 	movi	r21,-1
   2f1dc:	008000f4 	movhi	r2,3
   2f1e0:	10844004 	addi	r2,r2,4352
   2f1e4:	12000017 	ldw	r8,0(r2)
   2f1e8:	45005217 	ldw	r20,328(r8)
   2f1ec:	44c05204 	addi	r19,r8,328
   2f1f0:	a0001c26 	beq	r20,zero,2f264 <__call_exitprocs+0xc4>
   2f1f4:	a0800117 	ldw	r2,4(r20)
   2f1f8:	15ffffc4 	addi	r23,r2,-1
   2f1fc:	b8000d16 	blt	r23,zero,2f234 <__call_exitprocs+0x94>
   2f200:	14000044 	addi	r16,r2,1
   2f204:	8421883a 	add	r16,r16,r16
   2f208:	8421883a 	add	r16,r16,r16
   2f20c:	84402004 	addi	r17,r16,128
   2f210:	a463883a 	add	r17,r20,r17
   2f214:	a421883a 	add	r16,r20,r16
   2f218:	e0001e26 	beq	fp,zero,2f294 <__call_exitprocs+0xf4>
   2f21c:	80804017 	ldw	r2,256(r16)
   2f220:	e0801c26 	beq	fp,r2,2f294 <__call_exitprocs+0xf4>
   2f224:	bdffffc4 	addi	r23,r23,-1
   2f228:	843fff04 	addi	r16,r16,-4
   2f22c:	8c7fff04 	addi	r17,r17,-4
   2f230:	bd7ff91e 	bne	r23,r21,2f218 <__alt_data_end+0xfffef218>
   2f234:	00800034 	movhi	r2,0
   2f238:	10800004 	addi	r2,r2,0
   2f23c:	10000926 	beq	r2,zero,2f264 <__call_exitprocs+0xc4>
   2f240:	a0800117 	ldw	r2,4(r20)
   2f244:	1000301e 	bne	r2,zero,2f308 <__call_exitprocs+0x168>
   2f248:	a0800017 	ldw	r2,0(r20)
   2f24c:	10003226 	beq	r2,zero,2f318 <__call_exitprocs+0x178>
   2f250:	a009883a 	mov	r4,r20
   2f254:	98800015 	stw	r2,0(r19)
   2f258:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2f25c:	9d000017 	ldw	r20,0(r19)
   2f260:	a03fe41e 	bne	r20,zero,2f1f4 <__alt_data_end+0xfffef1f4>
   2f264:	dfc00a17 	ldw	ra,40(sp)
   2f268:	df000917 	ldw	fp,36(sp)
   2f26c:	ddc00817 	ldw	r23,32(sp)
   2f270:	dd800717 	ldw	r22,28(sp)
   2f274:	dd400617 	ldw	r21,24(sp)
   2f278:	dd000517 	ldw	r20,20(sp)
   2f27c:	dcc00417 	ldw	r19,16(sp)
   2f280:	dc800317 	ldw	r18,12(sp)
   2f284:	dc400217 	ldw	r17,8(sp)
   2f288:	dc000117 	ldw	r16,4(sp)
   2f28c:	dec00b04 	addi	sp,sp,44
   2f290:	f800283a 	ret
   2f294:	a0800117 	ldw	r2,4(r20)
   2f298:	80c00017 	ldw	r3,0(r16)
   2f29c:	10bfffc4 	addi	r2,r2,-1
   2f2a0:	15c01426 	beq	r2,r23,2f2f4 <__call_exitprocs+0x154>
   2f2a4:	80000015 	stw	zero,0(r16)
   2f2a8:	183fde26 	beq	r3,zero,2f224 <__alt_data_end+0xfffef224>
   2f2ac:	95c8983a 	sll	r4,r18,r23
   2f2b0:	a0806217 	ldw	r2,392(r20)
   2f2b4:	a5800117 	ldw	r22,4(r20)
   2f2b8:	2084703a 	and	r2,r4,r2
   2f2bc:	10000b26 	beq	r2,zero,2f2ec <__call_exitprocs+0x14c>
   2f2c0:	a0806317 	ldw	r2,396(r20)
   2f2c4:	2088703a 	and	r4,r4,r2
   2f2c8:	20000c1e 	bne	r4,zero,2f2fc <__call_exitprocs+0x15c>
   2f2cc:	89400017 	ldw	r5,0(r17)
   2f2d0:	d9000017 	ldw	r4,0(sp)
   2f2d4:	183ee83a 	callr	r3
   2f2d8:	a0800117 	ldw	r2,4(r20)
   2f2dc:	15bfbf1e 	bne	r2,r22,2f1dc <__alt_data_end+0xfffef1dc>
   2f2e0:	98800017 	ldw	r2,0(r19)
   2f2e4:	153fcf26 	beq	r2,r20,2f224 <__alt_data_end+0xfffef224>
   2f2e8:	003fbc06 	br	2f1dc <__alt_data_end+0xfffef1dc>
   2f2ec:	183ee83a 	callr	r3
   2f2f0:	003ff906 	br	2f2d8 <__alt_data_end+0xfffef2d8>
   2f2f4:	a5c00115 	stw	r23,4(r20)
   2f2f8:	003feb06 	br	2f2a8 <__alt_data_end+0xfffef2a8>
   2f2fc:	89000017 	ldw	r4,0(r17)
   2f300:	183ee83a 	callr	r3
   2f304:	003ff406 	br	2f2d8 <__alt_data_end+0xfffef2d8>
   2f308:	a0800017 	ldw	r2,0(r20)
   2f30c:	a027883a 	mov	r19,r20
   2f310:	1029883a 	mov	r20,r2
   2f314:	003fb606 	br	2f1f0 <__alt_data_end+0xfffef1f0>
   2f318:	0005883a 	mov	r2,zero
   2f31c:	003ffb06 	br	2f30c <__alt_data_end+0xfffef30c>

0002f320 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2f320:	defffd04 	addi	sp,sp,-12
   2f324:	df000215 	stw	fp,8(sp)
   2f328:	df000204 	addi	fp,sp,8
   2f32c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2f330:	0001883a 	nop
   2f334:	e0bfff17 	ldw	r2,-4(fp)
   2f338:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2f33c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2f340:	10000226 	beq	r2,zero,2f34c <_exit+0x2c>
    ALT_SIM_FAIL();
   2f344:	002af070 	cmpltui	zero,zero,43969
   2f348:	00000106 	br	2f350 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   2f34c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2f350:	003fff06 	br	2f350 <__alt_data_end+0xfffef350>
