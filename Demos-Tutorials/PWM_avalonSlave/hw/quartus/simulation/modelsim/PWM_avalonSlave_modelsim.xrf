vendor_name = ModelSim
source_file = 1, C:/intelFPGA_lite/PWM_avalonSlave/hw/hdl/DE0_Nano_SoC_top_level.vhd
source_file = 1, C:/intelFPGA_lite/PWM_avalonSlave/hw/quartus/PWM_avalonSlave.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/intelFPGA_lite/PWM_avalonSlave/hw/quartus/db/PWM_avalonSlave.cbx.xml
design_name = PWM_AvalonSlave
instance = comp, \outpwm~output\, outpwm~output, PWM_AvalonSlave, 1
instance = comp, \nReset~input\, nReset~input, PWM_AvalonSlave, 1
instance = comp, \Clk~input\, Clk~input, PWM_AvalonSlave, 1
instance = comp, \Clk~inputCLKENA0\, Clk~inputCLKENA0, PWM_AvalonSlave, 1
instance = comp, \WriteData[0]~input\, WriteData[0]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[0]~1\, polarity[0]~1, PWM_AvalonSlave, 1
instance = comp, \Address[1]~input\, Address[1]~input, PWM_AvalonSlave, 1
instance = comp, \Write_en~input\, Write_en~input, PWM_AvalonSlave, 1
instance = comp, \Address[0]~input\, Address[0]~input, PWM_AvalonSlave, 1
instance = comp, \ChipSelect~input\, ChipSelect~input, PWM_AvalonSlave, 1
instance = comp, \polarity[31]~0\, polarity[31]~0, PWM_AvalonSlave, 1
instance = comp, \polarity[0]\, polarity[0], PWM_AvalonSlave, 1
instance = comp, \WriteData[1]~input\, WriteData[1]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[1]~feeder\, polarity[1]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[1]\, polarity[1], PWM_AvalonSlave, 1
instance = comp, \WriteData[10]~input\, WriteData[10]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[10]\, polarity[10], PWM_AvalonSlave, 1
instance = comp, \WriteData[11]~input\, WriteData[11]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[11]\, polarity[11], PWM_AvalonSlave, 1
instance = comp, \WriteData[8]~input\, WriteData[8]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[8]~feeder\, polarity[8]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[8]\, polarity[8], PWM_AvalonSlave, 1
instance = comp, \WriteData[13]~input\, WriteData[13]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[13]\, polarity[13], PWM_AvalonSlave, 1
instance = comp, \WriteData[9]~input\, WriteData[9]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[9]\, polarity[9], PWM_AvalonSlave, 1
instance = comp, \WriteData[12]~input\, WriteData[12]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[12]~feeder\, polarity[12]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[12]\, polarity[12], PWM_AvalonSlave, 1
instance = comp, \Equal2~1\, Equal2~1, PWM_AvalonSlave, 1
instance = comp, \WriteData[7]~input\, WriteData[7]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[7]\, polarity[7], PWM_AvalonSlave, 1
instance = comp, \WriteData[2]~input\, WriteData[2]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[2]\, polarity[2], PWM_AvalonSlave, 1
instance = comp, \WriteData[4]~input\, WriteData[4]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[4]\, polarity[4], PWM_AvalonSlave, 1
instance = comp, \WriteData[5]~input\, WriteData[5]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[5]~feeder\, polarity[5]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[5]\, polarity[5], PWM_AvalonSlave, 1
instance = comp, \WriteData[6]~input\, WriteData[6]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[6]\, polarity[6], PWM_AvalonSlave, 1
instance = comp, \WriteData[3]~input\, WriteData[3]~input, PWM_AvalonSlave, 1
instance = comp, \polarity[3]~feeder\, polarity[3]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[3]\, polarity[3], PWM_AvalonSlave, 1
instance = comp, \Equal2~0\, Equal2~0, PWM_AvalonSlave, 1
instance = comp, \period[31]~0\, period[31]~0, PWM_AvalonSlave, 1
instance = comp, \period[1]\, period[1], PWM_AvalonSlave, 1
instance = comp, \period[2]\, period[2], PWM_AvalonSlave, 1
instance = comp, \Add0~49\, Add0~49, PWM_AvalonSlave, 1
instance = comp, \WriteData[31]~input\, WriteData[31]~input, PWM_AvalonSlave, 1
instance = comp, \period[31]\, period[31], PWM_AvalonSlave, 1
instance = comp, \Add0~53\, Add0~53, PWM_AvalonSlave, 1
instance = comp, \Add0~57\, Add0~57, PWM_AvalonSlave, 1
instance = comp, \counter[2]\, counter[2], PWM_AvalonSlave, 1
instance = comp, \Add0~61\, Add0~61, PWM_AvalonSlave, 1
instance = comp, \counter[3]~DUPLICATE\, counter[3]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~65\, Add0~65, PWM_AvalonSlave, 1
instance = comp, \counter[4]~DUPLICATE\, counter[4]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~69\, Add0~69, PWM_AvalonSlave, 1
instance = comp, \counter[5]~DUPLICATE\, counter[5]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~37\, Add0~37, PWM_AvalonSlave, 1
instance = comp, \counter[6]\, counter[6], PWM_AvalonSlave, 1
instance = comp, \Add0~41\, Add0~41, PWM_AvalonSlave, 1
instance = comp, \counter[7]\, counter[7], PWM_AvalonSlave, 1
instance = comp, \Add0~45\, Add0~45, PWM_AvalonSlave, 1
instance = comp, \counter[8]\, counter[8], PWM_AvalonSlave, 1
instance = comp, \Add0~25\, Add0~25, PWM_AvalonSlave, 1
instance = comp, \counter[9]~DUPLICATE\, counter[9]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~29\, Add0~29, PWM_AvalonSlave, 1
instance = comp, \counter[10]\, counter[10], PWM_AvalonSlave, 1
instance = comp, \Add0~33\, Add0~33, PWM_AvalonSlave, 1
instance = comp, \counter[11]~DUPLICATE\, counter[11]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~13\, Add0~13, PWM_AvalonSlave, 1
instance = comp, \counter[12]~DUPLICATE\, counter[12]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~17\, Add0~17, PWM_AvalonSlave, 1
instance = comp, \counter[13]\, counter[13], PWM_AvalonSlave, 1
instance = comp, \Add0~21\, Add0~21, PWM_AvalonSlave, 1
instance = comp, \counter[14]\, counter[14], PWM_AvalonSlave, 1
instance = comp, \Add0~1\, Add0~1, PWM_AvalonSlave, 1
instance = comp, \counter[15]~DUPLICATE\, counter[15]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~5\, Add0~5, PWM_AvalonSlave, 1
instance = comp, \counter[16]~DUPLICATE\, counter[16]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~9\, Add0~9, PWM_AvalonSlave, 1
instance = comp, \counter[17]\, counter[17], PWM_AvalonSlave, 1
instance = comp, \Add0~105\, Add0~105, PWM_AvalonSlave, 1
instance = comp, \counter[18]~DUPLICATE\, counter[18]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~109\, Add0~109, PWM_AvalonSlave, 1
instance = comp, \counter[19]~DUPLICATE\, counter[19]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~113\, Add0~113, PWM_AvalonSlave, 1
instance = comp, \counter[20]\, counter[20], PWM_AvalonSlave, 1
instance = comp, \Add0~117\, Add0~117, PWM_AvalonSlave, 1
instance = comp, \counter[21]~DUPLICATE\, counter[21]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~121\, Add0~121, PWM_AvalonSlave, 1
instance = comp, \counter[22]\, counter[22], PWM_AvalonSlave, 1
instance = comp, \Add0~125\, Add0~125, PWM_AvalonSlave, 1
instance = comp, \counter[23]\, counter[23], PWM_AvalonSlave, 1
instance = comp, \Add0~93\, Add0~93, PWM_AvalonSlave, 1
instance = comp, \counter[24]\, counter[24], PWM_AvalonSlave, 1
instance = comp, \Add0~97\, Add0~97, PWM_AvalonSlave, 1
instance = comp, \counter[25]\, counter[25], PWM_AvalonSlave, 1
instance = comp, \Add0~101\, Add0~101, PWM_AvalonSlave, 1
instance = comp, \counter[26]\, counter[26], PWM_AvalonSlave, 1
instance = comp, \Add0~81\, Add0~81, PWM_AvalonSlave, 1
instance = comp, \counter[27]~DUPLICATE\, counter[27]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~85\, Add0~85, PWM_AvalonSlave, 1
instance = comp, \counter[28]~DUPLICATE\, counter[28]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Add0~89\, Add0~89, PWM_AvalonSlave, 1
instance = comp, \counter[29]\, counter[29], PWM_AvalonSlave, 1
instance = comp, \Add0~73\, Add0~73, PWM_AvalonSlave, 1
instance = comp, \counter[30]\, counter[30], PWM_AvalonSlave, 1
instance = comp, \WriteData[30]~input\, WriteData[30]~input, PWM_AvalonSlave, 1
instance = comp, \period[30]\, period[30], PWM_AvalonSlave, 1
instance = comp, \Add0~77\, Add0~77, PWM_AvalonSlave, 1
instance = comp, \counter[31]\, counter[31], PWM_AvalonSlave, 1
instance = comp, \Equal0~7\, Equal0~7, PWM_AvalonSlave, 1
instance = comp, \WriteData[21]~input\, WriteData[21]~input, PWM_AvalonSlave, 1
instance = comp, \period[21]\, period[21], PWM_AvalonSlave, 1
instance = comp, \WriteData[23]~input\, WriteData[23]~input, PWM_AvalonSlave, 1
instance = comp, \period[23]\, period[23], PWM_AvalonSlave, 1
instance = comp, \WriteData[22]~input\, WriteData[22]~input, PWM_AvalonSlave, 1
instance = comp, \period[22]\, period[22], PWM_AvalonSlave, 1
instance = comp, \counter[21]\, counter[21], PWM_AvalonSlave, 1
instance = comp, \Equal0~11\, Equal0~11, PWM_AvalonSlave, 1
instance = comp, \WriteData[25]~input\, WriteData[25]~input, PWM_AvalonSlave, 1
instance = comp, \period[25]\, period[25], PWM_AvalonSlave, 1
instance = comp, \WriteData[26]~input\, WriteData[26]~input, PWM_AvalonSlave, 1
instance = comp, \period[26]\, period[26], PWM_AvalonSlave, 1
instance = comp, \WriteData[24]~input\, WriteData[24]~input, PWM_AvalonSlave, 1
instance = comp, \period[24]\, period[24], PWM_AvalonSlave, 1
instance = comp, \Equal0~9\, Equal0~9, PWM_AvalonSlave, 1
instance = comp, \WriteData[19]~input\, WriteData[19]~input, PWM_AvalonSlave, 1
instance = comp, \period[19]\, period[19], PWM_AvalonSlave, 1
instance = comp, \WriteData[18]~input\, WriteData[18]~input, PWM_AvalonSlave, 1
instance = comp, \period[18]\, period[18], PWM_AvalonSlave, 1
instance = comp, \WriteData[20]~input\, WriteData[20]~input, PWM_AvalonSlave, 1
instance = comp, \period[20]\, period[20], PWM_AvalonSlave, 1
instance = comp, \counter[19]\, counter[19], PWM_AvalonSlave, 1
instance = comp, \counter[18]\, counter[18], PWM_AvalonSlave, 1
instance = comp, \Equal0~10\, Equal0~10, PWM_AvalonSlave, 1
instance = comp, \WriteData[28]~input\, WriteData[28]~input, PWM_AvalonSlave, 1
instance = comp, \period[28]\, period[28], PWM_AvalonSlave, 1
instance = comp, \WriteData[27]~input\, WriteData[27]~input, PWM_AvalonSlave, 1
instance = comp, \period[27]\, period[27], PWM_AvalonSlave, 1
instance = comp, \WriteData[29]~input\, WriteData[29]~input, PWM_AvalonSlave, 1
instance = comp, \period[29]\, period[29], PWM_AvalonSlave, 1
instance = comp, \counter[27]\, counter[27], PWM_AvalonSlave, 1
instance = comp, \Equal0~8\, Equal0~8, PWM_AvalonSlave, 1
instance = comp, \Equal0~12\, Equal0~12, PWM_AvalonSlave, 1
instance = comp, \Equal0~13\, Equal0~13, PWM_AvalonSlave, 1
instance = comp, \counter[0]~DUPLICATE\, counter[0]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \counter[1]~DUPLICATE\, counter[1]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \period[0]\, period[0], PWM_AvalonSlave, 1
instance = comp, \Equal0~4\, Equal0~4, PWM_AvalonSlave, 1
instance = comp, \WriteData[15]~input\, WriteData[15]~input, PWM_AvalonSlave, 1
instance = comp, \period[15]\, period[15], PWM_AvalonSlave, 1
instance = comp, \WriteData[16]~input\, WriteData[16]~input, PWM_AvalonSlave, 1
instance = comp, \period[16]\, period[16], PWM_AvalonSlave, 1
instance = comp, \counter[16]\, counter[16], PWM_AvalonSlave, 1
instance = comp, \WriteData[17]~input\, WriteData[17]~input, PWM_AvalonSlave, 1
instance = comp, \period[17]\, period[17], PWM_AvalonSlave, 1
instance = comp, \counter[15]\, counter[15], PWM_AvalonSlave, 1
instance = comp, \Equal0~0\, Equal0~0, PWM_AvalonSlave, 1
instance = comp, \period[8]~4\, period[8]~4, PWM_AvalonSlave, 1
instance = comp, \period[8]\, period[8], PWM_AvalonSlave, 1
instance = comp, \period[7]~3\, period[7]~3, PWM_AvalonSlave, 1
instance = comp, \period[7]\, period[7], PWM_AvalonSlave, 1
instance = comp, \period[6]~2\, period[6]~2, PWM_AvalonSlave, 1
instance = comp, \period[6]\, period[6], PWM_AvalonSlave, 1
instance = comp, \Equal0~3\, Equal0~3, PWM_AvalonSlave, 1
instance = comp, \period[12]\, period[12], PWM_AvalonSlave, 1
instance = comp, \WriteData[14]~input\, WriteData[14]~input, PWM_AvalonSlave, 1
instance = comp, \period[14]\, period[14], PWM_AvalonSlave, 1
instance = comp, \period[13]\, period[13], PWM_AvalonSlave, 1
instance = comp, \counter[12]\, counter[12], PWM_AvalonSlave, 1
instance = comp, \Equal0~1\, Equal0~1, PWM_AvalonSlave, 1
instance = comp, \period[5]~6\, period[5]~6, PWM_AvalonSlave, 1
instance = comp, \period[5]\, period[5], PWM_AvalonSlave, 1
instance = comp, \period[3]~5\, period[3]~5, PWM_AvalonSlave, 1
instance = comp, \period[3]\, period[3], PWM_AvalonSlave, 1
instance = comp, \period[4]\, period[4], PWM_AvalonSlave, 1
instance = comp, \counter[4]\, counter[4], PWM_AvalonSlave, 1
instance = comp, \counter[3]\, counter[3], PWM_AvalonSlave, 1
instance = comp, \Equal0~5\, Equal0~5, PWM_AvalonSlave, 1
instance = comp, \period[9]~1\, period[9]~1, PWM_AvalonSlave, 1
instance = comp, \period[9]\, period[9], PWM_AvalonSlave, 1
instance = comp, \period[10]~feeder\, period[10]~feeder, PWM_AvalonSlave, 1
instance = comp, \period[10]\, period[10], PWM_AvalonSlave, 1
instance = comp, \period[11]\, period[11], PWM_AvalonSlave, 1
instance = comp, \counter[9]\, counter[9], PWM_AvalonSlave, 1
instance = comp, \Equal0~2\, Equal0~2, PWM_AvalonSlave, 1
instance = comp, \Equal0~6\, Equal0~6, PWM_AvalonSlave, 1
instance = comp, \dc[31]~0\, dc[31]~0, PWM_AvalonSlave, 1
instance = comp, \dc[31]\, dc[31], PWM_AvalonSlave, 1
instance = comp, \dc[30]\, dc[30], PWM_AvalonSlave, 1
instance = comp, \Equal1~7\, Equal1~7, PWM_AvalonSlave, 1
instance = comp, \dc[27]\, dc[27], PWM_AvalonSlave, 1
instance = comp, \dc[29]\, dc[29], PWM_AvalonSlave, 1
instance = comp, \dc[28]\, dc[28], PWM_AvalonSlave, 1
instance = comp, \counter[28]\, counter[28], PWM_AvalonSlave, 1
instance = comp, \Equal1~8\, Equal1~8, PWM_AvalonSlave, 1
instance = comp, \dc[18]\, dc[18], PWM_AvalonSlave, 1
instance = comp, \dc[19]\, dc[19], PWM_AvalonSlave, 1
instance = comp, \dc[20]\, dc[20], PWM_AvalonSlave, 1
instance = comp, \Equal1~10\, Equal1~10, PWM_AvalonSlave, 1
instance = comp, \dc[23]\, dc[23], PWM_AvalonSlave, 1
instance = comp, \dc[22]\, dc[22], PWM_AvalonSlave, 1
instance = comp, \dc[21]~feeder\, dc[21]~feeder, PWM_AvalonSlave, 1
instance = comp, \dc[21]\, dc[21], PWM_AvalonSlave, 1
instance = comp, \Equal1~11\, Equal1~11, PWM_AvalonSlave, 1
instance = comp, \dc[24]\, dc[24], PWM_AvalonSlave, 1
instance = comp, \dc[25]\, dc[25], PWM_AvalonSlave, 1
instance = comp, \counter[26]~DUPLICATE\, counter[26]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \dc[26]\, dc[26], PWM_AvalonSlave, 1
instance = comp, \counter[25]~DUPLICATE\, counter[25]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \counter[24]~DUPLICATE\, counter[24]~DUPLICATE, PWM_AvalonSlave, 1
instance = comp, \Equal1~9\, Equal1~9, PWM_AvalonSlave, 1
instance = comp, \Equal1~12\, Equal1~12, PWM_AvalonSlave, 1
instance = comp, \dc[16]\, dc[16], PWM_AvalonSlave, 1
instance = comp, \dc[17]\, dc[17], PWM_AvalonSlave, 1
instance = comp, \dc[15]\, dc[15], PWM_AvalonSlave, 1
instance = comp, \Equal1~0\, Equal1~0, PWM_AvalonSlave, 1
instance = comp, \dc[12]\, dc[12], PWM_AvalonSlave, 1
instance = comp, \dc[14]\, dc[14], PWM_AvalonSlave, 1
instance = comp, \dc[13]\, dc[13], PWM_AvalonSlave, 1
instance = comp, \Equal1~1\, Equal1~1, PWM_AvalonSlave, 1
instance = comp, \dc[4]~5\, dc[4]~5, PWM_AvalonSlave, 1
instance = comp, \dc[4]\, dc[4], PWM_AvalonSlave, 1
instance = comp, \counter[5]\, counter[5], PWM_AvalonSlave, 1
instance = comp, \dc[3]\, dc[3], PWM_AvalonSlave, 1
instance = comp, \dc[5]~6\, dc[5]~6, PWM_AvalonSlave, 1
instance = comp, \dc[5]\, dc[5], PWM_AvalonSlave, 1
instance = comp, \Equal1~5\, Equal1~5, PWM_AvalonSlave, 1
instance = comp, \dc[2]~4\, dc[2]~4, PWM_AvalonSlave, 1
instance = comp, \dc[2]\, dc[2], PWM_AvalonSlave, 1
instance = comp, \dc[0]\, dc[0], PWM_AvalonSlave, 1
instance = comp, \counter[1]\, counter[1], PWM_AvalonSlave, 1
instance = comp, \dc[1]\, dc[1], PWM_AvalonSlave, 1
instance = comp, \counter[0]\, counter[0], PWM_AvalonSlave, 1
instance = comp, \Equal1~4\, Equal1~4, PWM_AvalonSlave, 1
instance = comp, \dc[11]\, dc[11], PWM_AvalonSlave, 1
instance = comp, \counter[11]\, counter[11], PWM_AvalonSlave, 1
instance = comp, \dc[10]\, dc[10], PWM_AvalonSlave, 1
instance = comp, \dc[9]\, dc[9], PWM_AvalonSlave, 1
instance = comp, \Equal1~2\, Equal1~2, PWM_AvalonSlave, 1
instance = comp, \dc[7]~2\, dc[7]~2, PWM_AvalonSlave, 1
instance = comp, \dc[7]\, dc[7], PWM_AvalonSlave, 1
instance = comp, \dc[6]~1\, dc[6]~1, PWM_AvalonSlave, 1
instance = comp, \dc[6]\, dc[6], PWM_AvalonSlave, 1
instance = comp, \dc[8]~3\, dc[8]~3, PWM_AvalonSlave, 1
instance = comp, \dc[8]\, dc[8], PWM_AvalonSlave, 1
instance = comp, \Equal1~3\, Equal1~3, PWM_AvalonSlave, 1
instance = comp, \Equal1~6\, Equal1~6, PWM_AvalonSlave, 1
instance = comp, \clk_slow~0\, clk_slow~0, PWM_AvalonSlave, 1
instance = comp, \polarity[26]~feeder\, polarity[26]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[26]\, polarity[26], PWM_AvalonSlave, 1
instance = comp, \polarity[20]\, polarity[20], PWM_AvalonSlave, 1
instance = comp, \polarity[14]\, polarity[14], PWM_AvalonSlave, 1
instance = comp, \polarity[17]\, polarity[17], PWM_AvalonSlave, 1
instance = comp, \polarity[15]~feeder\, polarity[15]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[15]\, polarity[15], PWM_AvalonSlave, 1
instance = comp, \polarity[18]\, polarity[18], PWM_AvalonSlave, 1
instance = comp, \polarity[19]\, polarity[19], PWM_AvalonSlave, 1
instance = comp, \polarity[16]\, polarity[16], PWM_AvalonSlave, 1
instance = comp, \Equal2~2\, Equal2~2, PWM_AvalonSlave, 1
instance = comp, \polarity[21]\, polarity[21], PWM_AvalonSlave, 1
instance = comp, \polarity[22]\, polarity[22], PWM_AvalonSlave, 1
instance = comp, \polarity[23]\, polarity[23], PWM_AvalonSlave, 1
instance = comp, \polarity[24]\, polarity[24], PWM_AvalonSlave, 1
instance = comp, \polarity[25]\, polarity[25], PWM_AvalonSlave, 1
instance = comp, \Equal2~4\, Equal2~4, PWM_AvalonSlave, 1
instance = comp, \polarity[27]\, polarity[27], PWM_AvalonSlave, 1
instance = comp, \polarity[30]~feeder\, polarity[30]~feeder, PWM_AvalonSlave, 1
instance = comp, \polarity[30]\, polarity[30], PWM_AvalonSlave, 1
instance = comp, \polarity[28]\, polarity[28], PWM_AvalonSlave, 1
instance = comp, \polarity[31]\, polarity[31], PWM_AvalonSlave, 1
instance = comp, \polarity[29]\, polarity[29], PWM_AvalonSlave, 1
instance = comp, \Equal2~3\, Equal2~3, PWM_AvalonSlave, 1
instance = comp, \Equal2~5\, Equal2~5, PWM_AvalonSlave, 1
instance = comp, \outpwm~0\, outpwm~0, PWM_AvalonSlave, 1
instance = comp, \clk_dc~0\, clk_dc~0, PWM_AvalonSlave, 1
instance = comp, \outpwm~1\, outpwm~1, PWM_AvalonSlave, 1
instance = comp, \outpwm$latch\, outpwm$latch, PWM_AvalonSlave, 1
instance = comp, \~QUARTUS_CREATED_GND~I\, ~QUARTUS_CREATED_GND~I, PWM_AvalonSlave, 1
